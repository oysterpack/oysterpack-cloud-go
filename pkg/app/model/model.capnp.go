// Code generated by capnpc-go. DO NOT EDIT.

package model

import (
	capnp "zombiezen.com/go/capnproto2"
	text "zombiezen.com/go/capnproto2/encoding/text"
	schemas "zombiezen.com/go/capnproto2/schemas"
)

type Domain struct{ capnp.Struct }

// Domain_TypeID is the unique identifier for the type Domain.
const Domain_TypeID = 0x919720e9ef6739b7

func NewDomain(s *capnp.Segment) (Domain, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 40, PointerCount: 1})
	return Domain{st}, err
}

func NewRootDomain(s *capnp.Segment) (Domain, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 40, PointerCount: 1})
	return Domain{st}, err
}

func ReadRootDomain(msg *capnp.Message) (Domain, error) {
	root, err := msg.RootPtr()
	return Domain{root.Struct()}, err
}

func (s Domain) String() string {
	str, _ := text.Marshal(0x919720e9ef6739b7, s.Struct)
	return str
}

func (s Domain) Id() uint64 {
	return s.Struct.Uint64(0)
}

func (s Domain) SetId(v uint64) {
	s.Struct.SetUint64(0, v)
}

func (s Domain) Name() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Domain) HasName() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Domain) NameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Domain) SetName(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Domain) CreatedOn() uint64 {
	return s.Struct.Uint64(8)
}

func (s Domain) SetCreatedOn(v uint64) {
	s.Struct.SetUint64(8, v)
}

func (s Domain) UpdatedOn() uint64 {
	return s.Struct.Uint64(16)
}

func (s Domain) SetUpdatedOn(v uint64) {
	s.Struct.SetUint64(16, v)
}

func (s Domain) DeletedOn() uint64 {
	return s.Struct.Uint64(24)
}

func (s Domain) SetDeletedOn(v uint64) {
	s.Struct.SetUint64(24, v)
}

func (s Domain) ParentDomain() uint64 {
	return s.Struct.Uint64(32)
}

func (s Domain) SetParentDomain(v uint64) {
	s.Struct.SetUint64(32, v)
}

// Domain_List is a list of Domain.
type Domain_List struct{ capnp.List }

// NewDomain creates a new list of Domain.
func NewDomain_List(s *capnp.Segment, sz int32) (Domain_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 40, PointerCount: 1}, sz)
	return Domain_List{l}, err
}

func (s Domain_List) At(i int) Domain { return Domain{s.List.Struct(i)} }

func (s Domain_List) Set(i int, v Domain) error { return s.List.SetStruct(i, v.Struct) }

func (s Domain_List) String() string {
	str, _ := text.MarshalList(0x919720e9ef6739b7, s.List)
	return str
}

// Domain_Promise is a wrapper for a Domain promised by a client call.
type Domain_Promise struct{ *capnp.Pipeline }

func (p Domain_Promise) Struct() (Domain, error) {
	s, err := p.Pipeline.Struct()
	return Domain{s}, err
}

type App struct{ capnp.Struct }

// App_TypeID is the unique identifier for the type App.
const App_TypeID = 0xbb0c08731dac73a6

func NewApp(s *capnp.Segment) (App, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 40, PointerCount: 1})
	return App{st}, err
}

func NewRootApp(s *capnp.Segment) (App, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 40, PointerCount: 1})
	return App{st}, err
}

func ReadRootApp(msg *capnp.Message) (App, error) {
	root, err := msg.RootPtr()
	return App{root.Struct()}, err
}

func (s App) String() string {
	str, _ := text.Marshal(0xbb0c08731dac73a6, s.Struct)
	return str
}

func (s App) DomainId() uint64 {
	return s.Struct.Uint64(0)
}

func (s App) SetDomainId(v uint64) {
	s.Struct.SetUint64(0, v)
}

func (s App) Id() uint64 {
	return s.Struct.Uint64(8)
}

func (s App) SetId(v uint64) {
	s.Struct.SetUint64(8, v)
}

func (s App) Name() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s App) HasName() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s App) NameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s App) SetName(v string) error {
	return s.Struct.SetText(0, v)
}

func (s App) CreatedOn() uint64 {
	return s.Struct.Uint64(16)
}

func (s App) SetCreatedOn(v uint64) {
	s.Struct.SetUint64(16, v)
}

func (s App) UpdatedOn() uint64 {
	return s.Struct.Uint64(24)
}

func (s App) SetUpdatedOn(v uint64) {
	s.Struct.SetUint64(24, v)
}

func (s App) DeletedOn() uint64 {
	return s.Struct.Uint64(32)
}

func (s App) SetDeletedOn(v uint64) {
	s.Struct.SetUint64(32, v)
}

// App_List is a list of App.
type App_List struct{ capnp.List }

// NewApp creates a new list of App.
func NewApp_List(s *capnp.Segment, sz int32) (App_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 40, PointerCount: 1}, sz)
	return App_List{l}, err
}

func (s App_List) At(i int) App { return App{s.List.Struct(i)} }

func (s App_List) Set(i int, v App) error { return s.List.SetStruct(i, v.Struct) }

func (s App_List) String() string {
	str, _ := text.MarshalList(0xbb0c08731dac73a6, s.List)
	return str
}

// App_Promise is a wrapper for a App promised by a client call.
type App_Promise struct{ *capnp.Pipeline }

func (p App_Promise) Struct() (App, error) {
	s, err := p.Pipeline.Struct()
	return App{s}, err
}

type AppRelease struct{ capnp.Struct }

// AppRelease_TypeID is the unique identifier for the type AppRelease.
const AppRelease_TypeID = 0xa2fab062a5262acf

func NewAppRelease(s *capnp.Segment) (AppRelease, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 24, PointerCount: 2})
	return AppRelease{st}, err
}

func NewRootAppRelease(s *capnp.Segment) (AppRelease, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 24, PointerCount: 2})
	return AppRelease{st}, err
}

func ReadRootAppRelease(msg *capnp.Message) (AppRelease, error) {
	root, err := msg.RootPtr()
	return AppRelease{root.Struct()}, err
}

func (s AppRelease) String() string {
	str, _ := text.Marshal(0xa2fab062a5262acf, s.Struct)
	return str
}

func (s AppRelease) AppId() uint64 {
	return s.Struct.Uint64(0)
}

func (s AppRelease) SetAppId(v uint64) {
	s.Struct.SetUint64(0, v)
}

func (s AppRelease) ReleaseId() uint64 {
	return s.Struct.Uint64(8)
}

func (s AppRelease) SetReleaseId(v uint64) {
	s.Struct.SetUint64(8, v)
}

func (s AppRelease) ReleasedOn() uint64 {
	return s.Struct.Uint64(16)
}

func (s AppRelease) SetReleasedOn(v uint64) {
	s.Struct.SetUint64(16, v)
}

func (s AppRelease) ServiceIds() (capnp.UInt64List, error) {
	p, err := s.Struct.Ptr(0)
	return capnp.UInt64List{List: p.List()}, err
}

func (s AppRelease) HasServiceIds() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s AppRelease) SetServiceIds(v capnp.UInt64List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewServiceIds sets the serviceIds field to a newly
// allocated capnp.UInt64List, preferring placement in s's segment.
func (s AppRelease) NewServiceIds(n int32) (capnp.UInt64List, error) {
	l, err := capnp.NewUInt64List(s.Struct.Segment(), n)
	if err != nil {
		return capnp.UInt64List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

func (s AppRelease) DomainDependencies() (capnp.UInt64List, error) {
	p, err := s.Struct.Ptr(1)
	return capnp.UInt64List{List: p.List()}, err
}

func (s AppRelease) HasDomainDependencies() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s AppRelease) SetDomainDependencies(v capnp.UInt64List) error {
	return s.Struct.SetPtr(1, v.List.ToPtr())
}

// NewDomainDependencies sets the domainDependencies field to a newly
// allocated capnp.UInt64List, preferring placement in s's segment.
func (s AppRelease) NewDomainDependencies(n int32) (capnp.UInt64List, error) {
	l, err := capnp.NewUInt64List(s.Struct.Segment(), n)
	if err != nil {
		return capnp.UInt64List{}, err
	}
	err = s.Struct.SetPtr(1, l.List.ToPtr())
	return l, err
}

// AppRelease_List is a list of AppRelease.
type AppRelease_List struct{ capnp.List }

// NewAppRelease creates a new list of AppRelease.
func NewAppRelease_List(s *capnp.Segment, sz int32) (AppRelease_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 24, PointerCount: 2}, sz)
	return AppRelease_List{l}, err
}

func (s AppRelease_List) At(i int) AppRelease { return AppRelease{s.List.Struct(i)} }

func (s AppRelease_List) Set(i int, v AppRelease) error { return s.List.SetStruct(i, v.Struct) }

func (s AppRelease_List) String() string {
	str, _ := text.MarshalList(0xa2fab062a5262acf, s.List)
	return str
}

// AppRelease_Promise is a wrapper for a AppRelease promised by a client call.
type AppRelease_Promise struct{ *capnp.Pipeline }

func (p AppRelease_Promise) Struct() (AppRelease, error) {
	s, err := p.Pipeline.Struct()
	return AppRelease{s}, err
}

type ServiceConfig struct{ capnp.Struct }

// ServiceConfig_TypeID is the unique identifier for the type ServiceConfig.
const ServiceConfig_TypeID = 0xbecdd492fe0f4023

func NewServiceConfig(s *capnp.Segment) (ServiceConfig, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 40, PointerCount: 0})
	return ServiceConfig{st}, err
}

func NewRootServiceConfig(s *capnp.Segment) (ServiceConfig, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 40, PointerCount: 0})
	return ServiceConfig{st}, err
}

func ReadRootServiceConfig(msg *capnp.Message) (ServiceConfig, error) {
	root, err := msg.RootPtr()
	return ServiceConfig{root.Struct()}, err
}

func (s ServiceConfig) String() string {
	str, _ := text.Marshal(0xbecdd492fe0f4023, s.Struct)
	return str
}

func (s ServiceConfig) ServiceId() uint64 {
	return s.Struct.Uint64(0)
}

func (s ServiceConfig) SetServiceId(v uint64) {
	s.Struct.SetUint64(0, v)
}

func (s ServiceConfig) Config() uint64 {
	return s.Struct.Uint64(8)
}

func (s ServiceConfig) SetConfig(v uint64) {
	s.Struct.SetUint64(8, v)
}

func (s ServiceConfig) CreatedOn() uint64 {
	return s.Struct.Uint64(16)
}

func (s ServiceConfig) SetCreatedOn(v uint64) {
	s.Struct.SetUint64(16, v)
}

func (s ServiceConfig) UpdatedOn() uint64 {
	return s.Struct.Uint64(24)
}

func (s ServiceConfig) SetUpdatedOn(v uint64) {
	s.Struct.SetUint64(24, v)
}

func (s ServiceConfig) DeletedOn() uint64 {
	return s.Struct.Uint64(32)
}

func (s ServiceConfig) SetDeletedOn(v uint64) {
	s.Struct.SetUint64(32, v)
}

// ServiceConfig_List is a list of ServiceConfig.
type ServiceConfig_List struct{ capnp.List }

// NewServiceConfig creates a new list of ServiceConfig.
func NewServiceConfig_List(s *capnp.Segment, sz int32) (ServiceConfig_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 40, PointerCount: 0}, sz)
	return ServiceConfig_List{l}, err
}

func (s ServiceConfig_List) At(i int) ServiceConfig { return ServiceConfig{s.List.Struct(i)} }

func (s ServiceConfig_List) Set(i int, v ServiceConfig) error { return s.List.SetStruct(i, v.Struct) }

func (s ServiceConfig_List) String() string {
	str, _ := text.MarshalList(0xbecdd492fe0f4023, s.List)
	return str
}

// ServiceConfig_Promise is a wrapper for a ServiceConfig promised by a client call.
type ServiceConfig_Promise struct{ *capnp.Pipeline }

func (p ServiceConfig_Promise) Struct() (ServiceConfig, error) {
	s, err := p.Pipeline.Struct()
	return ServiceConfig{s}, err
}

const schema_db8274f9144abc7e = "x\xda\xb4\x92\xcfKTQ\x1c\xc5\xcf\xb9\xdf\xf7*a" +
	"P\x1e\xf3\x16\x11\x84B\xd0B(*W\xb9\xd1\xc8\xcd" +
	"\x08\xa2w\"\xa2v\xafy7\x99p\xde<f,Z" +
	"T\x94\x14\x18\xb4\xc8\x10J1\xd0\xc8P0P\x08\xfa" +
	"%\xad\x82\xdaDP\xed\xfa\x0bZ\x85\x8b\x16\xb5\xe8\xc5" +
	"uf|6\xba\x93v\x97s\x0f\x97s>\xe7\x1e\xf9" +
	"\xc2^u\xd4}\xaf\x00\xdd\xe1\xeeJ^\x1c\x1f\xfe\xf1" +
	"\xbd\xe3\xc1\x04t\x86nr}\xb5\xdf\xff5:\xf6\x0d" +
	".w\x03\xd9\x1c\xa7\xb3\xda\x9e\xba\x06x\x86`\xf2\xa9" +
	"\xf3\xe0\xfc\xf9\xe5\xdf\x8f\xad[6\xb9\x95u/\xaa\xd7" +
	"\xd9\x15{\xeaz\xa6\xda\xad\xfbiui\x7fuO\xe6" +
	"\xcd\xb6o\xaf\xc9X\xf6\xa7X\xf7\x9a\xac\xbf}\xa0\xb7" +
	"\xed\xcf\xfd\xaf\x1f\xdf6\xb9\x1dk\x1ep?g\xcf\xba" +
	"\xd6|\xdam'\x0e%\xa5rhF\x0e\x17\x02\xc6Q" +
	"\xdc\xddW.\x05R\x8c\x86H\xbdW\x1c\xc0!\xe0M" +
	"\xed\x03\xf4\xa4P\xcf*\x92>\xad\xf6\xa8\x13\xd0\x0f\x85" +
	"\xfa\x89\xa2\xa7\xe8S\x01\xde\\\x1e\xd0\xb3B\xbd\xa4\xe8" +
	"\x89\xf2)\x80\xb7h\xc5\x05\xa1~\xae\xe89\xe2\xd3\x01" +
	"\xbc\x15+.\x0b\xf5\xaa\xa2\xe7:>]\xc0{u\x11" +
	"\xd0/\x85\xfa\x9d\xa2\x14C\xb6@\xb1\x05l\x8b\x82\x92" +
	"a\x06\x8a\x190)TL0j\xc2A0j\x18\x92" +
	"Kq\xb8E\x0b\xcd\x88i\xd6\xe2\xa0b\xa2\xd1\xbe2" +
	"\xdaJA1\x95\xff!p\"\x8e\xf3=f\xc4\x04U" +
	"c)\xf8\x1b\x14\xae\x1d\x03\xf4\x15\xa1\xbe\xa5\xe850" +
	"\xdc\xb4=n\x08\xf5]\x8bA\xd50\xdc9\x07\xe8q" +
	"\xa1\x9eT\xa4\xd4(LX\xed^\x1d\x8d\xc3\x1a\x85\xc5" +
	"i@/\x09\xf5\x07\xc5\xf6 \x8es\x1b\x9d\x93J-" +
	"B\x0e\xdc\xa2\x85\x90\xc14|\xd5T.\x17\x0b&\x07" +
	"\x09\xabl\x05\x87\x84\xebw\xad\x96A\xd9\xf6\xec3\x8c" +
	"M\x14\x9a\xa8P\x14\xb3\xc5\xd3\\\x1eM\xdb\xf7o\xda" +
	"\xb9\xd1z\xce~\x88\x19\xa1^Pd\xbd\xf4|\xe7\xce" +
	"\xb6\xcf\xa7\xdb\xd7s\xe7B\x00\x8d\x9e\xff\xe5?4\xba" +
	"+\xdb\xfdT\x0d\xe4\xc9rt\xa1\xc8\xe1\xa6\xedm\xba" +
	"\xabB=\xbe\x89\xc2\xed\xee\xed\xb6\xcf\xa7\xdb{\xd2\x18" +
	"?_\x1f\x7f\xc6bpj\x18\xa6\xf2)\xd9t\xc5t" +
	"\xee\x9e\x82M2\xbc\x11v\x07E\xff\x06\x00\x00\xff\xff" +
	"\xad&\xfez"

func init() {
	schemas.Register(schema_db8274f9144abc7e,
		0x919720e9ef6739b7,
		0xa2fab062a5262acf,
		0xbb0c08731dac73a6,
		0xbecdd492fe0f4023)
}
