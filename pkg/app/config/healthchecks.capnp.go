// Code generated by capnpc-go. DO NOT EDIT.

package config

import (
	capnp "zombiezen.com/go/capnproto2"
	text "zombiezen.com/go/capnproto2/encoding/text"
	schemas "zombiezen.com/go/capnproto2/schemas"
)

type HealthCheckServiceSpec struct{ capnp.Struct }

// HealthCheckServiceSpec_TypeID is the unique identifier for the type HealthCheckServiceSpec.
const HealthCheckServiceSpec_TypeID = 0xf61f7c33b286f52f

func NewHealthCheckServiceSpec(s *capnp.Segment) (HealthCheckServiceSpec, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return HealthCheckServiceSpec{st}, err
}

func NewRootHealthCheckServiceSpec(s *capnp.Segment) (HealthCheckServiceSpec, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return HealthCheckServiceSpec{st}, err
}

func ReadRootHealthCheckServiceSpec(msg *capnp.Message) (HealthCheckServiceSpec, error) {
	root, err := msg.RootPtr()
	return HealthCheckServiceSpec{root.Struct()}, err
}

func (s HealthCheckServiceSpec) String() string {
	str, _ := text.Marshal(0xf61f7c33b286f52f, s.Struct)
	return str
}

func (s HealthCheckServiceSpec) HealthCheckSpecs() (HealthCheckSpec_List, error) {
	p, err := s.Struct.Ptr(0)
	return HealthCheckSpec_List{List: p.List()}, err
}

func (s HealthCheckServiceSpec) HasHealthCheckSpecs() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s HealthCheckServiceSpec) SetHealthCheckSpecs(v HealthCheckSpec_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewHealthCheckSpecs sets the healthCheckSpecs field to a newly
// allocated HealthCheckSpec_List, preferring placement in s's segment.
func (s HealthCheckServiceSpec) NewHealthCheckSpecs(n int32) (HealthCheckSpec_List, error) {
	l, err := NewHealthCheckSpec_List(s.Struct.Segment(), n)
	if err != nil {
		return HealthCheckSpec_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// HealthCheckServiceSpec_List is a list of HealthCheckServiceSpec.
type HealthCheckServiceSpec_List struct{ capnp.List }

// NewHealthCheckServiceSpec creates a new list of HealthCheckServiceSpec.
func NewHealthCheckServiceSpec_List(s *capnp.Segment, sz int32) (HealthCheckServiceSpec_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return HealthCheckServiceSpec_List{l}, err
}

func (s HealthCheckServiceSpec_List) At(i int) HealthCheckServiceSpec {
	return HealthCheckServiceSpec{s.List.Struct(i)}
}

func (s HealthCheckServiceSpec_List) Set(i int, v HealthCheckServiceSpec) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s HealthCheckServiceSpec_List) String() string {
	str, _ := text.MarshalList(0xf61f7c33b286f52f, s.List)
	return str
}

// HealthCheckServiceSpec_Promise is a wrapper for a HealthCheckServiceSpec promised by a client call.
type HealthCheckServiceSpec_Promise struct{ *capnp.Pipeline }

func (p HealthCheckServiceSpec_Promise) Struct() (HealthCheckServiceSpec, error) {
	s, err := p.Pipeline.Struct()
	return HealthCheckServiceSpec{s}, err
}

type HealthCheckSpec struct{ capnp.Struct }

// HealthCheckSpec_TypeID is the unique identifier for the type HealthCheckSpec.
const HealthCheckSpec_TypeID = 0xe65df7cace0dd1c2

func NewHealthCheckSpec(s *capnp.Segment) (HealthCheckSpec, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 0})
	return HealthCheckSpec{st}, err
}

func NewRootHealthCheckSpec(s *capnp.Segment) (HealthCheckSpec, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 0})
	return HealthCheckSpec{st}, err
}

func ReadRootHealthCheckSpec(msg *capnp.Message) (HealthCheckSpec, error) {
	root, err := msg.RootPtr()
	return HealthCheckSpec{root.Struct()}, err
}

func (s HealthCheckSpec) String() string {
	str, _ := text.Marshal(0xe65df7cace0dd1c2, s.Struct)
	return str
}

func (s HealthCheckSpec) HealthCheckID() uint64 {
	return s.Struct.Uint64(0)
}

func (s HealthCheckSpec) SetHealthCheckID(v uint64) {
	s.Struct.SetUint64(0, v)
}

func (s HealthCheckSpec) RunIntervalSeconds() uint16 {
	return s.Struct.Uint16(8)
}

func (s HealthCheckSpec) SetRunIntervalSeconds(v uint16) {
	s.Struct.SetUint16(8, v)
}

func (s HealthCheckSpec) TimeoutSeconds() uint8 {
	return s.Struct.Uint8(10)
}

func (s HealthCheckSpec) SetTimeoutSeconds(v uint8) {
	s.Struct.SetUint8(10, v)
}

// HealthCheckSpec_List is a list of HealthCheckSpec.
type HealthCheckSpec_List struct{ capnp.List }

// NewHealthCheckSpec creates a new list of HealthCheckSpec.
func NewHealthCheckSpec_List(s *capnp.Segment, sz int32) (HealthCheckSpec_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 16, PointerCount: 0}, sz)
	return HealthCheckSpec_List{l}, err
}

func (s HealthCheckSpec_List) At(i int) HealthCheckSpec { return HealthCheckSpec{s.List.Struct(i)} }

func (s HealthCheckSpec_List) Set(i int, v HealthCheckSpec) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s HealthCheckSpec_List) String() string {
	str, _ := text.MarshalList(0xe65df7cace0dd1c2, s.List)
	return str
}

// HealthCheckSpec_Promise is a wrapper for a HealthCheckSpec promised by a client call.
type HealthCheckSpec_Promise struct{ *capnp.Pipeline }

func (p HealthCheckSpec_Promise) Struct() (HealthCheckSpec, error) {
	s, err := p.Pipeline.Struct()
	return HealthCheckSpec{s}, err
}

const schema_e42204a141ec4e6f = "x\xdat\x911k\x14A\x1c\xc5\xdf\xfb\xcf\xdc\x1d\x09" +
	"\x89\xdc\xb2\xa9D\xb9El\x04\x8d\x84kD\x90\x18\x12" +
	"!\x11Nn<,\x15\x96qd\xc3\x9d\xbb\xcb\xde\\" +
	"\x14\xb1\x14\x8b\x80\xa0\xd8\xd9\x88\x9f@\xb0\xb7P\xb4\xb1" +
	"\x10m\xfc\x04be\xab\x96#{\x9c9\x11\xd3>\xde" +
	"\xfc\x1e\xf3\xfb\xb7\xdf\\\x94\xb5F!\x809\xd6h\x86" +
	"\xb7\x9f\x97?~\xf8u\xfd\x1bLL\x09\xc5\x95\xef\x1b" +
	"/\xf4\x89\xaf\xd0-\xa0{\x9cG\x19\x9fa\x0b\x88O" +
	"\xf1%\x18\xce\xfex\xf8\xaa{\xbf\xf3\x13Q\xccy\xb7" +
	"Q7\xba\x17\xe4*c#u\xb9'\xeb8\x172\x97" +
	"\x8e|f3\xe5\xecp\xbcj\xd32/\xcfoO\xb3" +
	"\xcd\xcc\xd9\xe1\xa0T\xce\xf6I\xb3\xa44\xa0\x09D\x97" +
	"*\xc0l)\x9a\xbe0\xa2^a\x1d\xf6\x9eE\xd7:" +
	"\xe6\x81\xa2y,\x8cdq\x85\x02D\x8f\xeeEO:" +
	"\xe6\x9d\xa2\xf9$\x9cMmf\xe88;\xdc\xd9\xe2\x02" +
	"\x84\x0b`\xa8&\xf9N\xee]\xc5\xbdt4p\xb6\xc8" +
	"\xd5\xcd\xb1\xd1\x94p\xe3\xe9s\xf3\xfa\xcb\xfe{\x18-" +
	"\xdcH\xc8%`\x8d\x8b\x0c\xdb\xc5\x9d\xa4\xb8\xe5\x9d\xca" +
	"\x13_$\xd5$O|\xe6\x92?_qv\x08\xb2\x05" +
	"a\x0b\x0c~\xf7\xb6+&~\x80\xf5\x1a\xfd_\xf2\xc9" +
	"\x19\xf92C/\xbd\x9b\xd4/t\x0dNG\x85\xff\x97" +
	"<\x1b\\\x05\xd9\x84\xb0\x09\x1e(\xd4\x87(t\xd5\xde" +
	"\xaeu\x83\xd2qjR\x1f\x98\\\xde\x07L[\xd1\x9c" +
	"\xfe\xcb\x0e\xa7\xd6\x9d\x1d\x03<\x02\xf6\x15\xd9\x9e\xdf\x1f" +
	"\xac\xc3\xdf\x01\x00\x00\xff\xff?g\x95\xc9"

func init() {
	schemas.Register(schema_e42204a141ec4e6f,
		0xe65df7cace0dd1c2,
		0xf61f7c33b286f52f)
}
