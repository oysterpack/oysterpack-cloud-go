// Code generated by capnpc-go. DO NOT EDIT.

package config

import (
	capnp "zombiezen.com/go/capnproto2"
	text "zombiezen.com/go/capnproto2/encoding/text"
	schemas "zombiezen.com/go/capnproto2/schemas"
)

type HealthCheckServiceSpec struct{ capnp.Struct }

// HealthCheckServiceSpec_TypeID is the unique identifier for the type HealthCheckServiceSpec.
const HealthCheckServiceSpec_TypeID = 0xf61f7c33b286f52f

func NewHealthCheckServiceSpec(s *capnp.Segment) (HealthCheckServiceSpec, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return HealthCheckServiceSpec{st}, err
}

func NewRootHealthCheckServiceSpec(s *capnp.Segment) (HealthCheckServiceSpec, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return HealthCheckServiceSpec{st}, err
}

func ReadRootHealthCheckServiceSpec(msg *capnp.Message) (HealthCheckServiceSpec, error) {
	root, err := msg.RootPtr()
	return HealthCheckServiceSpec{root.Struct()}, err
}

func (s HealthCheckServiceSpec) String() string {
	str, _ := text.Marshal(0xf61f7c33b286f52f, s.Struct)
	return str
}

func (s HealthCheckServiceSpec) HealthCheckSpecs() (HealthCheckSpec_List, error) {
	p, err := s.Struct.Ptr(0)
	return HealthCheckSpec_List{List: p.List()}, err
}

func (s HealthCheckServiceSpec) HasHealthCheckSpecs() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s HealthCheckServiceSpec) SetHealthCheckSpecs(v HealthCheckSpec_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewHealthCheckSpecs sets the healthCheckSpecs field to a newly
// allocated HealthCheckSpec_List, preferring placement in s's segment.
func (s HealthCheckServiceSpec) NewHealthCheckSpecs(n int32) (HealthCheckSpec_List, error) {
	l, err := NewHealthCheckSpec_List(s.Struct.Segment(), n)
	if err != nil {
		return HealthCheckSpec_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

func (s HealthCheckServiceSpec) CommandServerChanSize() uint8 {
	return s.Struct.Uint8(0)
}

func (s HealthCheckServiceSpec) SetCommandServerChanSize(v uint8) {
	s.Struct.SetUint8(0, v)
}

// HealthCheckServiceSpec_List is a list of HealthCheckServiceSpec.
type HealthCheckServiceSpec_List struct{ capnp.List }

// NewHealthCheckServiceSpec creates a new list of HealthCheckServiceSpec.
func NewHealthCheckServiceSpec_List(s *capnp.Segment, sz int32) (HealthCheckServiceSpec_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return HealthCheckServiceSpec_List{l}, err
}

func (s HealthCheckServiceSpec_List) At(i int) HealthCheckServiceSpec {
	return HealthCheckServiceSpec{s.List.Struct(i)}
}

func (s HealthCheckServiceSpec_List) Set(i int, v HealthCheckServiceSpec) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s HealthCheckServiceSpec_List) String() string {
	str, _ := text.MarshalList(0xf61f7c33b286f52f, s.List)
	return str
}

// HealthCheckServiceSpec_Promise is a wrapper for a HealthCheckServiceSpec promised by a client call.
type HealthCheckServiceSpec_Promise struct{ *capnp.Pipeline }

func (p HealthCheckServiceSpec_Promise) Struct() (HealthCheckServiceSpec, error) {
	s, err := p.Pipeline.Struct()
	return HealthCheckServiceSpec{s}, err
}

type HealthCheckSpec struct{ capnp.Struct }

// HealthCheckSpec_TypeID is the unique identifier for the type HealthCheckSpec.
const HealthCheckSpec_TypeID = 0xe65df7cace0dd1c2

func NewHealthCheckSpec(s *capnp.Segment) (HealthCheckSpec, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 0})
	return HealthCheckSpec{st}, err
}

func NewRootHealthCheckSpec(s *capnp.Segment) (HealthCheckSpec, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 0})
	return HealthCheckSpec{st}, err
}

func ReadRootHealthCheckSpec(msg *capnp.Message) (HealthCheckSpec, error) {
	root, err := msg.RootPtr()
	return HealthCheckSpec{root.Struct()}, err
}

func (s HealthCheckSpec) String() string {
	str, _ := text.Marshal(0xe65df7cace0dd1c2, s.Struct)
	return str
}

func (s HealthCheckSpec) HealthCheckID() uint64 {
	return s.Struct.Uint64(0)
}

func (s HealthCheckSpec) SetHealthCheckID(v uint64) {
	s.Struct.SetUint64(0, v)
}

func (s HealthCheckSpec) RunIntervalSeconds() uint16 {
	return s.Struct.Uint16(8)
}

func (s HealthCheckSpec) SetRunIntervalSeconds(v uint16) {
	s.Struct.SetUint16(8, v)
}

func (s HealthCheckSpec) TimeoutSeconds() uint8 {
	return s.Struct.Uint8(10)
}

func (s HealthCheckSpec) SetTimeoutSeconds(v uint8) {
	s.Struct.SetUint8(10, v)
}

// HealthCheckSpec_List is a list of HealthCheckSpec.
type HealthCheckSpec_List struct{ capnp.List }

// NewHealthCheckSpec creates a new list of HealthCheckSpec.
func NewHealthCheckSpec_List(s *capnp.Segment, sz int32) (HealthCheckSpec_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 16, PointerCount: 0}, sz)
	return HealthCheckSpec_List{l}, err
}

func (s HealthCheckSpec_List) At(i int) HealthCheckSpec { return HealthCheckSpec{s.List.Struct(i)} }

func (s HealthCheckSpec_List) Set(i int, v HealthCheckSpec) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s HealthCheckSpec_List) String() string {
	str, _ := text.MarshalList(0xe65df7cace0dd1c2, s.List)
	return str
}

// HealthCheckSpec_Promise is a wrapper for a HealthCheckSpec promised by a client call.
type HealthCheckSpec_Promise struct{ *capnp.Pipeline }

func (p HealthCheckSpec_Promise) Struct() (HealthCheckSpec, error) {
	s, err := p.Pipeline.Struct()
	return HealthCheckSpec{s}, err
}

const schema_e42204a141ec4e6f = "x\xdat\x92\xc1k\x13A\x18\xc5\xdf\x9b\xd9$\xb6T" +
	"\xe9\x92\x9eD\xd9E\xbc\x14\xb4Rr\x11A\xb4\xa4\x85" +
	"T\x88d\\=*,\xd3O6$\xd9\x0d\x9bM*" +
	"\xc5\xa3x(\x08\x8a7/\xe2_ \xf4\xeeE\xf4\xe2" +
	"A\xd4\x83\x7f\x81x\xf2\xaa\x1eG6\xa6\x8d\x88^\x1f" +
	"o~\xdf\xcco\xbe\xe5OW\xd5z%S\x809U" +
	"\xa9\xba\xd7\x1f\x8f\xbf\x7f\xf7\xf3\xf6W\x98:\x95\xcb\xae" +
	"\x7f\xdbx\xe1\x9d\xf9\x02\xaf\x064N\xf3$\xeb\xe7Y" +
	"\x03\xea\xab|\x09\xba\x0b\xdf\x1f\x1e4\xee\x07?\xca2" +
	"\xe7\xe5JYi\\V7X7\xaal\xb7\xd5.." +
	"\xbaD\xe2~\x91\xd8D\x8b\xed\x8d\xd6l<L\x87\x97" +
	"Z\xd3\xac\x99\x88\xedEC-\xb6C\x9a%\xed\x01\x1e" +
	"\x01\x7f+\x07\xcc\xa6\xa6\xe9(\xfa\xf4VX\x86\xedg" +
	"\xfe\xad\xc0<\xd04\x8f\x15}\xb5\xb8B\x05\xf8\x8f\xf6" +
	"\xfc'\x81y\xa3i>(\xceF5\x13\x04b{\xdb" +
	"\x9b\\\x80\xe2\x02\xe8\xf2q\xba\x9d\x16\x92s\x12\xf7#" +
	"\xb1Y\xaawF\xc6\xa3rw\x9e>7\xaf>\xef\xbf" +
	"\x85\xf1\x147Br\x09X\xe7\"]+\xdb\x0d\xb3\xbb" +
	"\x85\xe84,\xb20\x1f\xa7a\x91Hx\xf8\x14\xb1=" +
	"\x905(\xd6@Wt\x07\x92\x8d\x8b\x08WJ\xf4?" +
	"\xc9gg\xe4kt\xed\xf8^X\x9e\xf0Jp\xdc\xcf" +
	"\x8a\xbf\xc9\xb3\x81k \xabP\xac\x82G\x0a\xbd\xff(" +
	"\x94|\xd2\xb5\x12\x0d\x85S\x93\xc7\x8eL\xae\xee\x03\xe6" +
	"\x9c\xa6i)\x92\xbfEn\x1d\x00\xa6\xa5in\xfea" +
	"\x8c\xd3\x9f\x10;\x02x\x02\xechry\xbe\x14`\x19" +
	":\x9b\x0d\x06q\xba\x13Q\xf2\x89\xe4\xcd$\x0e\xd2\xa8" +
	"\xbb'\x87\xd7\xfc\x15\x00\x00\xff\xffzu\xa2\xab"

func init() {
	schemas.Register(schema_e42204a141ec4e6f,
		0xe65df7cace0dd1c2,
		0xf61f7c33b286f52f)
}
