// Code generated by capnpc-go. DO NOT EDIT.

package capnprpc

import (
	math "math"

	context "golang.org/x/net/context"
	capnp "zombiezen.com/go/capnproto2"
	text "zombiezen.com/go/capnproto2/encoding/text"
	schemas "zombiezen.com/go/capnproto2/schemas"
	server "zombiezen.com/go/capnproto2/server"
)

type App struct{ Client capnp.Client }

// App_TypeID is the unique identifier for the type App.
const App_TypeID = 0xf052e7e084b31199

func (c App) Id(ctx context.Context, params func(App_id_Params) error, opts ...capnp.CallOption) App_id_Results_Promise {
	if c.Client == nil {
		return App_id_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xf052e7e084b31199,
			MethodID:      0,
			InterfaceName: "app.capnp:App",
			MethodName:    "id",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(App_id_Params{Struct: s}) }
	}
	return App_id_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c App) ReleaseId(ctx context.Context, params func(App_releaseId_Params) error, opts ...capnp.CallOption) App_releaseId_Results_Promise {
	if c.Client == nil {
		return App_releaseId_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xf052e7e084b31199,
			MethodID:      1,
			InterfaceName: "app.capnp:App",
			MethodName:    "releaseId",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(App_releaseId_Params{Struct: s}) }
	}
	return App_releaseId_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c App) Instance(ctx context.Context, params func(App_instance_Params) error, opts ...capnp.CallOption) App_instance_Results_Promise {
	if c.Client == nil {
		return App_instance_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xf052e7e084b31199,
			MethodID:      2,
			InterfaceName: "app.capnp:App",
			MethodName:    "instance",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(App_instance_Params{Struct: s}) }
	}
	return App_instance_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c App) StartedOn(ctx context.Context, params func(App_startedOn_Params) error, opts ...capnp.CallOption) App_startedOn_Results_Promise {
	if c.Client == nil {
		return App_startedOn_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xf052e7e084b31199,
			MethodID:      3,
			InterfaceName: "app.capnp:App",
			MethodName:    "startedOn",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(App_startedOn_Params{Struct: s}) }
	}
	return App_startedOn_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c App) LogLevel(ctx context.Context, params func(App_logLevel_Params) error, opts ...capnp.CallOption) App_logLevel_Results_Promise {
	if c.Client == nil {
		return App_logLevel_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xf052e7e084b31199,
			MethodID:      4,
			InterfaceName: "app.capnp:App",
			MethodName:    "logLevel",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(App_logLevel_Params{Struct: s}) }
	}
	return App_logLevel_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c App) ServiceIds(ctx context.Context, params func(App_serviceIds_Params) error, opts ...capnp.CallOption) App_serviceIds_Results_Promise {
	if c.Client == nil {
		return App_serviceIds_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xf052e7e084b31199,
			MethodID:      5,
			InterfaceName: "app.capnp:App",
			MethodName:    "serviceIds",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(App_serviceIds_Params{Struct: s}) }
	}
	return App_serviceIds_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c App) Service(ctx context.Context, params func(App_service_Params) error, opts ...capnp.CallOption) App_service_Results_Promise {
	if c.Client == nil {
		return App_service_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xf052e7e084b31199,
			MethodID:      6,
			InterfaceName: "app.capnp:App",
			MethodName:    "service",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(App_service_Params{Struct: s}) }
	}
	return App_service_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c App) RpcServiceIds(ctx context.Context, params func(App_rpcServiceIds_Params) error, opts ...capnp.CallOption) App_rpcServiceIds_Results_Promise {
	if c.Client == nil {
		return App_rpcServiceIds_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xf052e7e084b31199,
			MethodID:      7,
			InterfaceName: "app.capnp:App",
			MethodName:    "rpcServiceIds",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(App_rpcServiceIds_Params{Struct: s}) }
	}
	return App_rpcServiceIds_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c App) RpcService(ctx context.Context, params func(App_rpcService_Params) error, opts ...capnp.CallOption) App_rpcService_Results_Promise {
	if c.Client == nil {
		return App_rpcService_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xf052e7e084b31199,
			MethodID:      8,
			InterfaceName: "app.capnp:App",
			MethodName:    "rpcService",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(App_rpcService_Params{Struct: s}) }
	}
	return App_rpcService_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c App) Kill(ctx context.Context, params func(App_kill_Params) error, opts ...capnp.CallOption) App_kill_Results_Promise {
	if c.Client == nil {
		return App_kill_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xf052e7e084b31199,
			MethodID:      9,
			InterfaceName: "app.capnp:App",
			MethodName:    "kill",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(App_kill_Params{Struct: s}) }
	}
	return App_kill_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c App) Runtime(ctx context.Context, params func(App_runtime_Params) error, opts ...capnp.CallOption) App_runtime_Results_Promise {
	if c.Client == nil {
		return App_runtime_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xf052e7e084b31199,
			MethodID:      10,
			InterfaceName: "app.capnp:App",
			MethodName:    "runtime",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(App_runtime_Params{Struct: s}) }
	}
	return App_runtime_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}

type App_Server interface {
	Id(App_id) error

	ReleaseId(App_releaseId) error

	Instance(App_instance) error

	StartedOn(App_startedOn) error

	LogLevel(App_logLevel) error

	ServiceIds(App_serviceIds) error

	Service(App_service) error

	RpcServiceIds(App_rpcServiceIds) error

	RpcService(App_rpcService) error

	Kill(App_kill) error

	Runtime(App_runtime) error
}

func App_ServerToClient(s App_Server) App {
	c, _ := s.(server.Closer)
	return App{Client: server.New(App_Methods(nil, s), c)}
}

func App_Methods(methods []server.Method, s App_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 11)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xf052e7e084b31199,
			MethodID:      0,
			InterfaceName: "app.capnp:App",
			MethodName:    "id",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := App_id{c, opts, App_id_Params{Struct: p}, App_id_Results{Struct: r}}
			return s.Id(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xf052e7e084b31199,
			MethodID:      1,
			InterfaceName: "app.capnp:App",
			MethodName:    "releaseId",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := App_releaseId{c, opts, App_releaseId_Params{Struct: p}, App_releaseId_Results{Struct: r}}
			return s.ReleaseId(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xf052e7e084b31199,
			MethodID:      2,
			InterfaceName: "app.capnp:App",
			MethodName:    "instance",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := App_instance{c, opts, App_instance_Params{Struct: p}, App_instance_Results{Struct: r}}
			return s.Instance(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xf052e7e084b31199,
			MethodID:      3,
			InterfaceName: "app.capnp:App",
			MethodName:    "startedOn",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := App_startedOn{c, opts, App_startedOn_Params{Struct: p}, App_startedOn_Results{Struct: r}}
			return s.StartedOn(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xf052e7e084b31199,
			MethodID:      4,
			InterfaceName: "app.capnp:App",
			MethodName:    "logLevel",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := App_logLevel{c, opts, App_logLevel_Params{Struct: p}, App_logLevel_Results{Struct: r}}
			return s.LogLevel(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xf052e7e084b31199,
			MethodID:      5,
			InterfaceName: "app.capnp:App",
			MethodName:    "serviceIds",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := App_serviceIds{c, opts, App_serviceIds_Params{Struct: p}, App_serviceIds_Results{Struct: r}}
			return s.ServiceIds(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xf052e7e084b31199,
			MethodID:      6,
			InterfaceName: "app.capnp:App",
			MethodName:    "service",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := App_service{c, opts, App_service_Params{Struct: p}, App_service_Results{Struct: r}}
			return s.Service(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xf052e7e084b31199,
			MethodID:      7,
			InterfaceName: "app.capnp:App",
			MethodName:    "rpcServiceIds",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := App_rpcServiceIds{c, opts, App_rpcServiceIds_Params{Struct: p}, App_rpcServiceIds_Results{Struct: r}}
			return s.RpcServiceIds(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xf052e7e084b31199,
			MethodID:      8,
			InterfaceName: "app.capnp:App",
			MethodName:    "rpcService",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := App_rpcService{c, opts, App_rpcService_Params{Struct: p}, App_rpcService_Results{Struct: r}}
			return s.RpcService(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xf052e7e084b31199,
			MethodID:      9,
			InterfaceName: "app.capnp:App",
			MethodName:    "kill",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := App_kill{c, opts, App_kill_Params{Struct: p}, App_kill_Results{Struct: r}}
			return s.Kill(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xf052e7e084b31199,
			MethodID:      10,
			InterfaceName: "app.capnp:App",
			MethodName:    "runtime",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := App_runtime{c, opts, App_runtime_Params{Struct: p}, App_runtime_Results{Struct: r}}
			return s.Runtime(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	return methods
}

// App_id holds the arguments for a server call to App.id.
type App_id struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  App_id_Params
	Results App_id_Results
}

// App_releaseId holds the arguments for a server call to App.releaseId.
type App_releaseId struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  App_releaseId_Params
	Results App_releaseId_Results
}

// App_instance holds the arguments for a server call to App.instance.
type App_instance struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  App_instance_Params
	Results App_instance_Results
}

// App_startedOn holds the arguments for a server call to App.startedOn.
type App_startedOn struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  App_startedOn_Params
	Results App_startedOn_Results
}

// App_logLevel holds the arguments for a server call to App.logLevel.
type App_logLevel struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  App_logLevel_Params
	Results App_logLevel_Results
}

// App_serviceIds holds the arguments for a server call to App.serviceIds.
type App_serviceIds struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  App_serviceIds_Params
	Results App_serviceIds_Results
}

// App_service holds the arguments for a server call to App.service.
type App_service struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  App_service_Params
	Results App_service_Results
}

// App_rpcServiceIds holds the arguments for a server call to App.rpcServiceIds.
type App_rpcServiceIds struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  App_rpcServiceIds_Params
	Results App_rpcServiceIds_Results
}

// App_rpcService holds the arguments for a server call to App.rpcService.
type App_rpcService struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  App_rpcService_Params
	Results App_rpcService_Results
}

// App_kill holds the arguments for a server call to App.kill.
type App_kill struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  App_kill_Params
	Results App_kill_Results
}

// App_runtime holds the arguments for a server call to App.runtime.
type App_runtime struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  App_runtime_Params
	Results App_runtime_Results
}

type App_id_Params struct{ capnp.Struct }

// App_id_Params_TypeID is the unique identifier for the type App_id_Params.
const App_id_Params_TypeID = 0xa56ff1a4dc4cdcd8

func NewApp_id_Params(s *capnp.Segment) (App_id_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return App_id_Params{st}, err
}

func NewRootApp_id_Params(s *capnp.Segment) (App_id_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return App_id_Params{st}, err
}

func ReadRootApp_id_Params(msg *capnp.Message) (App_id_Params, error) {
	root, err := msg.RootPtr()
	return App_id_Params{root.Struct()}, err
}

func (s App_id_Params) String() string {
	str, _ := text.Marshal(0xa56ff1a4dc4cdcd8, s.Struct)
	return str
}

// App_id_Params_List is a list of App_id_Params.
type App_id_Params_List struct{ capnp.List }

// NewApp_id_Params creates a new list of App_id_Params.
func NewApp_id_Params_List(s *capnp.Segment, sz int32) (App_id_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return App_id_Params_List{l}, err
}

func (s App_id_Params_List) At(i int) App_id_Params { return App_id_Params{s.List.Struct(i)} }

func (s App_id_Params_List) Set(i int, v App_id_Params) error { return s.List.SetStruct(i, v.Struct) }

func (s App_id_Params_List) String() string {
	str, _ := text.MarshalList(0xa56ff1a4dc4cdcd8, s.List)
	return str
}

// App_id_Params_Promise is a wrapper for a App_id_Params promised by a client call.
type App_id_Params_Promise struct{ *capnp.Pipeline }

func (p App_id_Params_Promise) Struct() (App_id_Params, error) {
	s, err := p.Pipeline.Struct()
	return App_id_Params{s}, err
}

type App_id_Results struct{ capnp.Struct }

// App_id_Results_TypeID is the unique identifier for the type App_id_Results.
const App_id_Results_TypeID = 0xd2592928fa547bc6

func NewApp_id_Results(s *capnp.Segment) (App_id_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return App_id_Results{st}, err
}

func NewRootApp_id_Results(s *capnp.Segment) (App_id_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return App_id_Results{st}, err
}

func ReadRootApp_id_Results(msg *capnp.Message) (App_id_Results, error) {
	root, err := msg.RootPtr()
	return App_id_Results{root.Struct()}, err
}

func (s App_id_Results) String() string {
	str, _ := text.Marshal(0xd2592928fa547bc6, s.Struct)
	return str
}

func (s App_id_Results) AppId() uint64 {
	return s.Struct.Uint64(0)
}

func (s App_id_Results) SetAppId(v uint64) {
	s.Struct.SetUint64(0, v)
}

// App_id_Results_List is a list of App_id_Results.
type App_id_Results_List struct{ capnp.List }

// NewApp_id_Results creates a new list of App_id_Results.
func NewApp_id_Results_List(s *capnp.Segment, sz int32) (App_id_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return App_id_Results_List{l}, err
}

func (s App_id_Results_List) At(i int) App_id_Results { return App_id_Results{s.List.Struct(i)} }

func (s App_id_Results_List) Set(i int, v App_id_Results) error { return s.List.SetStruct(i, v.Struct) }

func (s App_id_Results_List) String() string {
	str, _ := text.MarshalList(0xd2592928fa547bc6, s.List)
	return str
}

// App_id_Results_Promise is a wrapper for a App_id_Results promised by a client call.
type App_id_Results_Promise struct{ *capnp.Pipeline }

func (p App_id_Results_Promise) Struct() (App_id_Results, error) {
	s, err := p.Pipeline.Struct()
	return App_id_Results{s}, err
}

type App_releaseId_Params struct{ capnp.Struct }

// App_releaseId_Params_TypeID is the unique identifier for the type App_releaseId_Params.
const App_releaseId_Params_TypeID = 0xbea6ce314a7abc79

func NewApp_releaseId_Params(s *capnp.Segment) (App_releaseId_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return App_releaseId_Params{st}, err
}

func NewRootApp_releaseId_Params(s *capnp.Segment) (App_releaseId_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return App_releaseId_Params{st}, err
}

func ReadRootApp_releaseId_Params(msg *capnp.Message) (App_releaseId_Params, error) {
	root, err := msg.RootPtr()
	return App_releaseId_Params{root.Struct()}, err
}

func (s App_releaseId_Params) String() string {
	str, _ := text.Marshal(0xbea6ce314a7abc79, s.Struct)
	return str
}

// App_releaseId_Params_List is a list of App_releaseId_Params.
type App_releaseId_Params_List struct{ capnp.List }

// NewApp_releaseId_Params creates a new list of App_releaseId_Params.
func NewApp_releaseId_Params_List(s *capnp.Segment, sz int32) (App_releaseId_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return App_releaseId_Params_List{l}, err
}

func (s App_releaseId_Params_List) At(i int) App_releaseId_Params {
	return App_releaseId_Params{s.List.Struct(i)}
}

func (s App_releaseId_Params_List) Set(i int, v App_releaseId_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s App_releaseId_Params_List) String() string {
	str, _ := text.MarshalList(0xbea6ce314a7abc79, s.List)
	return str
}

// App_releaseId_Params_Promise is a wrapper for a App_releaseId_Params promised by a client call.
type App_releaseId_Params_Promise struct{ *capnp.Pipeline }

func (p App_releaseId_Params_Promise) Struct() (App_releaseId_Params, error) {
	s, err := p.Pipeline.Struct()
	return App_releaseId_Params{s}, err
}

type App_releaseId_Results struct{ capnp.Struct }

// App_releaseId_Results_TypeID is the unique identifier for the type App_releaseId_Results.
const App_releaseId_Results_TypeID = 0x92a4f36c8d41b673

func NewApp_releaseId_Results(s *capnp.Segment) (App_releaseId_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return App_releaseId_Results{st}, err
}

func NewRootApp_releaseId_Results(s *capnp.Segment) (App_releaseId_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return App_releaseId_Results{st}, err
}

func ReadRootApp_releaseId_Results(msg *capnp.Message) (App_releaseId_Results, error) {
	root, err := msg.RootPtr()
	return App_releaseId_Results{root.Struct()}, err
}

func (s App_releaseId_Results) String() string {
	str, _ := text.Marshal(0x92a4f36c8d41b673, s.Struct)
	return str
}

func (s App_releaseId_Results) ReleaseId() uint64 {
	return s.Struct.Uint64(0)
}

func (s App_releaseId_Results) SetReleaseId(v uint64) {
	s.Struct.SetUint64(0, v)
}

// App_releaseId_Results_List is a list of App_releaseId_Results.
type App_releaseId_Results_List struct{ capnp.List }

// NewApp_releaseId_Results creates a new list of App_releaseId_Results.
func NewApp_releaseId_Results_List(s *capnp.Segment, sz int32) (App_releaseId_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return App_releaseId_Results_List{l}, err
}

func (s App_releaseId_Results_List) At(i int) App_releaseId_Results {
	return App_releaseId_Results{s.List.Struct(i)}
}

func (s App_releaseId_Results_List) Set(i int, v App_releaseId_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s App_releaseId_Results_List) String() string {
	str, _ := text.MarshalList(0x92a4f36c8d41b673, s.List)
	return str
}

// App_releaseId_Results_Promise is a wrapper for a App_releaseId_Results promised by a client call.
type App_releaseId_Results_Promise struct{ *capnp.Pipeline }

func (p App_releaseId_Results_Promise) Struct() (App_releaseId_Results, error) {
	s, err := p.Pipeline.Struct()
	return App_releaseId_Results{s}, err
}

type App_instance_Params struct{ capnp.Struct }

// App_instance_Params_TypeID is the unique identifier for the type App_instance_Params.
const App_instance_Params_TypeID = 0x84e4b51ba5570071

func NewApp_instance_Params(s *capnp.Segment) (App_instance_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return App_instance_Params{st}, err
}

func NewRootApp_instance_Params(s *capnp.Segment) (App_instance_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return App_instance_Params{st}, err
}

func ReadRootApp_instance_Params(msg *capnp.Message) (App_instance_Params, error) {
	root, err := msg.RootPtr()
	return App_instance_Params{root.Struct()}, err
}

func (s App_instance_Params) String() string {
	str, _ := text.Marshal(0x84e4b51ba5570071, s.Struct)
	return str
}

// App_instance_Params_List is a list of App_instance_Params.
type App_instance_Params_List struct{ capnp.List }

// NewApp_instance_Params creates a new list of App_instance_Params.
func NewApp_instance_Params_List(s *capnp.Segment, sz int32) (App_instance_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return App_instance_Params_List{l}, err
}

func (s App_instance_Params_List) At(i int) App_instance_Params {
	return App_instance_Params{s.List.Struct(i)}
}

func (s App_instance_Params_List) Set(i int, v App_instance_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s App_instance_Params_List) String() string {
	str, _ := text.MarshalList(0x84e4b51ba5570071, s.List)
	return str
}

// App_instance_Params_Promise is a wrapper for a App_instance_Params promised by a client call.
type App_instance_Params_Promise struct{ *capnp.Pipeline }

func (p App_instance_Params_Promise) Struct() (App_instance_Params, error) {
	s, err := p.Pipeline.Struct()
	return App_instance_Params{s}, err
}

type App_instance_Results struct{ capnp.Struct }

// App_instance_Results_TypeID is the unique identifier for the type App_instance_Results.
const App_instance_Results_TypeID = 0xb5031b975a2f2d5d

func NewApp_instance_Results(s *capnp.Segment) (App_instance_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return App_instance_Results{st}, err
}

func NewRootApp_instance_Results(s *capnp.Segment) (App_instance_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return App_instance_Results{st}, err
}

func ReadRootApp_instance_Results(msg *capnp.Message) (App_instance_Results, error) {
	root, err := msg.RootPtr()
	return App_instance_Results{root.Struct()}, err
}

func (s App_instance_Results) String() string {
	str, _ := text.Marshal(0xb5031b975a2f2d5d, s.Struct)
	return str
}

func (s App_instance_Results) InstanceId() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s App_instance_Results) HasInstanceId() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s App_instance_Results) InstanceIdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s App_instance_Results) SetInstanceId(v string) error {
	return s.Struct.SetText(0, v)
}

// App_instance_Results_List is a list of App_instance_Results.
type App_instance_Results_List struct{ capnp.List }

// NewApp_instance_Results creates a new list of App_instance_Results.
func NewApp_instance_Results_List(s *capnp.Segment, sz int32) (App_instance_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return App_instance_Results_List{l}, err
}

func (s App_instance_Results_List) At(i int) App_instance_Results {
	return App_instance_Results{s.List.Struct(i)}
}

func (s App_instance_Results_List) Set(i int, v App_instance_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s App_instance_Results_List) String() string {
	str, _ := text.MarshalList(0xb5031b975a2f2d5d, s.List)
	return str
}

// App_instance_Results_Promise is a wrapper for a App_instance_Results promised by a client call.
type App_instance_Results_Promise struct{ *capnp.Pipeline }

func (p App_instance_Results_Promise) Struct() (App_instance_Results, error) {
	s, err := p.Pipeline.Struct()
	return App_instance_Results{s}, err
}

type App_startedOn_Params struct{ capnp.Struct }

// App_startedOn_Params_TypeID is the unique identifier for the type App_startedOn_Params.
const App_startedOn_Params_TypeID = 0x8ff15814cd06ecd7

func NewApp_startedOn_Params(s *capnp.Segment) (App_startedOn_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return App_startedOn_Params{st}, err
}

func NewRootApp_startedOn_Params(s *capnp.Segment) (App_startedOn_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return App_startedOn_Params{st}, err
}

func ReadRootApp_startedOn_Params(msg *capnp.Message) (App_startedOn_Params, error) {
	root, err := msg.RootPtr()
	return App_startedOn_Params{root.Struct()}, err
}

func (s App_startedOn_Params) String() string {
	str, _ := text.Marshal(0x8ff15814cd06ecd7, s.Struct)
	return str
}

// App_startedOn_Params_List is a list of App_startedOn_Params.
type App_startedOn_Params_List struct{ capnp.List }

// NewApp_startedOn_Params creates a new list of App_startedOn_Params.
func NewApp_startedOn_Params_List(s *capnp.Segment, sz int32) (App_startedOn_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return App_startedOn_Params_List{l}, err
}

func (s App_startedOn_Params_List) At(i int) App_startedOn_Params {
	return App_startedOn_Params{s.List.Struct(i)}
}

func (s App_startedOn_Params_List) Set(i int, v App_startedOn_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s App_startedOn_Params_List) String() string {
	str, _ := text.MarshalList(0x8ff15814cd06ecd7, s.List)
	return str
}

// App_startedOn_Params_Promise is a wrapper for a App_startedOn_Params promised by a client call.
type App_startedOn_Params_Promise struct{ *capnp.Pipeline }

func (p App_startedOn_Params_Promise) Struct() (App_startedOn_Params, error) {
	s, err := p.Pipeline.Struct()
	return App_startedOn_Params{s}, err
}

type App_startedOn_Results struct{ capnp.Struct }

// App_startedOn_Results_TypeID is the unique identifier for the type App_startedOn_Results.
const App_startedOn_Results_TypeID = 0x8ff88405c5bd0dec

func NewApp_startedOn_Results(s *capnp.Segment) (App_startedOn_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return App_startedOn_Results{st}, err
}

func NewRootApp_startedOn_Results(s *capnp.Segment) (App_startedOn_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return App_startedOn_Results{st}, err
}

func ReadRootApp_startedOn_Results(msg *capnp.Message) (App_startedOn_Results, error) {
	root, err := msg.RootPtr()
	return App_startedOn_Results{root.Struct()}, err
}

func (s App_startedOn_Results) String() string {
	str, _ := text.Marshal(0x8ff88405c5bd0dec, s.Struct)
	return str
}

func (s App_startedOn_Results) StartedOn() int64 {
	return int64(s.Struct.Uint64(0))
}

func (s App_startedOn_Results) SetStartedOn(v int64) {
	s.Struct.SetUint64(0, uint64(v))
}

// App_startedOn_Results_List is a list of App_startedOn_Results.
type App_startedOn_Results_List struct{ capnp.List }

// NewApp_startedOn_Results creates a new list of App_startedOn_Results.
func NewApp_startedOn_Results_List(s *capnp.Segment, sz int32) (App_startedOn_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return App_startedOn_Results_List{l}, err
}

func (s App_startedOn_Results_List) At(i int) App_startedOn_Results {
	return App_startedOn_Results{s.List.Struct(i)}
}

func (s App_startedOn_Results_List) Set(i int, v App_startedOn_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s App_startedOn_Results_List) String() string {
	str, _ := text.MarshalList(0x8ff88405c5bd0dec, s.List)
	return str
}

// App_startedOn_Results_Promise is a wrapper for a App_startedOn_Results promised by a client call.
type App_startedOn_Results_Promise struct{ *capnp.Pipeline }

func (p App_startedOn_Results_Promise) Struct() (App_startedOn_Results, error) {
	s, err := p.Pipeline.Struct()
	return App_startedOn_Results{s}, err
}

type App_logLevel_Params struct{ capnp.Struct }

// App_logLevel_Params_TypeID is the unique identifier for the type App_logLevel_Params.
const App_logLevel_Params_TypeID = 0xa9121e4800ff7069

func NewApp_logLevel_Params(s *capnp.Segment) (App_logLevel_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return App_logLevel_Params{st}, err
}

func NewRootApp_logLevel_Params(s *capnp.Segment) (App_logLevel_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return App_logLevel_Params{st}, err
}

func ReadRootApp_logLevel_Params(msg *capnp.Message) (App_logLevel_Params, error) {
	root, err := msg.RootPtr()
	return App_logLevel_Params{root.Struct()}, err
}

func (s App_logLevel_Params) String() string {
	str, _ := text.Marshal(0xa9121e4800ff7069, s.Struct)
	return str
}

// App_logLevel_Params_List is a list of App_logLevel_Params.
type App_logLevel_Params_List struct{ capnp.List }

// NewApp_logLevel_Params creates a new list of App_logLevel_Params.
func NewApp_logLevel_Params_List(s *capnp.Segment, sz int32) (App_logLevel_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return App_logLevel_Params_List{l}, err
}

func (s App_logLevel_Params_List) At(i int) App_logLevel_Params {
	return App_logLevel_Params{s.List.Struct(i)}
}

func (s App_logLevel_Params_List) Set(i int, v App_logLevel_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s App_logLevel_Params_List) String() string {
	str, _ := text.MarshalList(0xa9121e4800ff7069, s.List)
	return str
}

// App_logLevel_Params_Promise is a wrapper for a App_logLevel_Params promised by a client call.
type App_logLevel_Params_Promise struct{ *capnp.Pipeline }

func (p App_logLevel_Params_Promise) Struct() (App_logLevel_Params, error) {
	s, err := p.Pipeline.Struct()
	return App_logLevel_Params{s}, err
}

type App_logLevel_Results struct{ capnp.Struct }

// App_logLevel_Results_TypeID is the unique identifier for the type App_logLevel_Results.
const App_logLevel_Results_TypeID = 0xae6825c3fecb35bf

func NewApp_logLevel_Results(s *capnp.Segment) (App_logLevel_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return App_logLevel_Results{st}, err
}

func NewRootApp_logLevel_Results(s *capnp.Segment) (App_logLevel_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return App_logLevel_Results{st}, err
}

func ReadRootApp_logLevel_Results(msg *capnp.Message) (App_logLevel_Results, error) {
	root, err := msg.RootPtr()
	return App_logLevel_Results{root.Struct()}, err
}

func (s App_logLevel_Results) String() string {
	str, _ := text.Marshal(0xae6825c3fecb35bf, s.Struct)
	return str
}

func (s App_logLevel_Results) Level() LogLevel {
	return LogLevel(s.Struct.Uint16(0))
}

func (s App_logLevel_Results) SetLevel(v LogLevel) {
	s.Struct.SetUint16(0, uint16(v))
}

// App_logLevel_Results_List is a list of App_logLevel_Results.
type App_logLevel_Results_List struct{ capnp.List }

// NewApp_logLevel_Results creates a new list of App_logLevel_Results.
func NewApp_logLevel_Results_List(s *capnp.Segment, sz int32) (App_logLevel_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return App_logLevel_Results_List{l}, err
}

func (s App_logLevel_Results_List) At(i int) App_logLevel_Results {
	return App_logLevel_Results{s.List.Struct(i)}
}

func (s App_logLevel_Results_List) Set(i int, v App_logLevel_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s App_logLevel_Results_List) String() string {
	str, _ := text.MarshalList(0xae6825c3fecb35bf, s.List)
	return str
}

// App_logLevel_Results_Promise is a wrapper for a App_logLevel_Results promised by a client call.
type App_logLevel_Results_Promise struct{ *capnp.Pipeline }

func (p App_logLevel_Results_Promise) Struct() (App_logLevel_Results, error) {
	s, err := p.Pipeline.Struct()
	return App_logLevel_Results{s}, err
}

type App_serviceIds_Params struct{ capnp.Struct }

// App_serviceIds_Params_TypeID is the unique identifier for the type App_serviceIds_Params.
const App_serviceIds_Params_TypeID = 0xb95426b082b00c25

func NewApp_serviceIds_Params(s *capnp.Segment) (App_serviceIds_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return App_serviceIds_Params{st}, err
}

func NewRootApp_serviceIds_Params(s *capnp.Segment) (App_serviceIds_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return App_serviceIds_Params{st}, err
}

func ReadRootApp_serviceIds_Params(msg *capnp.Message) (App_serviceIds_Params, error) {
	root, err := msg.RootPtr()
	return App_serviceIds_Params{root.Struct()}, err
}

func (s App_serviceIds_Params) String() string {
	str, _ := text.Marshal(0xb95426b082b00c25, s.Struct)
	return str
}

// App_serviceIds_Params_List is a list of App_serviceIds_Params.
type App_serviceIds_Params_List struct{ capnp.List }

// NewApp_serviceIds_Params creates a new list of App_serviceIds_Params.
func NewApp_serviceIds_Params_List(s *capnp.Segment, sz int32) (App_serviceIds_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return App_serviceIds_Params_List{l}, err
}

func (s App_serviceIds_Params_List) At(i int) App_serviceIds_Params {
	return App_serviceIds_Params{s.List.Struct(i)}
}

func (s App_serviceIds_Params_List) Set(i int, v App_serviceIds_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s App_serviceIds_Params_List) String() string {
	str, _ := text.MarshalList(0xb95426b082b00c25, s.List)
	return str
}

// App_serviceIds_Params_Promise is a wrapper for a App_serviceIds_Params promised by a client call.
type App_serviceIds_Params_Promise struct{ *capnp.Pipeline }

func (p App_serviceIds_Params_Promise) Struct() (App_serviceIds_Params, error) {
	s, err := p.Pipeline.Struct()
	return App_serviceIds_Params{s}, err
}

type App_serviceIds_Results struct{ capnp.Struct }

// App_serviceIds_Results_TypeID is the unique identifier for the type App_serviceIds_Results.
const App_serviceIds_Results_TypeID = 0xeb68797cd74f95c2

func NewApp_serviceIds_Results(s *capnp.Segment) (App_serviceIds_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return App_serviceIds_Results{st}, err
}

func NewRootApp_serviceIds_Results(s *capnp.Segment) (App_serviceIds_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return App_serviceIds_Results{st}, err
}

func ReadRootApp_serviceIds_Results(msg *capnp.Message) (App_serviceIds_Results, error) {
	root, err := msg.RootPtr()
	return App_serviceIds_Results{root.Struct()}, err
}

func (s App_serviceIds_Results) String() string {
	str, _ := text.Marshal(0xeb68797cd74f95c2, s.Struct)
	return str
}

func (s App_serviceIds_Results) ServiceIds() (capnp.UInt64List, error) {
	p, err := s.Struct.Ptr(0)
	return capnp.UInt64List{List: p.List()}, err
}

func (s App_serviceIds_Results) HasServiceIds() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s App_serviceIds_Results) SetServiceIds(v capnp.UInt64List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewServiceIds sets the serviceIds field to a newly
// allocated capnp.UInt64List, preferring placement in s's segment.
func (s App_serviceIds_Results) NewServiceIds(n int32) (capnp.UInt64List, error) {
	l, err := capnp.NewUInt64List(s.Struct.Segment(), n)
	if err != nil {
		return capnp.UInt64List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// App_serviceIds_Results_List is a list of App_serviceIds_Results.
type App_serviceIds_Results_List struct{ capnp.List }

// NewApp_serviceIds_Results creates a new list of App_serviceIds_Results.
func NewApp_serviceIds_Results_List(s *capnp.Segment, sz int32) (App_serviceIds_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return App_serviceIds_Results_List{l}, err
}

func (s App_serviceIds_Results_List) At(i int) App_serviceIds_Results {
	return App_serviceIds_Results{s.List.Struct(i)}
}

func (s App_serviceIds_Results_List) Set(i int, v App_serviceIds_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s App_serviceIds_Results_List) String() string {
	str, _ := text.MarshalList(0xeb68797cd74f95c2, s.List)
	return str
}

// App_serviceIds_Results_Promise is a wrapper for a App_serviceIds_Results promised by a client call.
type App_serviceIds_Results_Promise struct{ *capnp.Pipeline }

func (p App_serviceIds_Results_Promise) Struct() (App_serviceIds_Results, error) {
	s, err := p.Pipeline.Struct()
	return App_serviceIds_Results{s}, err
}

type App_service_Params struct{ capnp.Struct }

// App_service_Params_TypeID is the unique identifier for the type App_service_Params.
const App_service_Params_TypeID = 0xa504000ac6204c12

func NewApp_service_Params(s *capnp.Segment) (App_service_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return App_service_Params{st}, err
}

func NewRootApp_service_Params(s *capnp.Segment) (App_service_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return App_service_Params{st}, err
}

func ReadRootApp_service_Params(msg *capnp.Message) (App_service_Params, error) {
	root, err := msg.RootPtr()
	return App_service_Params{root.Struct()}, err
}

func (s App_service_Params) String() string {
	str, _ := text.Marshal(0xa504000ac6204c12, s.Struct)
	return str
}

func (s App_service_Params) Id() uint64 {
	return s.Struct.Uint64(0)
}

func (s App_service_Params) SetId(v uint64) {
	s.Struct.SetUint64(0, v)
}

// App_service_Params_List is a list of App_service_Params.
type App_service_Params_List struct{ capnp.List }

// NewApp_service_Params creates a new list of App_service_Params.
func NewApp_service_Params_List(s *capnp.Segment, sz int32) (App_service_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return App_service_Params_List{l}, err
}

func (s App_service_Params_List) At(i int) App_service_Params {
	return App_service_Params{s.List.Struct(i)}
}

func (s App_service_Params_List) Set(i int, v App_service_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s App_service_Params_List) String() string {
	str, _ := text.MarshalList(0xa504000ac6204c12, s.List)
	return str
}

// App_service_Params_Promise is a wrapper for a App_service_Params promised by a client call.
type App_service_Params_Promise struct{ *capnp.Pipeline }

func (p App_service_Params_Promise) Struct() (App_service_Params, error) {
	s, err := p.Pipeline.Struct()
	return App_service_Params{s}, err
}

type App_service_Results struct{ capnp.Struct }

// App_service_Results_TypeID is the unique identifier for the type App_service_Results.
const App_service_Results_TypeID = 0xfa41cf108b6d790d

func NewApp_service_Results(s *capnp.Segment) (App_service_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return App_service_Results{st}, err
}

func NewRootApp_service_Results(s *capnp.Segment) (App_service_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return App_service_Results{st}, err
}

func ReadRootApp_service_Results(msg *capnp.Message) (App_service_Results, error) {
	root, err := msg.RootPtr()
	return App_service_Results{root.Struct()}, err
}

func (s App_service_Results) String() string {
	str, _ := text.Marshal(0xfa41cf108b6d790d, s.Struct)
	return str
}

func (s App_service_Results) Service() Service {
	p, _ := s.Struct.Ptr(0)
	return Service{Client: p.Interface().Client()}
}

func (s App_service_Results) HasService() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s App_service_Results) SetService(v Service) error {
	if v.Client == nil {
		return s.Struct.SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(0, in.ToPtr())
}

// App_service_Results_List is a list of App_service_Results.
type App_service_Results_List struct{ capnp.List }

// NewApp_service_Results creates a new list of App_service_Results.
func NewApp_service_Results_List(s *capnp.Segment, sz int32) (App_service_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return App_service_Results_List{l}, err
}

func (s App_service_Results_List) At(i int) App_service_Results {
	return App_service_Results{s.List.Struct(i)}
}

func (s App_service_Results_List) Set(i int, v App_service_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s App_service_Results_List) String() string {
	str, _ := text.MarshalList(0xfa41cf108b6d790d, s.List)
	return str
}

// App_service_Results_Promise is a wrapper for a App_service_Results promised by a client call.
type App_service_Results_Promise struct{ *capnp.Pipeline }

func (p App_service_Results_Promise) Struct() (App_service_Results, error) {
	s, err := p.Pipeline.Struct()
	return App_service_Results{s}, err
}

func (p App_service_Results_Promise) Service() Service {
	return Service{Client: p.Pipeline.GetPipeline(0).Client()}
}

type App_rpcServiceIds_Params struct{ capnp.Struct }

// App_rpcServiceIds_Params_TypeID is the unique identifier for the type App_rpcServiceIds_Params.
const App_rpcServiceIds_Params_TypeID = 0xd47381c89e2f1649

func NewApp_rpcServiceIds_Params(s *capnp.Segment) (App_rpcServiceIds_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return App_rpcServiceIds_Params{st}, err
}

func NewRootApp_rpcServiceIds_Params(s *capnp.Segment) (App_rpcServiceIds_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return App_rpcServiceIds_Params{st}, err
}

func ReadRootApp_rpcServiceIds_Params(msg *capnp.Message) (App_rpcServiceIds_Params, error) {
	root, err := msg.RootPtr()
	return App_rpcServiceIds_Params{root.Struct()}, err
}

func (s App_rpcServiceIds_Params) String() string {
	str, _ := text.Marshal(0xd47381c89e2f1649, s.Struct)
	return str
}

// App_rpcServiceIds_Params_List is a list of App_rpcServiceIds_Params.
type App_rpcServiceIds_Params_List struct{ capnp.List }

// NewApp_rpcServiceIds_Params creates a new list of App_rpcServiceIds_Params.
func NewApp_rpcServiceIds_Params_List(s *capnp.Segment, sz int32) (App_rpcServiceIds_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return App_rpcServiceIds_Params_List{l}, err
}

func (s App_rpcServiceIds_Params_List) At(i int) App_rpcServiceIds_Params {
	return App_rpcServiceIds_Params{s.List.Struct(i)}
}

func (s App_rpcServiceIds_Params_List) Set(i int, v App_rpcServiceIds_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s App_rpcServiceIds_Params_List) String() string {
	str, _ := text.MarshalList(0xd47381c89e2f1649, s.List)
	return str
}

// App_rpcServiceIds_Params_Promise is a wrapper for a App_rpcServiceIds_Params promised by a client call.
type App_rpcServiceIds_Params_Promise struct{ *capnp.Pipeline }

func (p App_rpcServiceIds_Params_Promise) Struct() (App_rpcServiceIds_Params, error) {
	s, err := p.Pipeline.Struct()
	return App_rpcServiceIds_Params{s}, err
}

type App_rpcServiceIds_Results struct{ capnp.Struct }

// App_rpcServiceIds_Results_TypeID is the unique identifier for the type App_rpcServiceIds_Results.
const App_rpcServiceIds_Results_TypeID = 0xac531ffcc2cdbf05

func NewApp_rpcServiceIds_Results(s *capnp.Segment) (App_rpcServiceIds_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return App_rpcServiceIds_Results{st}, err
}

func NewRootApp_rpcServiceIds_Results(s *capnp.Segment) (App_rpcServiceIds_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return App_rpcServiceIds_Results{st}, err
}

func ReadRootApp_rpcServiceIds_Results(msg *capnp.Message) (App_rpcServiceIds_Results, error) {
	root, err := msg.RootPtr()
	return App_rpcServiceIds_Results{root.Struct()}, err
}

func (s App_rpcServiceIds_Results) String() string {
	str, _ := text.Marshal(0xac531ffcc2cdbf05, s.Struct)
	return str
}

func (s App_rpcServiceIds_Results) ServiceIds() (capnp.UInt64List, error) {
	p, err := s.Struct.Ptr(0)
	return capnp.UInt64List{List: p.List()}, err
}

func (s App_rpcServiceIds_Results) HasServiceIds() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s App_rpcServiceIds_Results) SetServiceIds(v capnp.UInt64List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewServiceIds sets the serviceIds field to a newly
// allocated capnp.UInt64List, preferring placement in s's segment.
func (s App_rpcServiceIds_Results) NewServiceIds(n int32) (capnp.UInt64List, error) {
	l, err := capnp.NewUInt64List(s.Struct.Segment(), n)
	if err != nil {
		return capnp.UInt64List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// App_rpcServiceIds_Results_List is a list of App_rpcServiceIds_Results.
type App_rpcServiceIds_Results_List struct{ capnp.List }

// NewApp_rpcServiceIds_Results creates a new list of App_rpcServiceIds_Results.
func NewApp_rpcServiceIds_Results_List(s *capnp.Segment, sz int32) (App_rpcServiceIds_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return App_rpcServiceIds_Results_List{l}, err
}

func (s App_rpcServiceIds_Results_List) At(i int) App_rpcServiceIds_Results {
	return App_rpcServiceIds_Results{s.List.Struct(i)}
}

func (s App_rpcServiceIds_Results_List) Set(i int, v App_rpcServiceIds_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s App_rpcServiceIds_Results_List) String() string {
	str, _ := text.MarshalList(0xac531ffcc2cdbf05, s.List)
	return str
}

// App_rpcServiceIds_Results_Promise is a wrapper for a App_rpcServiceIds_Results promised by a client call.
type App_rpcServiceIds_Results_Promise struct{ *capnp.Pipeline }

func (p App_rpcServiceIds_Results_Promise) Struct() (App_rpcServiceIds_Results, error) {
	s, err := p.Pipeline.Struct()
	return App_rpcServiceIds_Results{s}, err
}

type App_rpcService_Params struct{ capnp.Struct }

// App_rpcService_Params_TypeID is the unique identifier for the type App_rpcService_Params.
const App_rpcService_Params_TypeID = 0x933297e0a8a77222

func NewApp_rpcService_Params(s *capnp.Segment) (App_rpcService_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return App_rpcService_Params{st}, err
}

func NewRootApp_rpcService_Params(s *capnp.Segment) (App_rpcService_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return App_rpcService_Params{st}, err
}

func ReadRootApp_rpcService_Params(msg *capnp.Message) (App_rpcService_Params, error) {
	root, err := msg.RootPtr()
	return App_rpcService_Params{root.Struct()}, err
}

func (s App_rpcService_Params) String() string {
	str, _ := text.Marshal(0x933297e0a8a77222, s.Struct)
	return str
}

func (s App_rpcService_Params) Id() uint64 {
	return s.Struct.Uint64(0)
}

func (s App_rpcService_Params) SetId(v uint64) {
	s.Struct.SetUint64(0, v)
}

// App_rpcService_Params_List is a list of App_rpcService_Params.
type App_rpcService_Params_List struct{ capnp.List }

// NewApp_rpcService_Params creates a new list of App_rpcService_Params.
func NewApp_rpcService_Params_List(s *capnp.Segment, sz int32) (App_rpcService_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return App_rpcService_Params_List{l}, err
}

func (s App_rpcService_Params_List) At(i int) App_rpcService_Params {
	return App_rpcService_Params{s.List.Struct(i)}
}

func (s App_rpcService_Params_List) Set(i int, v App_rpcService_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s App_rpcService_Params_List) String() string {
	str, _ := text.MarshalList(0x933297e0a8a77222, s.List)
	return str
}

// App_rpcService_Params_Promise is a wrapper for a App_rpcService_Params promised by a client call.
type App_rpcService_Params_Promise struct{ *capnp.Pipeline }

func (p App_rpcService_Params_Promise) Struct() (App_rpcService_Params, error) {
	s, err := p.Pipeline.Struct()
	return App_rpcService_Params{s}, err
}

type App_rpcService_Results struct{ capnp.Struct }

// App_rpcService_Results_TypeID is the unique identifier for the type App_rpcService_Results.
const App_rpcService_Results_TypeID = 0xf09be4e8d421f422

func NewApp_rpcService_Results(s *capnp.Segment) (App_rpcService_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return App_rpcService_Results{st}, err
}

func NewRootApp_rpcService_Results(s *capnp.Segment) (App_rpcService_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return App_rpcService_Results{st}, err
}

func ReadRootApp_rpcService_Results(msg *capnp.Message) (App_rpcService_Results, error) {
	root, err := msg.RootPtr()
	return App_rpcService_Results{root.Struct()}, err
}

func (s App_rpcService_Results) String() string {
	str, _ := text.Marshal(0xf09be4e8d421f422, s.Struct)
	return str
}

func (s App_rpcService_Results) Service() RPCService {
	p, _ := s.Struct.Ptr(0)
	return RPCService{Client: p.Interface().Client()}
}

func (s App_rpcService_Results) HasService() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s App_rpcService_Results) SetService(v RPCService) error {
	if v.Client == nil {
		return s.Struct.SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(0, in.ToPtr())
}

// App_rpcService_Results_List is a list of App_rpcService_Results.
type App_rpcService_Results_List struct{ capnp.List }

// NewApp_rpcService_Results creates a new list of App_rpcService_Results.
func NewApp_rpcService_Results_List(s *capnp.Segment, sz int32) (App_rpcService_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return App_rpcService_Results_List{l}, err
}

func (s App_rpcService_Results_List) At(i int) App_rpcService_Results {
	return App_rpcService_Results{s.List.Struct(i)}
}

func (s App_rpcService_Results_List) Set(i int, v App_rpcService_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s App_rpcService_Results_List) String() string {
	str, _ := text.MarshalList(0xf09be4e8d421f422, s.List)
	return str
}

// App_rpcService_Results_Promise is a wrapper for a App_rpcService_Results promised by a client call.
type App_rpcService_Results_Promise struct{ *capnp.Pipeline }

func (p App_rpcService_Results_Promise) Struct() (App_rpcService_Results, error) {
	s, err := p.Pipeline.Struct()
	return App_rpcService_Results{s}, err
}

func (p App_rpcService_Results_Promise) Service() RPCService {
	return RPCService{Client: p.Pipeline.GetPipeline(0).Client()}
}

type App_kill_Params struct{ capnp.Struct }

// App_kill_Params_TypeID is the unique identifier for the type App_kill_Params.
const App_kill_Params_TypeID = 0x9596c4fb3d4044a6

func NewApp_kill_Params(s *capnp.Segment) (App_kill_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return App_kill_Params{st}, err
}

func NewRootApp_kill_Params(s *capnp.Segment) (App_kill_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return App_kill_Params{st}, err
}

func ReadRootApp_kill_Params(msg *capnp.Message) (App_kill_Params, error) {
	root, err := msg.RootPtr()
	return App_kill_Params{root.Struct()}, err
}

func (s App_kill_Params) String() string {
	str, _ := text.Marshal(0x9596c4fb3d4044a6, s.Struct)
	return str
}

// App_kill_Params_List is a list of App_kill_Params.
type App_kill_Params_List struct{ capnp.List }

// NewApp_kill_Params creates a new list of App_kill_Params.
func NewApp_kill_Params_List(s *capnp.Segment, sz int32) (App_kill_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return App_kill_Params_List{l}, err
}

func (s App_kill_Params_List) At(i int) App_kill_Params { return App_kill_Params{s.List.Struct(i)} }

func (s App_kill_Params_List) Set(i int, v App_kill_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s App_kill_Params_List) String() string {
	str, _ := text.MarshalList(0x9596c4fb3d4044a6, s.List)
	return str
}

// App_kill_Params_Promise is a wrapper for a App_kill_Params promised by a client call.
type App_kill_Params_Promise struct{ *capnp.Pipeline }

func (p App_kill_Params_Promise) Struct() (App_kill_Params, error) {
	s, err := p.Pipeline.Struct()
	return App_kill_Params{s}, err
}

type App_kill_Results struct{ capnp.Struct }

// App_kill_Results_TypeID is the unique identifier for the type App_kill_Results.
const App_kill_Results_TypeID = 0xd451112d04c75608

func NewApp_kill_Results(s *capnp.Segment) (App_kill_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return App_kill_Results{st}, err
}

func NewRootApp_kill_Results(s *capnp.Segment) (App_kill_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return App_kill_Results{st}, err
}

func ReadRootApp_kill_Results(msg *capnp.Message) (App_kill_Results, error) {
	root, err := msg.RootPtr()
	return App_kill_Results{root.Struct()}, err
}

func (s App_kill_Results) String() string {
	str, _ := text.Marshal(0xd451112d04c75608, s.Struct)
	return str
}

// App_kill_Results_List is a list of App_kill_Results.
type App_kill_Results_List struct{ capnp.List }

// NewApp_kill_Results creates a new list of App_kill_Results.
func NewApp_kill_Results_List(s *capnp.Segment, sz int32) (App_kill_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return App_kill_Results_List{l}, err
}

func (s App_kill_Results_List) At(i int) App_kill_Results { return App_kill_Results{s.List.Struct(i)} }

func (s App_kill_Results_List) Set(i int, v App_kill_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s App_kill_Results_List) String() string {
	str, _ := text.MarshalList(0xd451112d04c75608, s.List)
	return str
}

// App_kill_Results_Promise is a wrapper for a App_kill_Results promised by a client call.
type App_kill_Results_Promise struct{ *capnp.Pipeline }

func (p App_kill_Results_Promise) Struct() (App_kill_Results, error) {
	s, err := p.Pipeline.Struct()
	return App_kill_Results{s}, err
}

type App_runtime_Params struct{ capnp.Struct }

// App_runtime_Params_TypeID is the unique identifier for the type App_runtime_Params.
const App_runtime_Params_TypeID = 0xad48fb996c416d96

func NewApp_runtime_Params(s *capnp.Segment) (App_runtime_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return App_runtime_Params{st}, err
}

func NewRootApp_runtime_Params(s *capnp.Segment) (App_runtime_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return App_runtime_Params{st}, err
}

func ReadRootApp_runtime_Params(msg *capnp.Message) (App_runtime_Params, error) {
	root, err := msg.RootPtr()
	return App_runtime_Params{root.Struct()}, err
}

func (s App_runtime_Params) String() string {
	str, _ := text.Marshal(0xad48fb996c416d96, s.Struct)
	return str
}

// App_runtime_Params_List is a list of App_runtime_Params.
type App_runtime_Params_List struct{ capnp.List }

// NewApp_runtime_Params creates a new list of App_runtime_Params.
func NewApp_runtime_Params_List(s *capnp.Segment, sz int32) (App_runtime_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return App_runtime_Params_List{l}, err
}

func (s App_runtime_Params_List) At(i int) App_runtime_Params {
	return App_runtime_Params{s.List.Struct(i)}
}

func (s App_runtime_Params_List) Set(i int, v App_runtime_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s App_runtime_Params_List) String() string {
	str, _ := text.MarshalList(0xad48fb996c416d96, s.List)
	return str
}

// App_runtime_Params_Promise is a wrapper for a App_runtime_Params promised by a client call.
type App_runtime_Params_Promise struct{ *capnp.Pipeline }

func (p App_runtime_Params_Promise) Struct() (App_runtime_Params, error) {
	s, err := p.Pipeline.Struct()
	return App_runtime_Params{s}, err
}

type App_runtime_Results struct{ capnp.Struct }

// App_runtime_Results_TypeID is the unique identifier for the type App_runtime_Results.
const App_runtime_Results_TypeID = 0xed7c7bac1db2cb02

func NewApp_runtime_Results(s *capnp.Segment) (App_runtime_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return App_runtime_Results{st}, err
}

func NewRootApp_runtime_Results(s *capnp.Segment) (App_runtime_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return App_runtime_Results{st}, err
}

func ReadRootApp_runtime_Results(msg *capnp.Message) (App_runtime_Results, error) {
	root, err := msg.RootPtr()
	return App_runtime_Results{root.Struct()}, err
}

func (s App_runtime_Results) String() string {
	str, _ := text.Marshal(0xed7c7bac1db2cb02, s.Struct)
	return str
}

func (s App_runtime_Results) Runtime() Runtime {
	p, _ := s.Struct.Ptr(0)
	return Runtime{Client: p.Interface().Client()}
}

func (s App_runtime_Results) HasRuntime() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s App_runtime_Results) SetRuntime(v Runtime) error {
	if v.Client == nil {
		return s.Struct.SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(0, in.ToPtr())
}

// App_runtime_Results_List is a list of App_runtime_Results.
type App_runtime_Results_List struct{ capnp.List }

// NewApp_runtime_Results creates a new list of App_runtime_Results.
func NewApp_runtime_Results_List(s *capnp.Segment, sz int32) (App_runtime_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return App_runtime_Results_List{l}, err
}

func (s App_runtime_Results_List) At(i int) App_runtime_Results {
	return App_runtime_Results{s.List.Struct(i)}
}

func (s App_runtime_Results_List) Set(i int, v App_runtime_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s App_runtime_Results_List) String() string {
	str, _ := text.MarshalList(0xed7c7bac1db2cb02, s.List)
	return str
}

// App_runtime_Results_Promise is a wrapper for a App_runtime_Results promised by a client call.
type App_runtime_Results_Promise struct{ *capnp.Pipeline }

func (p App_runtime_Results_Promise) Struct() (App_runtime_Results, error) {
	s, err := p.Pipeline.Struct()
	return App_runtime_Results{s}, err
}

func (p App_runtime_Results_Promise) Runtime() Runtime {
	return Runtime{Client: p.Pipeline.GetPipeline(0).Client()}
}

type Service struct{ Client capnp.Client }

// Service_TypeID is the unique identifier for the type Service.
const Service_TypeID = 0xb25b411cec149334

func (c Service) Id(ctx context.Context, params func(Service_id_Params) error, opts ...capnp.CallOption) Service_id_Results_Promise {
	if c.Client == nil {
		return Service_id_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xb25b411cec149334,
			MethodID:      0,
			InterfaceName: "app.capnp:Service",
			MethodName:    "id",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Service_id_Params{Struct: s}) }
	}
	return Service_id_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Service) LogLevel(ctx context.Context, params func(Service_logLevel_Params) error, opts ...capnp.CallOption) Service_logLevel_Results_Promise {
	if c.Client == nil {
		return Service_logLevel_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xb25b411cec149334,
			MethodID:      1,
			InterfaceName: "app.capnp:Service",
			MethodName:    "logLevel",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Service_logLevel_Params{Struct: s}) }
	}
	return Service_logLevel_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Service) Alive(ctx context.Context, params func(Service_alive_Params) error, opts ...capnp.CallOption) Service_alive_Results_Promise {
	if c.Client == nil {
		return Service_alive_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xb25b411cec149334,
			MethodID:      2,
			InterfaceName: "app.capnp:Service",
			MethodName:    "alive",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Service_alive_Params{Struct: s}) }
	}
	return Service_alive_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}

type Service_Server interface {
	Id(Service_id) error

	LogLevel(Service_logLevel) error

	Alive(Service_alive) error
}

func Service_ServerToClient(s Service_Server) Service {
	c, _ := s.(server.Closer)
	return Service{Client: server.New(Service_Methods(nil, s), c)}
}

func Service_Methods(methods []server.Method, s Service_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 3)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xb25b411cec149334,
			MethodID:      0,
			InterfaceName: "app.capnp:Service",
			MethodName:    "id",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Service_id{c, opts, Service_id_Params{Struct: p}, Service_id_Results{Struct: r}}
			return s.Id(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xb25b411cec149334,
			MethodID:      1,
			InterfaceName: "app.capnp:Service",
			MethodName:    "logLevel",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Service_logLevel{c, opts, Service_logLevel_Params{Struct: p}, Service_logLevel_Results{Struct: r}}
			return s.LogLevel(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xb25b411cec149334,
			MethodID:      2,
			InterfaceName: "app.capnp:Service",
			MethodName:    "alive",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Service_alive{c, opts, Service_alive_Params{Struct: p}, Service_alive_Results{Struct: r}}
			return s.Alive(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	return methods
}

// Service_id holds the arguments for a server call to Service.id.
type Service_id struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Service_id_Params
	Results Service_id_Results
}

// Service_logLevel holds the arguments for a server call to Service.logLevel.
type Service_logLevel struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Service_logLevel_Params
	Results Service_logLevel_Results
}

// Service_alive holds the arguments for a server call to Service.alive.
type Service_alive struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Service_alive_Params
	Results Service_alive_Results
}

type Service_id_Params struct{ capnp.Struct }

// Service_id_Params_TypeID is the unique identifier for the type Service_id_Params.
const Service_id_Params_TypeID = 0x965465bd75220f94

func NewService_id_Params(s *capnp.Segment) (Service_id_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Service_id_Params{st}, err
}

func NewRootService_id_Params(s *capnp.Segment) (Service_id_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Service_id_Params{st}, err
}

func ReadRootService_id_Params(msg *capnp.Message) (Service_id_Params, error) {
	root, err := msg.RootPtr()
	return Service_id_Params{root.Struct()}, err
}

func (s Service_id_Params) String() string {
	str, _ := text.Marshal(0x965465bd75220f94, s.Struct)
	return str
}

// Service_id_Params_List is a list of Service_id_Params.
type Service_id_Params_List struct{ capnp.List }

// NewService_id_Params creates a new list of Service_id_Params.
func NewService_id_Params_List(s *capnp.Segment, sz int32) (Service_id_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Service_id_Params_List{l}, err
}

func (s Service_id_Params_List) At(i int) Service_id_Params {
	return Service_id_Params{s.List.Struct(i)}
}

func (s Service_id_Params_List) Set(i int, v Service_id_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Service_id_Params_List) String() string {
	str, _ := text.MarshalList(0x965465bd75220f94, s.List)
	return str
}

// Service_id_Params_Promise is a wrapper for a Service_id_Params promised by a client call.
type Service_id_Params_Promise struct{ *capnp.Pipeline }

func (p Service_id_Params_Promise) Struct() (Service_id_Params, error) {
	s, err := p.Pipeline.Struct()
	return Service_id_Params{s}, err
}

type Service_id_Results struct{ capnp.Struct }

// Service_id_Results_TypeID is the unique identifier for the type Service_id_Results.
const Service_id_Results_TypeID = 0xccdde1728f71e904

func NewService_id_Results(s *capnp.Segment) (Service_id_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Service_id_Results{st}, err
}

func NewRootService_id_Results(s *capnp.Segment) (Service_id_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Service_id_Results{st}, err
}

func ReadRootService_id_Results(msg *capnp.Message) (Service_id_Results, error) {
	root, err := msg.RootPtr()
	return Service_id_Results{root.Struct()}, err
}

func (s Service_id_Results) String() string {
	str, _ := text.Marshal(0xccdde1728f71e904, s.Struct)
	return str
}

func (s Service_id_Results) ServiceId() uint64 {
	return s.Struct.Uint64(0)
}

func (s Service_id_Results) SetServiceId(v uint64) {
	s.Struct.SetUint64(0, v)
}

// Service_id_Results_List is a list of Service_id_Results.
type Service_id_Results_List struct{ capnp.List }

// NewService_id_Results creates a new list of Service_id_Results.
func NewService_id_Results_List(s *capnp.Segment, sz int32) (Service_id_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return Service_id_Results_List{l}, err
}

func (s Service_id_Results_List) At(i int) Service_id_Results {
	return Service_id_Results{s.List.Struct(i)}
}

func (s Service_id_Results_List) Set(i int, v Service_id_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Service_id_Results_List) String() string {
	str, _ := text.MarshalList(0xccdde1728f71e904, s.List)
	return str
}

// Service_id_Results_Promise is a wrapper for a Service_id_Results promised by a client call.
type Service_id_Results_Promise struct{ *capnp.Pipeline }

func (p Service_id_Results_Promise) Struct() (Service_id_Results, error) {
	s, err := p.Pipeline.Struct()
	return Service_id_Results{s}, err
}

type Service_logLevel_Params struct{ capnp.Struct }

// Service_logLevel_Params_TypeID is the unique identifier for the type Service_logLevel_Params.
const Service_logLevel_Params_TypeID = 0xa6b9c11c2aac9785

func NewService_logLevel_Params(s *capnp.Segment) (Service_logLevel_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Service_logLevel_Params{st}, err
}

func NewRootService_logLevel_Params(s *capnp.Segment) (Service_logLevel_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Service_logLevel_Params{st}, err
}

func ReadRootService_logLevel_Params(msg *capnp.Message) (Service_logLevel_Params, error) {
	root, err := msg.RootPtr()
	return Service_logLevel_Params{root.Struct()}, err
}

func (s Service_logLevel_Params) String() string {
	str, _ := text.Marshal(0xa6b9c11c2aac9785, s.Struct)
	return str
}

// Service_logLevel_Params_List is a list of Service_logLevel_Params.
type Service_logLevel_Params_List struct{ capnp.List }

// NewService_logLevel_Params creates a new list of Service_logLevel_Params.
func NewService_logLevel_Params_List(s *capnp.Segment, sz int32) (Service_logLevel_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Service_logLevel_Params_List{l}, err
}

func (s Service_logLevel_Params_List) At(i int) Service_logLevel_Params {
	return Service_logLevel_Params{s.List.Struct(i)}
}

func (s Service_logLevel_Params_List) Set(i int, v Service_logLevel_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Service_logLevel_Params_List) String() string {
	str, _ := text.MarshalList(0xa6b9c11c2aac9785, s.List)
	return str
}

// Service_logLevel_Params_Promise is a wrapper for a Service_logLevel_Params promised by a client call.
type Service_logLevel_Params_Promise struct{ *capnp.Pipeline }

func (p Service_logLevel_Params_Promise) Struct() (Service_logLevel_Params, error) {
	s, err := p.Pipeline.Struct()
	return Service_logLevel_Params{s}, err
}

type Service_logLevel_Results struct{ capnp.Struct }

// Service_logLevel_Results_TypeID is the unique identifier for the type Service_logLevel_Results.
const Service_logLevel_Results_TypeID = 0x9285c4944dfb709f

func NewService_logLevel_Results(s *capnp.Segment) (Service_logLevel_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Service_logLevel_Results{st}, err
}

func NewRootService_logLevel_Results(s *capnp.Segment) (Service_logLevel_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Service_logLevel_Results{st}, err
}

func ReadRootService_logLevel_Results(msg *capnp.Message) (Service_logLevel_Results, error) {
	root, err := msg.RootPtr()
	return Service_logLevel_Results{root.Struct()}, err
}

func (s Service_logLevel_Results) String() string {
	str, _ := text.Marshal(0x9285c4944dfb709f, s.Struct)
	return str
}

func (s Service_logLevel_Results) Level() LogLevel {
	return LogLevel(s.Struct.Uint16(0))
}

func (s Service_logLevel_Results) SetLevel(v LogLevel) {
	s.Struct.SetUint16(0, uint16(v))
}

// Service_logLevel_Results_List is a list of Service_logLevel_Results.
type Service_logLevel_Results_List struct{ capnp.List }

// NewService_logLevel_Results creates a new list of Service_logLevel_Results.
func NewService_logLevel_Results_List(s *capnp.Segment, sz int32) (Service_logLevel_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return Service_logLevel_Results_List{l}, err
}

func (s Service_logLevel_Results_List) At(i int) Service_logLevel_Results {
	return Service_logLevel_Results{s.List.Struct(i)}
}

func (s Service_logLevel_Results_List) Set(i int, v Service_logLevel_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Service_logLevel_Results_List) String() string {
	str, _ := text.MarshalList(0x9285c4944dfb709f, s.List)
	return str
}

// Service_logLevel_Results_Promise is a wrapper for a Service_logLevel_Results promised by a client call.
type Service_logLevel_Results_Promise struct{ *capnp.Pipeline }

func (p Service_logLevel_Results_Promise) Struct() (Service_logLevel_Results, error) {
	s, err := p.Pipeline.Struct()
	return Service_logLevel_Results{s}, err
}

type Service_alive_Params struct{ capnp.Struct }

// Service_alive_Params_TypeID is the unique identifier for the type Service_alive_Params.
const Service_alive_Params_TypeID = 0x91dfcb778d8d16c0

func NewService_alive_Params(s *capnp.Segment) (Service_alive_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Service_alive_Params{st}, err
}

func NewRootService_alive_Params(s *capnp.Segment) (Service_alive_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Service_alive_Params{st}, err
}

func ReadRootService_alive_Params(msg *capnp.Message) (Service_alive_Params, error) {
	root, err := msg.RootPtr()
	return Service_alive_Params{root.Struct()}, err
}

func (s Service_alive_Params) String() string {
	str, _ := text.Marshal(0x91dfcb778d8d16c0, s.Struct)
	return str
}

// Service_alive_Params_List is a list of Service_alive_Params.
type Service_alive_Params_List struct{ capnp.List }

// NewService_alive_Params creates a new list of Service_alive_Params.
func NewService_alive_Params_List(s *capnp.Segment, sz int32) (Service_alive_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Service_alive_Params_List{l}, err
}

func (s Service_alive_Params_List) At(i int) Service_alive_Params {
	return Service_alive_Params{s.List.Struct(i)}
}

func (s Service_alive_Params_List) Set(i int, v Service_alive_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Service_alive_Params_List) String() string {
	str, _ := text.MarshalList(0x91dfcb778d8d16c0, s.List)
	return str
}

// Service_alive_Params_Promise is a wrapper for a Service_alive_Params promised by a client call.
type Service_alive_Params_Promise struct{ *capnp.Pipeline }

func (p Service_alive_Params_Promise) Struct() (Service_alive_Params, error) {
	s, err := p.Pipeline.Struct()
	return Service_alive_Params{s}, err
}

type Service_alive_Results struct{ capnp.Struct }

// Service_alive_Results_TypeID is the unique identifier for the type Service_alive_Results.
const Service_alive_Results_TypeID = 0xe542d95b68592c1c

func NewService_alive_Results(s *capnp.Segment) (Service_alive_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Service_alive_Results{st}, err
}

func NewRootService_alive_Results(s *capnp.Segment) (Service_alive_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Service_alive_Results{st}, err
}

func ReadRootService_alive_Results(msg *capnp.Message) (Service_alive_Results, error) {
	root, err := msg.RootPtr()
	return Service_alive_Results{root.Struct()}, err
}

func (s Service_alive_Results) String() string {
	str, _ := text.Marshal(0xe542d95b68592c1c, s.Struct)
	return str
}

func (s Service_alive_Results) Alive() bool {
	return s.Struct.Bit(0)
}

func (s Service_alive_Results) SetAlive(v bool) {
	s.Struct.SetBit(0, v)
}

// Service_alive_Results_List is a list of Service_alive_Results.
type Service_alive_Results_List struct{ capnp.List }

// NewService_alive_Results creates a new list of Service_alive_Results.
func NewService_alive_Results_List(s *capnp.Segment, sz int32) (Service_alive_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return Service_alive_Results_List{l}, err
}

func (s Service_alive_Results_List) At(i int) Service_alive_Results {
	return Service_alive_Results{s.List.Struct(i)}
}

func (s Service_alive_Results_List) Set(i int, v Service_alive_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Service_alive_Results_List) String() string {
	str, _ := text.MarshalList(0xe542d95b68592c1c, s.List)
	return str
}

// Service_alive_Results_Promise is a wrapper for a Service_alive_Results promised by a client call.
type Service_alive_Results_Promise struct{ *capnp.Pipeline }

func (p Service_alive_Results_Promise) Struct() (Service_alive_Results, error) {
	s, err := p.Pipeline.Struct()
	return Service_alive_Results{s}, err
}

type RPCService struct{ Client capnp.Client }

// RPCService_TypeID is the unique identifier for the type RPCService.
const RPCService_TypeID = 0xa7e3c40f8e5ecb74

func (c RPCService) Id(ctx context.Context, params func(RPCService_id_Params) error, opts ...capnp.CallOption) RPCService_id_Results_Promise {
	if c.Client == nil {
		return RPCService_id_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa7e3c40f8e5ecb74,
			MethodID:      0,
			InterfaceName: "app.capnp:RPCService",
			MethodName:    "id",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(RPCService_id_Params{Struct: s}) }
	}
	return RPCService_id_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c RPCService) ListenerAlive(ctx context.Context, params func(RPCService_listenerAlive_Params) error, opts ...capnp.CallOption) RPCService_listenerAlive_Results_Promise {
	if c.Client == nil {
		return RPCService_listenerAlive_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa7e3c40f8e5ecb74,
			MethodID:      1,
			InterfaceName: "app.capnp:RPCService",
			MethodName:    "listenerAlive",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(RPCService_listenerAlive_Params{Struct: s}) }
	}
	return RPCService_listenerAlive_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c RPCService) ListenerAddress(ctx context.Context, params func(RPCService_listenerAddress_Params) error, opts ...capnp.CallOption) RPCService_listenerAddress_Results_Promise {
	if c.Client == nil {
		return RPCService_listenerAddress_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa7e3c40f8e5ecb74,
			MethodID:      2,
			InterfaceName: "app.capnp:RPCService",
			MethodName:    "listenerAddress",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(RPCService_listenerAddress_Params{Struct: s}) }
	}
	return RPCService_listenerAddress_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c RPCService) ActiveConns(ctx context.Context, params func(RPCService_activeConns_Params) error, opts ...capnp.CallOption) RPCService_activeConns_Results_Promise {
	if c.Client == nil {
		return RPCService_activeConns_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa7e3c40f8e5ecb74,
			MethodID:      3,
			InterfaceName: "app.capnp:RPCService",
			MethodName:    "activeConns",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(RPCService_activeConns_Params{Struct: s}) }
	}
	return RPCService_activeConns_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c RPCService) MaxConns(ctx context.Context, params func(RPCService_maxConns_Params) error, opts ...capnp.CallOption) RPCService_maxConns_Results_Promise {
	if c.Client == nil {
		return RPCService_maxConns_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa7e3c40f8e5ecb74,
			MethodID:      4,
			InterfaceName: "app.capnp:RPCService",
			MethodName:    "maxConns",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(RPCService_maxConns_Params{Struct: s}) }
	}
	return RPCService_maxConns_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}

type RPCService_Server interface {
	Id(RPCService_id) error

	ListenerAlive(RPCService_listenerAlive) error

	ListenerAddress(RPCService_listenerAddress) error

	ActiveConns(RPCService_activeConns) error

	MaxConns(RPCService_maxConns) error
}

func RPCService_ServerToClient(s RPCService_Server) RPCService {
	c, _ := s.(server.Closer)
	return RPCService{Client: server.New(RPCService_Methods(nil, s), c)}
}

func RPCService_Methods(methods []server.Method, s RPCService_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 5)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa7e3c40f8e5ecb74,
			MethodID:      0,
			InterfaceName: "app.capnp:RPCService",
			MethodName:    "id",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := RPCService_id{c, opts, RPCService_id_Params{Struct: p}, RPCService_id_Results{Struct: r}}
			return s.Id(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa7e3c40f8e5ecb74,
			MethodID:      1,
			InterfaceName: "app.capnp:RPCService",
			MethodName:    "listenerAlive",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := RPCService_listenerAlive{c, opts, RPCService_listenerAlive_Params{Struct: p}, RPCService_listenerAlive_Results{Struct: r}}
			return s.ListenerAlive(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa7e3c40f8e5ecb74,
			MethodID:      2,
			InterfaceName: "app.capnp:RPCService",
			MethodName:    "listenerAddress",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := RPCService_listenerAddress{c, opts, RPCService_listenerAddress_Params{Struct: p}, RPCService_listenerAddress_Results{Struct: r}}
			return s.ListenerAddress(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa7e3c40f8e5ecb74,
			MethodID:      3,
			InterfaceName: "app.capnp:RPCService",
			MethodName:    "activeConns",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := RPCService_activeConns{c, opts, RPCService_activeConns_Params{Struct: p}, RPCService_activeConns_Results{Struct: r}}
			return s.ActiveConns(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa7e3c40f8e5ecb74,
			MethodID:      4,
			InterfaceName: "app.capnp:RPCService",
			MethodName:    "maxConns",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := RPCService_maxConns{c, opts, RPCService_maxConns_Params{Struct: p}, RPCService_maxConns_Results{Struct: r}}
			return s.MaxConns(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	return methods
}

// RPCService_id holds the arguments for a server call to RPCService.id.
type RPCService_id struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  RPCService_id_Params
	Results RPCService_id_Results
}

// RPCService_listenerAlive holds the arguments for a server call to RPCService.listenerAlive.
type RPCService_listenerAlive struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  RPCService_listenerAlive_Params
	Results RPCService_listenerAlive_Results
}

// RPCService_listenerAddress holds the arguments for a server call to RPCService.listenerAddress.
type RPCService_listenerAddress struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  RPCService_listenerAddress_Params
	Results RPCService_listenerAddress_Results
}

// RPCService_activeConns holds the arguments for a server call to RPCService.activeConns.
type RPCService_activeConns struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  RPCService_activeConns_Params
	Results RPCService_activeConns_Results
}

// RPCService_maxConns holds the arguments for a server call to RPCService.maxConns.
type RPCService_maxConns struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  RPCService_maxConns_Params
	Results RPCService_maxConns_Results
}

type RPCService_id_Params struct{ capnp.Struct }

// RPCService_id_Params_TypeID is the unique identifier for the type RPCService_id_Params.
const RPCService_id_Params_TypeID = 0x88e166675c857e18

func NewRPCService_id_Params(s *capnp.Segment) (RPCService_id_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return RPCService_id_Params{st}, err
}

func NewRootRPCService_id_Params(s *capnp.Segment) (RPCService_id_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return RPCService_id_Params{st}, err
}

func ReadRootRPCService_id_Params(msg *capnp.Message) (RPCService_id_Params, error) {
	root, err := msg.RootPtr()
	return RPCService_id_Params{root.Struct()}, err
}

func (s RPCService_id_Params) String() string {
	str, _ := text.Marshal(0x88e166675c857e18, s.Struct)
	return str
}

// RPCService_id_Params_List is a list of RPCService_id_Params.
type RPCService_id_Params_List struct{ capnp.List }

// NewRPCService_id_Params creates a new list of RPCService_id_Params.
func NewRPCService_id_Params_List(s *capnp.Segment, sz int32) (RPCService_id_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return RPCService_id_Params_List{l}, err
}

func (s RPCService_id_Params_List) At(i int) RPCService_id_Params {
	return RPCService_id_Params{s.List.Struct(i)}
}

func (s RPCService_id_Params_List) Set(i int, v RPCService_id_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s RPCService_id_Params_List) String() string {
	str, _ := text.MarshalList(0x88e166675c857e18, s.List)
	return str
}

// RPCService_id_Params_Promise is a wrapper for a RPCService_id_Params promised by a client call.
type RPCService_id_Params_Promise struct{ *capnp.Pipeline }

func (p RPCService_id_Params_Promise) Struct() (RPCService_id_Params, error) {
	s, err := p.Pipeline.Struct()
	return RPCService_id_Params{s}, err
}

type RPCService_id_Results struct{ capnp.Struct }

// RPCService_id_Results_TypeID is the unique identifier for the type RPCService_id_Results.
const RPCService_id_Results_TypeID = 0xc21e37cdb9df069e

func NewRPCService_id_Results(s *capnp.Segment) (RPCService_id_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return RPCService_id_Results{st}, err
}

func NewRootRPCService_id_Results(s *capnp.Segment) (RPCService_id_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return RPCService_id_Results{st}, err
}

func ReadRootRPCService_id_Results(msg *capnp.Message) (RPCService_id_Results, error) {
	root, err := msg.RootPtr()
	return RPCService_id_Results{root.Struct()}, err
}

func (s RPCService_id_Results) String() string {
	str, _ := text.Marshal(0xc21e37cdb9df069e, s.Struct)
	return str
}

func (s RPCService_id_Results) ServiceId() uint64 {
	return s.Struct.Uint64(0)
}

func (s RPCService_id_Results) SetServiceId(v uint64) {
	s.Struct.SetUint64(0, v)
}

// RPCService_id_Results_List is a list of RPCService_id_Results.
type RPCService_id_Results_List struct{ capnp.List }

// NewRPCService_id_Results creates a new list of RPCService_id_Results.
func NewRPCService_id_Results_List(s *capnp.Segment, sz int32) (RPCService_id_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return RPCService_id_Results_List{l}, err
}

func (s RPCService_id_Results_List) At(i int) RPCService_id_Results {
	return RPCService_id_Results{s.List.Struct(i)}
}

func (s RPCService_id_Results_List) Set(i int, v RPCService_id_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s RPCService_id_Results_List) String() string {
	str, _ := text.MarshalList(0xc21e37cdb9df069e, s.List)
	return str
}

// RPCService_id_Results_Promise is a wrapper for a RPCService_id_Results promised by a client call.
type RPCService_id_Results_Promise struct{ *capnp.Pipeline }

func (p RPCService_id_Results_Promise) Struct() (RPCService_id_Results, error) {
	s, err := p.Pipeline.Struct()
	return RPCService_id_Results{s}, err
}

type RPCService_listenerAlive_Params struct{ capnp.Struct }

// RPCService_listenerAlive_Params_TypeID is the unique identifier for the type RPCService_listenerAlive_Params.
const RPCService_listenerAlive_Params_TypeID = 0xc7fcacbb7e6c5bb0

func NewRPCService_listenerAlive_Params(s *capnp.Segment) (RPCService_listenerAlive_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return RPCService_listenerAlive_Params{st}, err
}

func NewRootRPCService_listenerAlive_Params(s *capnp.Segment) (RPCService_listenerAlive_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return RPCService_listenerAlive_Params{st}, err
}

func ReadRootRPCService_listenerAlive_Params(msg *capnp.Message) (RPCService_listenerAlive_Params, error) {
	root, err := msg.RootPtr()
	return RPCService_listenerAlive_Params{root.Struct()}, err
}

func (s RPCService_listenerAlive_Params) String() string {
	str, _ := text.Marshal(0xc7fcacbb7e6c5bb0, s.Struct)
	return str
}

// RPCService_listenerAlive_Params_List is a list of RPCService_listenerAlive_Params.
type RPCService_listenerAlive_Params_List struct{ capnp.List }

// NewRPCService_listenerAlive_Params creates a new list of RPCService_listenerAlive_Params.
func NewRPCService_listenerAlive_Params_List(s *capnp.Segment, sz int32) (RPCService_listenerAlive_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return RPCService_listenerAlive_Params_List{l}, err
}

func (s RPCService_listenerAlive_Params_List) At(i int) RPCService_listenerAlive_Params {
	return RPCService_listenerAlive_Params{s.List.Struct(i)}
}

func (s RPCService_listenerAlive_Params_List) Set(i int, v RPCService_listenerAlive_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s RPCService_listenerAlive_Params_List) String() string {
	str, _ := text.MarshalList(0xc7fcacbb7e6c5bb0, s.List)
	return str
}

// RPCService_listenerAlive_Params_Promise is a wrapper for a RPCService_listenerAlive_Params promised by a client call.
type RPCService_listenerAlive_Params_Promise struct{ *capnp.Pipeline }

func (p RPCService_listenerAlive_Params_Promise) Struct() (RPCService_listenerAlive_Params, error) {
	s, err := p.Pipeline.Struct()
	return RPCService_listenerAlive_Params{s}, err
}

type RPCService_listenerAlive_Results struct{ capnp.Struct }

// RPCService_listenerAlive_Results_TypeID is the unique identifier for the type RPCService_listenerAlive_Results.
const RPCService_listenerAlive_Results_TypeID = 0xa76b7607195dee3a

func NewRPCService_listenerAlive_Results(s *capnp.Segment) (RPCService_listenerAlive_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return RPCService_listenerAlive_Results{st}, err
}

func NewRootRPCService_listenerAlive_Results(s *capnp.Segment) (RPCService_listenerAlive_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return RPCService_listenerAlive_Results{st}, err
}

func ReadRootRPCService_listenerAlive_Results(msg *capnp.Message) (RPCService_listenerAlive_Results, error) {
	root, err := msg.RootPtr()
	return RPCService_listenerAlive_Results{root.Struct()}, err
}

func (s RPCService_listenerAlive_Results) String() string {
	str, _ := text.Marshal(0xa76b7607195dee3a, s.Struct)
	return str
}

func (s RPCService_listenerAlive_Results) ListenerAlive() bool {
	return s.Struct.Bit(0)
}

func (s RPCService_listenerAlive_Results) SetListenerAlive(v bool) {
	s.Struct.SetBit(0, v)
}

// RPCService_listenerAlive_Results_List is a list of RPCService_listenerAlive_Results.
type RPCService_listenerAlive_Results_List struct{ capnp.List }

// NewRPCService_listenerAlive_Results creates a new list of RPCService_listenerAlive_Results.
func NewRPCService_listenerAlive_Results_List(s *capnp.Segment, sz int32) (RPCService_listenerAlive_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return RPCService_listenerAlive_Results_List{l}, err
}

func (s RPCService_listenerAlive_Results_List) At(i int) RPCService_listenerAlive_Results {
	return RPCService_listenerAlive_Results{s.List.Struct(i)}
}

func (s RPCService_listenerAlive_Results_List) Set(i int, v RPCService_listenerAlive_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s RPCService_listenerAlive_Results_List) String() string {
	str, _ := text.MarshalList(0xa76b7607195dee3a, s.List)
	return str
}

// RPCService_listenerAlive_Results_Promise is a wrapper for a RPCService_listenerAlive_Results promised by a client call.
type RPCService_listenerAlive_Results_Promise struct{ *capnp.Pipeline }

func (p RPCService_listenerAlive_Results_Promise) Struct() (RPCService_listenerAlive_Results, error) {
	s, err := p.Pipeline.Struct()
	return RPCService_listenerAlive_Results{s}, err
}

type RPCService_listenerAddress_Params struct{ capnp.Struct }

// RPCService_listenerAddress_Params_TypeID is the unique identifier for the type RPCService_listenerAddress_Params.
const RPCService_listenerAddress_Params_TypeID = 0xdc063192b2b7a561

func NewRPCService_listenerAddress_Params(s *capnp.Segment) (RPCService_listenerAddress_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return RPCService_listenerAddress_Params{st}, err
}

func NewRootRPCService_listenerAddress_Params(s *capnp.Segment) (RPCService_listenerAddress_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return RPCService_listenerAddress_Params{st}, err
}

func ReadRootRPCService_listenerAddress_Params(msg *capnp.Message) (RPCService_listenerAddress_Params, error) {
	root, err := msg.RootPtr()
	return RPCService_listenerAddress_Params{root.Struct()}, err
}

func (s RPCService_listenerAddress_Params) String() string {
	str, _ := text.Marshal(0xdc063192b2b7a561, s.Struct)
	return str
}

// RPCService_listenerAddress_Params_List is a list of RPCService_listenerAddress_Params.
type RPCService_listenerAddress_Params_List struct{ capnp.List }

// NewRPCService_listenerAddress_Params creates a new list of RPCService_listenerAddress_Params.
func NewRPCService_listenerAddress_Params_List(s *capnp.Segment, sz int32) (RPCService_listenerAddress_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return RPCService_listenerAddress_Params_List{l}, err
}

func (s RPCService_listenerAddress_Params_List) At(i int) RPCService_listenerAddress_Params {
	return RPCService_listenerAddress_Params{s.List.Struct(i)}
}

func (s RPCService_listenerAddress_Params_List) Set(i int, v RPCService_listenerAddress_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s RPCService_listenerAddress_Params_List) String() string {
	str, _ := text.MarshalList(0xdc063192b2b7a561, s.List)
	return str
}

// RPCService_listenerAddress_Params_Promise is a wrapper for a RPCService_listenerAddress_Params promised by a client call.
type RPCService_listenerAddress_Params_Promise struct{ *capnp.Pipeline }

func (p RPCService_listenerAddress_Params_Promise) Struct() (RPCService_listenerAddress_Params, error) {
	s, err := p.Pipeline.Struct()
	return RPCService_listenerAddress_Params{s}, err
}

type RPCService_listenerAddress_Results struct{ capnp.Struct }

// RPCService_listenerAddress_Results_TypeID is the unique identifier for the type RPCService_listenerAddress_Results.
const RPCService_listenerAddress_Results_TypeID = 0xb95e72a43cd7c47c

func NewRPCService_listenerAddress_Results(s *capnp.Segment) (RPCService_listenerAddress_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return RPCService_listenerAddress_Results{st}, err
}

func NewRootRPCService_listenerAddress_Results(s *capnp.Segment) (RPCService_listenerAddress_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return RPCService_listenerAddress_Results{st}, err
}

func ReadRootRPCService_listenerAddress_Results(msg *capnp.Message) (RPCService_listenerAddress_Results, error) {
	root, err := msg.RootPtr()
	return RPCService_listenerAddress_Results{root.Struct()}, err
}

func (s RPCService_listenerAddress_Results) String() string {
	str, _ := text.Marshal(0xb95e72a43cd7c47c, s.Struct)
	return str
}

func (s RPCService_listenerAddress_Results) Address() (NetworkAddress, error) {
	p, err := s.Struct.Ptr(0)
	return NetworkAddress{Struct: p.Struct()}, err
}

func (s RPCService_listenerAddress_Results) HasAddress() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s RPCService_listenerAddress_Results) SetAddress(v NetworkAddress) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewAddress sets the address field to a newly
// allocated NetworkAddress struct, preferring placement in s's segment.
func (s RPCService_listenerAddress_Results) NewAddress() (NetworkAddress, error) {
	ss, err := NewNetworkAddress(s.Struct.Segment())
	if err != nil {
		return NetworkAddress{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// RPCService_listenerAddress_Results_List is a list of RPCService_listenerAddress_Results.
type RPCService_listenerAddress_Results_List struct{ capnp.List }

// NewRPCService_listenerAddress_Results creates a new list of RPCService_listenerAddress_Results.
func NewRPCService_listenerAddress_Results_List(s *capnp.Segment, sz int32) (RPCService_listenerAddress_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return RPCService_listenerAddress_Results_List{l}, err
}

func (s RPCService_listenerAddress_Results_List) At(i int) RPCService_listenerAddress_Results {
	return RPCService_listenerAddress_Results{s.List.Struct(i)}
}

func (s RPCService_listenerAddress_Results_List) Set(i int, v RPCService_listenerAddress_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s RPCService_listenerAddress_Results_List) String() string {
	str, _ := text.MarshalList(0xb95e72a43cd7c47c, s.List)
	return str
}

// RPCService_listenerAddress_Results_Promise is a wrapper for a RPCService_listenerAddress_Results promised by a client call.
type RPCService_listenerAddress_Results_Promise struct{ *capnp.Pipeline }

func (p RPCService_listenerAddress_Results_Promise) Struct() (RPCService_listenerAddress_Results, error) {
	s, err := p.Pipeline.Struct()
	return RPCService_listenerAddress_Results{s}, err
}

func (p RPCService_listenerAddress_Results_Promise) Address() NetworkAddress_Promise {
	return NetworkAddress_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type RPCService_activeConns_Params struct{ capnp.Struct }

// RPCService_activeConns_Params_TypeID is the unique identifier for the type RPCService_activeConns_Params.
const RPCService_activeConns_Params_TypeID = 0xf604c2f7eff9f3c7

func NewRPCService_activeConns_Params(s *capnp.Segment) (RPCService_activeConns_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return RPCService_activeConns_Params{st}, err
}

func NewRootRPCService_activeConns_Params(s *capnp.Segment) (RPCService_activeConns_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return RPCService_activeConns_Params{st}, err
}

func ReadRootRPCService_activeConns_Params(msg *capnp.Message) (RPCService_activeConns_Params, error) {
	root, err := msg.RootPtr()
	return RPCService_activeConns_Params{root.Struct()}, err
}

func (s RPCService_activeConns_Params) String() string {
	str, _ := text.Marshal(0xf604c2f7eff9f3c7, s.Struct)
	return str
}

// RPCService_activeConns_Params_List is a list of RPCService_activeConns_Params.
type RPCService_activeConns_Params_List struct{ capnp.List }

// NewRPCService_activeConns_Params creates a new list of RPCService_activeConns_Params.
func NewRPCService_activeConns_Params_List(s *capnp.Segment, sz int32) (RPCService_activeConns_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return RPCService_activeConns_Params_List{l}, err
}

func (s RPCService_activeConns_Params_List) At(i int) RPCService_activeConns_Params {
	return RPCService_activeConns_Params{s.List.Struct(i)}
}

func (s RPCService_activeConns_Params_List) Set(i int, v RPCService_activeConns_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s RPCService_activeConns_Params_List) String() string {
	str, _ := text.MarshalList(0xf604c2f7eff9f3c7, s.List)
	return str
}

// RPCService_activeConns_Params_Promise is a wrapper for a RPCService_activeConns_Params promised by a client call.
type RPCService_activeConns_Params_Promise struct{ *capnp.Pipeline }

func (p RPCService_activeConns_Params_Promise) Struct() (RPCService_activeConns_Params, error) {
	s, err := p.Pipeline.Struct()
	return RPCService_activeConns_Params{s}, err
}

type RPCService_activeConns_Results struct{ capnp.Struct }

// RPCService_activeConns_Results_TypeID is the unique identifier for the type RPCService_activeConns_Results.
const RPCService_activeConns_Results_TypeID = 0xf175231b9048f2c5

func NewRPCService_activeConns_Results(s *capnp.Segment) (RPCService_activeConns_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return RPCService_activeConns_Results{st}, err
}

func NewRootRPCService_activeConns_Results(s *capnp.Segment) (RPCService_activeConns_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return RPCService_activeConns_Results{st}, err
}

func ReadRootRPCService_activeConns_Results(msg *capnp.Message) (RPCService_activeConns_Results, error) {
	root, err := msg.RootPtr()
	return RPCService_activeConns_Results{root.Struct()}, err
}

func (s RPCService_activeConns_Results) String() string {
	str, _ := text.Marshal(0xf175231b9048f2c5, s.Struct)
	return str
}

func (s RPCService_activeConns_Results) Count() uint32 {
	return s.Struct.Uint32(0)
}

func (s RPCService_activeConns_Results) SetCount(v uint32) {
	s.Struct.SetUint32(0, v)
}

// RPCService_activeConns_Results_List is a list of RPCService_activeConns_Results.
type RPCService_activeConns_Results_List struct{ capnp.List }

// NewRPCService_activeConns_Results creates a new list of RPCService_activeConns_Results.
func NewRPCService_activeConns_Results_List(s *capnp.Segment, sz int32) (RPCService_activeConns_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return RPCService_activeConns_Results_List{l}, err
}

func (s RPCService_activeConns_Results_List) At(i int) RPCService_activeConns_Results {
	return RPCService_activeConns_Results{s.List.Struct(i)}
}

func (s RPCService_activeConns_Results_List) Set(i int, v RPCService_activeConns_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s RPCService_activeConns_Results_List) String() string {
	str, _ := text.MarshalList(0xf175231b9048f2c5, s.List)
	return str
}

// RPCService_activeConns_Results_Promise is a wrapper for a RPCService_activeConns_Results promised by a client call.
type RPCService_activeConns_Results_Promise struct{ *capnp.Pipeline }

func (p RPCService_activeConns_Results_Promise) Struct() (RPCService_activeConns_Results, error) {
	s, err := p.Pipeline.Struct()
	return RPCService_activeConns_Results{s}, err
}

type RPCService_maxConns_Params struct{ capnp.Struct }

// RPCService_maxConns_Params_TypeID is the unique identifier for the type RPCService_maxConns_Params.
const RPCService_maxConns_Params_TypeID = 0x8526d6d896c688e0

func NewRPCService_maxConns_Params(s *capnp.Segment) (RPCService_maxConns_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return RPCService_maxConns_Params{st}, err
}

func NewRootRPCService_maxConns_Params(s *capnp.Segment) (RPCService_maxConns_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return RPCService_maxConns_Params{st}, err
}

func ReadRootRPCService_maxConns_Params(msg *capnp.Message) (RPCService_maxConns_Params, error) {
	root, err := msg.RootPtr()
	return RPCService_maxConns_Params{root.Struct()}, err
}

func (s RPCService_maxConns_Params) String() string {
	str, _ := text.Marshal(0x8526d6d896c688e0, s.Struct)
	return str
}

// RPCService_maxConns_Params_List is a list of RPCService_maxConns_Params.
type RPCService_maxConns_Params_List struct{ capnp.List }

// NewRPCService_maxConns_Params creates a new list of RPCService_maxConns_Params.
func NewRPCService_maxConns_Params_List(s *capnp.Segment, sz int32) (RPCService_maxConns_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return RPCService_maxConns_Params_List{l}, err
}

func (s RPCService_maxConns_Params_List) At(i int) RPCService_maxConns_Params {
	return RPCService_maxConns_Params{s.List.Struct(i)}
}

func (s RPCService_maxConns_Params_List) Set(i int, v RPCService_maxConns_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s RPCService_maxConns_Params_List) String() string {
	str, _ := text.MarshalList(0x8526d6d896c688e0, s.List)
	return str
}

// RPCService_maxConns_Params_Promise is a wrapper for a RPCService_maxConns_Params promised by a client call.
type RPCService_maxConns_Params_Promise struct{ *capnp.Pipeline }

func (p RPCService_maxConns_Params_Promise) Struct() (RPCService_maxConns_Params, error) {
	s, err := p.Pipeline.Struct()
	return RPCService_maxConns_Params{s}, err
}

type RPCService_maxConns_Results struct{ capnp.Struct }

// RPCService_maxConns_Results_TypeID is the unique identifier for the type RPCService_maxConns_Results.
const RPCService_maxConns_Results_TypeID = 0xa23b4c1a964c722b

func NewRPCService_maxConns_Results(s *capnp.Segment) (RPCService_maxConns_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return RPCService_maxConns_Results{st}, err
}

func NewRootRPCService_maxConns_Results(s *capnp.Segment) (RPCService_maxConns_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return RPCService_maxConns_Results{st}, err
}

func ReadRootRPCService_maxConns_Results(msg *capnp.Message) (RPCService_maxConns_Results, error) {
	root, err := msg.RootPtr()
	return RPCService_maxConns_Results{root.Struct()}, err
}

func (s RPCService_maxConns_Results) String() string {
	str, _ := text.Marshal(0xa23b4c1a964c722b, s.Struct)
	return str
}

func (s RPCService_maxConns_Results) Count() uint32 {
	return s.Struct.Uint32(0)
}

func (s RPCService_maxConns_Results) SetCount(v uint32) {
	s.Struct.SetUint32(0, v)
}

// RPCService_maxConns_Results_List is a list of RPCService_maxConns_Results.
type RPCService_maxConns_Results_List struct{ capnp.List }

// NewRPCService_maxConns_Results creates a new list of RPCService_maxConns_Results.
func NewRPCService_maxConns_Results_List(s *capnp.Segment, sz int32) (RPCService_maxConns_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return RPCService_maxConns_Results_List{l}, err
}

func (s RPCService_maxConns_Results_List) At(i int) RPCService_maxConns_Results {
	return RPCService_maxConns_Results{s.List.Struct(i)}
}

func (s RPCService_maxConns_Results_List) Set(i int, v RPCService_maxConns_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s RPCService_maxConns_Results_List) String() string {
	str, _ := text.MarshalList(0xa23b4c1a964c722b, s.List)
	return str
}

// RPCService_maxConns_Results_Promise is a wrapper for a RPCService_maxConns_Results promised by a client call.
type RPCService_maxConns_Results_Promise struct{ *capnp.Pipeline }

func (p RPCService_maxConns_Results_Promise) Struct() (RPCService_maxConns_Results, error) {
	s, err := p.Pipeline.Struct()
	return RPCService_maxConns_Results{s}, err
}

type NetworkAddress struct{ capnp.Struct }

// NetworkAddress_TypeID is the unique identifier for the type NetworkAddress.
const NetworkAddress_TypeID = 0x9aae3a8502e6d5eb

func NewNetworkAddress(s *capnp.Segment) (NetworkAddress, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return NetworkAddress{st}, err
}

func NewRootNetworkAddress(s *capnp.Segment) (NetworkAddress, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return NetworkAddress{st}, err
}

func ReadRootNetworkAddress(msg *capnp.Message) (NetworkAddress, error) {
	root, err := msg.RootPtr()
	return NetworkAddress{root.Struct()}, err
}

func (s NetworkAddress) String() string {
	str, _ := text.Marshal(0x9aae3a8502e6d5eb, s.Struct)
	return str
}

func (s NetworkAddress) Network() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s NetworkAddress) HasNetwork() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s NetworkAddress) NetworkBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s NetworkAddress) SetNetwork(v string) error {
	return s.Struct.SetText(0, v)
}

func (s NetworkAddress) Address() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s NetworkAddress) HasAddress() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s NetworkAddress) AddressBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s NetworkAddress) SetAddress(v string) error {
	return s.Struct.SetText(1, v)
}

// NetworkAddress_List is a list of NetworkAddress.
type NetworkAddress_List struct{ capnp.List }

// NewNetworkAddress creates a new list of NetworkAddress.
func NewNetworkAddress_List(s *capnp.Segment, sz int32) (NetworkAddress_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return NetworkAddress_List{l}, err
}

func (s NetworkAddress_List) At(i int) NetworkAddress { return NetworkAddress{s.List.Struct(i)} }

func (s NetworkAddress_List) Set(i int, v NetworkAddress) error { return s.List.SetStruct(i, v.Struct) }

func (s NetworkAddress_List) String() string {
	str, _ := text.MarshalList(0x9aae3a8502e6d5eb, s.List)
	return str
}

// NetworkAddress_Promise is a wrapper for a NetworkAddress promised by a client call.
type NetworkAddress_Promise struct{ *capnp.Pipeline }

func (p NetworkAddress_Promise) Struct() (NetworkAddress, error) {
	s, err := p.Pipeline.Struct()
	return NetworkAddress{s}, err
}

type LogLevel uint16

// LogLevel_TypeID is the unique identifier for the type LogLevel.
const LogLevel_TypeID = 0xce802aa8977a9aee

// Values of LogLevel.
const (
	LogLevel_debug LogLevel = 0
	LogLevel_info  LogLevel = 1
	LogLevel_warn  LogLevel = 2
	LogLevel_error LogLevel = 3
)

// String returns the enum's constant name.
func (c LogLevel) String() string {
	switch c {
	case LogLevel_debug:
		return "debug"
	case LogLevel_info:
		return "info"
	case LogLevel_warn:
		return "warn"
	case LogLevel_error:
		return "error"

	default:
		return ""
	}
}

// LogLevelFromString returns the enum value with a name,
// or the zero value if there's no such value.
func LogLevelFromString(c string) LogLevel {
	switch c {
	case "debug":
		return LogLevel_debug
	case "info":
		return LogLevel_info
	case "warn":
		return LogLevel_warn
	case "error":
		return LogLevel_error

	default:
		return 0
	}
}

type LogLevel_List struct{ capnp.List }

func NewLogLevel_List(s *capnp.Segment, sz int32) (LogLevel_List, error) {
	l, err := capnp.NewUInt16List(s, sz)
	return LogLevel_List{l.List}, err
}

func (l LogLevel_List) At(i int) LogLevel {
	ul := capnp.UInt16List{List: l.List}
	return LogLevel(ul.At(i))
}

func (l LogLevel_List) Set(i int, v LogLevel) {
	ul := capnp.UInt16List{List: l.List}
	ul.Set(i, uint16(v))
}

type Runtime struct{ Client capnp.Client }

// Runtime_TypeID is the unique identifier for the type Runtime.
const Runtime_TypeID = 0xdda2e02140fe8f08

func (c Runtime) GoVersion(ctx context.Context, params func(Runtime_goVersion_Params) error, opts ...capnp.CallOption) Runtime_goVersion_Results_Promise {
	if c.Client == nil {
		return Runtime_goVersion_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xdda2e02140fe8f08,
			MethodID:      0,
			InterfaceName: "app.capnp:Runtime",
			MethodName:    "goVersion",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Runtime_goVersion_Params{Struct: s}) }
	}
	return Runtime_goVersion_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Runtime) NumCPU(ctx context.Context, params func(Runtime_numCPU_Params) error, opts ...capnp.CallOption) Runtime_numCPU_Results_Promise {
	if c.Client == nil {
		return Runtime_numCPU_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xdda2e02140fe8f08,
			MethodID:      1,
			InterfaceName: "app.capnp:Runtime",
			MethodName:    "numCPU",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Runtime_numCPU_Params{Struct: s}) }
	}
	return Runtime_numCPU_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Runtime) NumGoroutine(ctx context.Context, params func(Runtime_numGoroutine_Params) error, opts ...capnp.CallOption) Runtime_numGoroutine_Results_Promise {
	if c.Client == nil {
		return Runtime_numGoroutine_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xdda2e02140fe8f08,
			MethodID:      2,
			InterfaceName: "app.capnp:Runtime",
			MethodName:    "numGoroutine",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Runtime_numGoroutine_Params{Struct: s}) }
	}
	return Runtime_numGoroutine_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Runtime) MemStats(ctx context.Context, params func(Runtime_memStats_Params) error, opts ...capnp.CallOption) Runtime_memStats_Results_Promise {
	if c.Client == nil {
		return Runtime_memStats_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xdda2e02140fe8f08,
			MethodID:      3,
			InterfaceName: "app.capnp:Runtime",
			MethodName:    "memStats",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Runtime_memStats_Params{Struct: s}) }
	}
	return Runtime_memStats_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Runtime) StackDump(ctx context.Context, params func(Runtime_stackDump_Params) error, opts ...capnp.CallOption) Runtime_stackDump_Results_Promise {
	if c.Client == nil {
		return Runtime_stackDump_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xdda2e02140fe8f08,
			MethodID:      4,
			InterfaceName: "app.capnp:Runtime",
			MethodName:    "stackDump",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Runtime_stackDump_Params{Struct: s}) }
	}
	return Runtime_stackDump_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}

type Runtime_Server interface {
	GoVersion(Runtime_goVersion) error

	NumCPU(Runtime_numCPU) error

	NumGoroutine(Runtime_numGoroutine) error

	MemStats(Runtime_memStats) error

	StackDump(Runtime_stackDump) error
}

func Runtime_ServerToClient(s Runtime_Server) Runtime {
	c, _ := s.(server.Closer)
	return Runtime{Client: server.New(Runtime_Methods(nil, s), c)}
}

func Runtime_Methods(methods []server.Method, s Runtime_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 5)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xdda2e02140fe8f08,
			MethodID:      0,
			InterfaceName: "app.capnp:Runtime",
			MethodName:    "goVersion",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Runtime_goVersion{c, opts, Runtime_goVersion_Params{Struct: p}, Runtime_goVersion_Results{Struct: r}}
			return s.GoVersion(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xdda2e02140fe8f08,
			MethodID:      1,
			InterfaceName: "app.capnp:Runtime",
			MethodName:    "numCPU",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Runtime_numCPU{c, opts, Runtime_numCPU_Params{Struct: p}, Runtime_numCPU_Results{Struct: r}}
			return s.NumCPU(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xdda2e02140fe8f08,
			MethodID:      2,
			InterfaceName: "app.capnp:Runtime",
			MethodName:    "numGoroutine",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Runtime_numGoroutine{c, opts, Runtime_numGoroutine_Params{Struct: p}, Runtime_numGoroutine_Results{Struct: r}}
			return s.NumGoroutine(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xdda2e02140fe8f08,
			MethodID:      3,
			InterfaceName: "app.capnp:Runtime",
			MethodName:    "memStats",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Runtime_memStats{c, opts, Runtime_memStats_Params{Struct: p}, Runtime_memStats_Results{Struct: r}}
			return s.MemStats(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xdda2e02140fe8f08,
			MethodID:      4,
			InterfaceName: "app.capnp:Runtime",
			MethodName:    "stackDump",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Runtime_stackDump{c, opts, Runtime_stackDump_Params{Struct: p}, Runtime_stackDump_Results{Struct: r}}
			return s.StackDump(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	return methods
}

// Runtime_goVersion holds the arguments for a server call to Runtime.goVersion.
type Runtime_goVersion struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Runtime_goVersion_Params
	Results Runtime_goVersion_Results
}

// Runtime_numCPU holds the arguments for a server call to Runtime.numCPU.
type Runtime_numCPU struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Runtime_numCPU_Params
	Results Runtime_numCPU_Results
}

// Runtime_numGoroutine holds the arguments for a server call to Runtime.numGoroutine.
type Runtime_numGoroutine struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Runtime_numGoroutine_Params
	Results Runtime_numGoroutine_Results
}

// Runtime_memStats holds the arguments for a server call to Runtime.memStats.
type Runtime_memStats struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Runtime_memStats_Params
	Results Runtime_memStats_Results
}

// Runtime_stackDump holds the arguments for a server call to Runtime.stackDump.
type Runtime_stackDump struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Runtime_stackDump_Params
	Results Runtime_stackDump_Results
}

type Runtime_goVersion_Params struct{ capnp.Struct }

// Runtime_goVersion_Params_TypeID is the unique identifier for the type Runtime_goVersion_Params.
const Runtime_goVersion_Params_TypeID = 0xed1583a692140448

func NewRuntime_goVersion_Params(s *capnp.Segment) (Runtime_goVersion_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Runtime_goVersion_Params{st}, err
}

func NewRootRuntime_goVersion_Params(s *capnp.Segment) (Runtime_goVersion_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Runtime_goVersion_Params{st}, err
}

func ReadRootRuntime_goVersion_Params(msg *capnp.Message) (Runtime_goVersion_Params, error) {
	root, err := msg.RootPtr()
	return Runtime_goVersion_Params{root.Struct()}, err
}

func (s Runtime_goVersion_Params) String() string {
	str, _ := text.Marshal(0xed1583a692140448, s.Struct)
	return str
}

// Runtime_goVersion_Params_List is a list of Runtime_goVersion_Params.
type Runtime_goVersion_Params_List struct{ capnp.List }

// NewRuntime_goVersion_Params creates a new list of Runtime_goVersion_Params.
func NewRuntime_goVersion_Params_List(s *capnp.Segment, sz int32) (Runtime_goVersion_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Runtime_goVersion_Params_List{l}, err
}

func (s Runtime_goVersion_Params_List) At(i int) Runtime_goVersion_Params {
	return Runtime_goVersion_Params{s.List.Struct(i)}
}

func (s Runtime_goVersion_Params_List) Set(i int, v Runtime_goVersion_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Runtime_goVersion_Params_List) String() string {
	str, _ := text.MarshalList(0xed1583a692140448, s.List)
	return str
}

// Runtime_goVersion_Params_Promise is a wrapper for a Runtime_goVersion_Params promised by a client call.
type Runtime_goVersion_Params_Promise struct{ *capnp.Pipeline }

func (p Runtime_goVersion_Params_Promise) Struct() (Runtime_goVersion_Params, error) {
	s, err := p.Pipeline.Struct()
	return Runtime_goVersion_Params{s}, err
}

type Runtime_goVersion_Results struct{ capnp.Struct }

// Runtime_goVersion_Results_TypeID is the unique identifier for the type Runtime_goVersion_Results.
const Runtime_goVersion_Results_TypeID = 0xe5a432109337fc5d

func NewRuntime_goVersion_Results(s *capnp.Segment) (Runtime_goVersion_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Runtime_goVersion_Results{st}, err
}

func NewRootRuntime_goVersion_Results(s *capnp.Segment) (Runtime_goVersion_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Runtime_goVersion_Results{st}, err
}

func ReadRootRuntime_goVersion_Results(msg *capnp.Message) (Runtime_goVersion_Results, error) {
	root, err := msg.RootPtr()
	return Runtime_goVersion_Results{root.Struct()}, err
}

func (s Runtime_goVersion_Results) String() string {
	str, _ := text.Marshal(0xe5a432109337fc5d, s.Struct)
	return str
}

func (s Runtime_goVersion_Results) Version() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Runtime_goVersion_Results) HasVersion() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Runtime_goVersion_Results) VersionBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Runtime_goVersion_Results) SetVersion(v string) error {
	return s.Struct.SetText(0, v)
}

// Runtime_goVersion_Results_List is a list of Runtime_goVersion_Results.
type Runtime_goVersion_Results_List struct{ capnp.List }

// NewRuntime_goVersion_Results creates a new list of Runtime_goVersion_Results.
func NewRuntime_goVersion_Results_List(s *capnp.Segment, sz int32) (Runtime_goVersion_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Runtime_goVersion_Results_List{l}, err
}

func (s Runtime_goVersion_Results_List) At(i int) Runtime_goVersion_Results {
	return Runtime_goVersion_Results{s.List.Struct(i)}
}

func (s Runtime_goVersion_Results_List) Set(i int, v Runtime_goVersion_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Runtime_goVersion_Results_List) String() string {
	str, _ := text.MarshalList(0xe5a432109337fc5d, s.List)
	return str
}

// Runtime_goVersion_Results_Promise is a wrapper for a Runtime_goVersion_Results promised by a client call.
type Runtime_goVersion_Results_Promise struct{ *capnp.Pipeline }

func (p Runtime_goVersion_Results_Promise) Struct() (Runtime_goVersion_Results, error) {
	s, err := p.Pipeline.Struct()
	return Runtime_goVersion_Results{s}, err
}

type Runtime_numCPU_Params struct{ capnp.Struct }

// Runtime_numCPU_Params_TypeID is the unique identifier for the type Runtime_numCPU_Params.
const Runtime_numCPU_Params_TypeID = 0xad64659a5d76e80b

func NewRuntime_numCPU_Params(s *capnp.Segment) (Runtime_numCPU_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Runtime_numCPU_Params{st}, err
}

func NewRootRuntime_numCPU_Params(s *capnp.Segment) (Runtime_numCPU_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Runtime_numCPU_Params{st}, err
}

func ReadRootRuntime_numCPU_Params(msg *capnp.Message) (Runtime_numCPU_Params, error) {
	root, err := msg.RootPtr()
	return Runtime_numCPU_Params{root.Struct()}, err
}

func (s Runtime_numCPU_Params) String() string {
	str, _ := text.Marshal(0xad64659a5d76e80b, s.Struct)
	return str
}

// Runtime_numCPU_Params_List is a list of Runtime_numCPU_Params.
type Runtime_numCPU_Params_List struct{ capnp.List }

// NewRuntime_numCPU_Params creates a new list of Runtime_numCPU_Params.
func NewRuntime_numCPU_Params_List(s *capnp.Segment, sz int32) (Runtime_numCPU_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Runtime_numCPU_Params_List{l}, err
}

func (s Runtime_numCPU_Params_List) At(i int) Runtime_numCPU_Params {
	return Runtime_numCPU_Params{s.List.Struct(i)}
}

func (s Runtime_numCPU_Params_List) Set(i int, v Runtime_numCPU_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Runtime_numCPU_Params_List) String() string {
	str, _ := text.MarshalList(0xad64659a5d76e80b, s.List)
	return str
}

// Runtime_numCPU_Params_Promise is a wrapper for a Runtime_numCPU_Params promised by a client call.
type Runtime_numCPU_Params_Promise struct{ *capnp.Pipeline }

func (p Runtime_numCPU_Params_Promise) Struct() (Runtime_numCPU_Params, error) {
	s, err := p.Pipeline.Struct()
	return Runtime_numCPU_Params{s}, err
}

type Runtime_numCPU_Results struct{ capnp.Struct }

// Runtime_numCPU_Results_TypeID is the unique identifier for the type Runtime_numCPU_Results.
const Runtime_numCPU_Results_TypeID = 0xc3806a9410e187be

func NewRuntime_numCPU_Results(s *capnp.Segment) (Runtime_numCPU_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Runtime_numCPU_Results{st}, err
}

func NewRootRuntime_numCPU_Results(s *capnp.Segment) (Runtime_numCPU_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Runtime_numCPU_Results{st}, err
}

func ReadRootRuntime_numCPU_Results(msg *capnp.Message) (Runtime_numCPU_Results, error) {
	root, err := msg.RootPtr()
	return Runtime_numCPU_Results{root.Struct()}, err
}

func (s Runtime_numCPU_Results) String() string {
	str, _ := text.Marshal(0xc3806a9410e187be, s.Struct)
	return str
}

func (s Runtime_numCPU_Results) Count() uint32 {
	return s.Struct.Uint32(0)
}

func (s Runtime_numCPU_Results) SetCount(v uint32) {
	s.Struct.SetUint32(0, v)
}

// Runtime_numCPU_Results_List is a list of Runtime_numCPU_Results.
type Runtime_numCPU_Results_List struct{ capnp.List }

// NewRuntime_numCPU_Results creates a new list of Runtime_numCPU_Results.
func NewRuntime_numCPU_Results_List(s *capnp.Segment, sz int32) (Runtime_numCPU_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return Runtime_numCPU_Results_List{l}, err
}

func (s Runtime_numCPU_Results_List) At(i int) Runtime_numCPU_Results {
	return Runtime_numCPU_Results{s.List.Struct(i)}
}

func (s Runtime_numCPU_Results_List) Set(i int, v Runtime_numCPU_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Runtime_numCPU_Results_List) String() string {
	str, _ := text.MarshalList(0xc3806a9410e187be, s.List)
	return str
}

// Runtime_numCPU_Results_Promise is a wrapper for a Runtime_numCPU_Results promised by a client call.
type Runtime_numCPU_Results_Promise struct{ *capnp.Pipeline }

func (p Runtime_numCPU_Results_Promise) Struct() (Runtime_numCPU_Results, error) {
	s, err := p.Pipeline.Struct()
	return Runtime_numCPU_Results{s}, err
}

type Runtime_numGoroutine_Params struct{ capnp.Struct }

// Runtime_numGoroutine_Params_TypeID is the unique identifier for the type Runtime_numGoroutine_Params.
const Runtime_numGoroutine_Params_TypeID = 0xfa6ca90efc9ff291

func NewRuntime_numGoroutine_Params(s *capnp.Segment) (Runtime_numGoroutine_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Runtime_numGoroutine_Params{st}, err
}

func NewRootRuntime_numGoroutine_Params(s *capnp.Segment) (Runtime_numGoroutine_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Runtime_numGoroutine_Params{st}, err
}

func ReadRootRuntime_numGoroutine_Params(msg *capnp.Message) (Runtime_numGoroutine_Params, error) {
	root, err := msg.RootPtr()
	return Runtime_numGoroutine_Params{root.Struct()}, err
}

func (s Runtime_numGoroutine_Params) String() string {
	str, _ := text.Marshal(0xfa6ca90efc9ff291, s.Struct)
	return str
}

// Runtime_numGoroutine_Params_List is a list of Runtime_numGoroutine_Params.
type Runtime_numGoroutine_Params_List struct{ capnp.List }

// NewRuntime_numGoroutine_Params creates a new list of Runtime_numGoroutine_Params.
func NewRuntime_numGoroutine_Params_List(s *capnp.Segment, sz int32) (Runtime_numGoroutine_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Runtime_numGoroutine_Params_List{l}, err
}

func (s Runtime_numGoroutine_Params_List) At(i int) Runtime_numGoroutine_Params {
	return Runtime_numGoroutine_Params{s.List.Struct(i)}
}

func (s Runtime_numGoroutine_Params_List) Set(i int, v Runtime_numGoroutine_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Runtime_numGoroutine_Params_List) String() string {
	str, _ := text.MarshalList(0xfa6ca90efc9ff291, s.List)
	return str
}

// Runtime_numGoroutine_Params_Promise is a wrapper for a Runtime_numGoroutine_Params promised by a client call.
type Runtime_numGoroutine_Params_Promise struct{ *capnp.Pipeline }

func (p Runtime_numGoroutine_Params_Promise) Struct() (Runtime_numGoroutine_Params, error) {
	s, err := p.Pipeline.Struct()
	return Runtime_numGoroutine_Params{s}, err
}

type Runtime_numGoroutine_Results struct{ capnp.Struct }

// Runtime_numGoroutine_Results_TypeID is the unique identifier for the type Runtime_numGoroutine_Results.
const Runtime_numGoroutine_Results_TypeID = 0xfcf6d1267c1553d3

func NewRuntime_numGoroutine_Results(s *capnp.Segment) (Runtime_numGoroutine_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Runtime_numGoroutine_Results{st}, err
}

func NewRootRuntime_numGoroutine_Results(s *capnp.Segment) (Runtime_numGoroutine_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Runtime_numGoroutine_Results{st}, err
}

func ReadRootRuntime_numGoroutine_Results(msg *capnp.Message) (Runtime_numGoroutine_Results, error) {
	root, err := msg.RootPtr()
	return Runtime_numGoroutine_Results{root.Struct()}, err
}

func (s Runtime_numGoroutine_Results) String() string {
	str, _ := text.Marshal(0xfcf6d1267c1553d3, s.Struct)
	return str
}

func (s Runtime_numGoroutine_Results) Count() uint32 {
	return s.Struct.Uint32(0)
}

func (s Runtime_numGoroutine_Results) SetCount(v uint32) {
	s.Struct.SetUint32(0, v)
}

// Runtime_numGoroutine_Results_List is a list of Runtime_numGoroutine_Results.
type Runtime_numGoroutine_Results_List struct{ capnp.List }

// NewRuntime_numGoroutine_Results creates a new list of Runtime_numGoroutine_Results.
func NewRuntime_numGoroutine_Results_List(s *capnp.Segment, sz int32) (Runtime_numGoroutine_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return Runtime_numGoroutine_Results_List{l}, err
}

func (s Runtime_numGoroutine_Results_List) At(i int) Runtime_numGoroutine_Results {
	return Runtime_numGoroutine_Results{s.List.Struct(i)}
}

func (s Runtime_numGoroutine_Results_List) Set(i int, v Runtime_numGoroutine_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Runtime_numGoroutine_Results_List) String() string {
	str, _ := text.MarshalList(0xfcf6d1267c1553d3, s.List)
	return str
}

// Runtime_numGoroutine_Results_Promise is a wrapper for a Runtime_numGoroutine_Results promised by a client call.
type Runtime_numGoroutine_Results_Promise struct{ *capnp.Pipeline }

func (p Runtime_numGoroutine_Results_Promise) Struct() (Runtime_numGoroutine_Results, error) {
	s, err := p.Pipeline.Struct()
	return Runtime_numGoroutine_Results{s}, err
}

type Runtime_memStats_Params struct{ capnp.Struct }

// Runtime_memStats_Params_TypeID is the unique identifier for the type Runtime_memStats_Params.
const Runtime_memStats_Params_TypeID = 0xfa7d2ded965e55e3

func NewRuntime_memStats_Params(s *capnp.Segment) (Runtime_memStats_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Runtime_memStats_Params{st}, err
}

func NewRootRuntime_memStats_Params(s *capnp.Segment) (Runtime_memStats_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Runtime_memStats_Params{st}, err
}

func ReadRootRuntime_memStats_Params(msg *capnp.Message) (Runtime_memStats_Params, error) {
	root, err := msg.RootPtr()
	return Runtime_memStats_Params{root.Struct()}, err
}

func (s Runtime_memStats_Params) String() string {
	str, _ := text.Marshal(0xfa7d2ded965e55e3, s.Struct)
	return str
}

// Runtime_memStats_Params_List is a list of Runtime_memStats_Params.
type Runtime_memStats_Params_List struct{ capnp.List }

// NewRuntime_memStats_Params creates a new list of Runtime_memStats_Params.
func NewRuntime_memStats_Params_List(s *capnp.Segment, sz int32) (Runtime_memStats_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Runtime_memStats_Params_List{l}, err
}

func (s Runtime_memStats_Params_List) At(i int) Runtime_memStats_Params {
	return Runtime_memStats_Params{s.List.Struct(i)}
}

func (s Runtime_memStats_Params_List) Set(i int, v Runtime_memStats_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Runtime_memStats_Params_List) String() string {
	str, _ := text.MarshalList(0xfa7d2ded965e55e3, s.List)
	return str
}

// Runtime_memStats_Params_Promise is a wrapper for a Runtime_memStats_Params promised by a client call.
type Runtime_memStats_Params_Promise struct{ *capnp.Pipeline }

func (p Runtime_memStats_Params_Promise) Struct() (Runtime_memStats_Params, error) {
	s, err := p.Pipeline.Struct()
	return Runtime_memStats_Params{s}, err
}

type Runtime_memStats_Results struct{ capnp.Struct }

// Runtime_memStats_Results_TypeID is the unique identifier for the type Runtime_memStats_Results.
const Runtime_memStats_Results_TypeID = 0xc8c60b05d115f411

func NewRuntime_memStats_Results(s *capnp.Segment) (Runtime_memStats_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Runtime_memStats_Results{st}, err
}

func NewRootRuntime_memStats_Results(s *capnp.Segment) (Runtime_memStats_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Runtime_memStats_Results{st}, err
}

func ReadRootRuntime_memStats_Results(msg *capnp.Message) (Runtime_memStats_Results, error) {
	root, err := msg.RootPtr()
	return Runtime_memStats_Results{root.Struct()}, err
}

func (s Runtime_memStats_Results) String() string {
	str, _ := text.Marshal(0xc8c60b05d115f411, s.Struct)
	return str
}

func (s Runtime_memStats_Results) Stats() (MemStats, error) {
	p, err := s.Struct.Ptr(0)
	return MemStats{Struct: p.Struct()}, err
}

func (s Runtime_memStats_Results) HasStats() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Runtime_memStats_Results) SetStats(v MemStats) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewStats sets the stats field to a newly
// allocated MemStats struct, preferring placement in s's segment.
func (s Runtime_memStats_Results) NewStats() (MemStats, error) {
	ss, err := NewMemStats(s.Struct.Segment())
	if err != nil {
		return MemStats{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Runtime_memStats_Results_List is a list of Runtime_memStats_Results.
type Runtime_memStats_Results_List struct{ capnp.List }

// NewRuntime_memStats_Results creates a new list of Runtime_memStats_Results.
func NewRuntime_memStats_Results_List(s *capnp.Segment, sz int32) (Runtime_memStats_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Runtime_memStats_Results_List{l}, err
}

func (s Runtime_memStats_Results_List) At(i int) Runtime_memStats_Results {
	return Runtime_memStats_Results{s.List.Struct(i)}
}

func (s Runtime_memStats_Results_List) Set(i int, v Runtime_memStats_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Runtime_memStats_Results_List) String() string {
	str, _ := text.MarshalList(0xc8c60b05d115f411, s.List)
	return str
}

// Runtime_memStats_Results_Promise is a wrapper for a Runtime_memStats_Results promised by a client call.
type Runtime_memStats_Results_Promise struct{ *capnp.Pipeline }

func (p Runtime_memStats_Results_Promise) Struct() (Runtime_memStats_Results, error) {
	s, err := p.Pipeline.Struct()
	return Runtime_memStats_Results{s}, err
}

func (p Runtime_memStats_Results_Promise) Stats() MemStats_Promise {
	return MemStats_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type Runtime_stackDump_Params struct{ capnp.Struct }

// Runtime_stackDump_Params_TypeID is the unique identifier for the type Runtime_stackDump_Params.
const Runtime_stackDump_Params_TypeID = 0xb9c996f05a75ae42

func NewRuntime_stackDump_Params(s *capnp.Segment) (Runtime_stackDump_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Runtime_stackDump_Params{st}, err
}

func NewRootRuntime_stackDump_Params(s *capnp.Segment) (Runtime_stackDump_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Runtime_stackDump_Params{st}, err
}

func ReadRootRuntime_stackDump_Params(msg *capnp.Message) (Runtime_stackDump_Params, error) {
	root, err := msg.RootPtr()
	return Runtime_stackDump_Params{root.Struct()}, err
}

func (s Runtime_stackDump_Params) String() string {
	str, _ := text.Marshal(0xb9c996f05a75ae42, s.Struct)
	return str
}

// Runtime_stackDump_Params_List is a list of Runtime_stackDump_Params.
type Runtime_stackDump_Params_List struct{ capnp.List }

// NewRuntime_stackDump_Params creates a new list of Runtime_stackDump_Params.
func NewRuntime_stackDump_Params_List(s *capnp.Segment, sz int32) (Runtime_stackDump_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Runtime_stackDump_Params_List{l}, err
}

func (s Runtime_stackDump_Params_List) At(i int) Runtime_stackDump_Params {
	return Runtime_stackDump_Params{s.List.Struct(i)}
}

func (s Runtime_stackDump_Params_List) Set(i int, v Runtime_stackDump_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Runtime_stackDump_Params_List) String() string {
	str, _ := text.MarshalList(0xb9c996f05a75ae42, s.List)
	return str
}

// Runtime_stackDump_Params_Promise is a wrapper for a Runtime_stackDump_Params promised by a client call.
type Runtime_stackDump_Params_Promise struct{ *capnp.Pipeline }

func (p Runtime_stackDump_Params_Promise) Struct() (Runtime_stackDump_Params, error) {
	s, err := p.Pipeline.Struct()
	return Runtime_stackDump_Params{s}, err
}

type Runtime_stackDump_Results struct{ capnp.Struct }

// Runtime_stackDump_Results_TypeID is the unique identifier for the type Runtime_stackDump_Results.
const Runtime_stackDump_Results_TypeID = 0xa8fc15721302db2a

func NewRuntime_stackDump_Results(s *capnp.Segment) (Runtime_stackDump_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Runtime_stackDump_Results{st}, err
}

func NewRootRuntime_stackDump_Results(s *capnp.Segment) (Runtime_stackDump_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Runtime_stackDump_Results{st}, err
}

func ReadRootRuntime_stackDump_Results(msg *capnp.Message) (Runtime_stackDump_Results, error) {
	root, err := msg.RootPtr()
	return Runtime_stackDump_Results{root.Struct()}, err
}

func (s Runtime_stackDump_Results) String() string {
	str, _ := text.Marshal(0xa8fc15721302db2a, s.Struct)
	return str
}

func (s Runtime_stackDump_Results) StackDump() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return []byte(p.Data()), err
}

func (s Runtime_stackDump_Results) HasStackDump() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Runtime_stackDump_Results) SetStackDump(v []byte) error {
	return s.Struct.SetData(0, v)
}

// Runtime_stackDump_Results_List is a list of Runtime_stackDump_Results.
type Runtime_stackDump_Results_List struct{ capnp.List }

// NewRuntime_stackDump_Results creates a new list of Runtime_stackDump_Results.
func NewRuntime_stackDump_Results_List(s *capnp.Segment, sz int32) (Runtime_stackDump_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Runtime_stackDump_Results_List{l}, err
}

func (s Runtime_stackDump_Results_List) At(i int) Runtime_stackDump_Results {
	return Runtime_stackDump_Results{s.List.Struct(i)}
}

func (s Runtime_stackDump_Results_List) Set(i int, v Runtime_stackDump_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Runtime_stackDump_Results_List) String() string {
	str, _ := text.MarshalList(0xa8fc15721302db2a, s.List)
	return str
}

// Runtime_stackDump_Results_Promise is a wrapper for a Runtime_stackDump_Results promised by a client call.
type Runtime_stackDump_Results_Promise struct{ *capnp.Pipeline }

func (p Runtime_stackDump_Results_Promise) Struct() (Runtime_stackDump_Results, error) {
	s, err := p.Pipeline.Struct()
	return Runtime_stackDump_Results{s}, err
}

type MemStats struct{ capnp.Struct }

// MemStats_TypeID is the unique identifier for the type MemStats.
const MemStats_TypeID = 0xcdf011e3e3860026

func NewMemStats(s *capnp.Segment) (MemStats, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 208, PointerCount: 3})
	return MemStats{st}, err
}

func NewRootMemStats(s *capnp.Segment) (MemStats, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 208, PointerCount: 3})
	return MemStats{st}, err
}

func ReadRootMemStats(msg *capnp.Message) (MemStats, error) {
	root, err := msg.RootPtr()
	return MemStats{root.Struct()}, err
}

func (s MemStats) String() string {
	str, _ := text.Marshal(0xcdf011e3e3860026, s.Struct)
	return str
}

func (s MemStats) Alloc() uint64 {
	return s.Struct.Uint64(0)
}

func (s MemStats) SetAlloc(v uint64) {
	s.Struct.SetUint64(0, v)
}

func (s MemStats) TotalAlloc() uint64 {
	return s.Struct.Uint64(8)
}

func (s MemStats) SetTotalAlloc(v uint64) {
	s.Struct.SetUint64(8, v)
}

func (s MemStats) Sys() uint64 {
	return s.Struct.Uint64(16)
}

func (s MemStats) SetSys(v uint64) {
	s.Struct.SetUint64(16, v)
}

func (s MemStats) Lookups() uint64 {
	return s.Struct.Uint64(24)
}

func (s MemStats) SetLookups(v uint64) {
	s.Struct.SetUint64(24, v)
}

func (s MemStats) Mallocs() uint64 {
	return s.Struct.Uint64(32)
}

func (s MemStats) SetMallocs(v uint64) {
	s.Struct.SetUint64(32, v)
}

func (s MemStats) Frees() uint64 {
	return s.Struct.Uint64(40)
}

func (s MemStats) SetFrees(v uint64) {
	s.Struct.SetUint64(40, v)
}

func (s MemStats) HeapAlloc() uint64 {
	return s.Struct.Uint64(48)
}

func (s MemStats) SetHeapAlloc(v uint64) {
	s.Struct.SetUint64(48, v)
}

func (s MemStats) HeapSys() uint64 {
	return s.Struct.Uint64(56)
}

func (s MemStats) SetHeapSys(v uint64) {
	s.Struct.SetUint64(56, v)
}

func (s MemStats) HeapIdle() uint64 {
	return s.Struct.Uint64(64)
}

func (s MemStats) SetHeapIdle(v uint64) {
	s.Struct.SetUint64(64, v)
}

func (s MemStats) HeapInUse() uint64 {
	return s.Struct.Uint64(72)
}

func (s MemStats) SetHeapInUse(v uint64) {
	s.Struct.SetUint64(72, v)
}

func (s MemStats) HeapReleased() uint64 {
	return s.Struct.Uint64(80)
}

func (s MemStats) SetHeapReleased(v uint64) {
	s.Struct.SetUint64(80, v)
}

func (s MemStats) HeapObjects() uint64 {
	return s.Struct.Uint64(88)
}

func (s MemStats) SetHeapObjects(v uint64) {
	s.Struct.SetUint64(88, v)
}

func (s MemStats) StackInUse() uint64 {
	return s.Struct.Uint64(96)
}

func (s MemStats) SetStackInUse(v uint64) {
	s.Struct.SetUint64(96, v)
}

func (s MemStats) StackSys() uint64 {
	return s.Struct.Uint64(104)
}

func (s MemStats) SetStackSys(v uint64) {
	s.Struct.SetUint64(104, v)
}

func (s MemStats) MSpanInUse() uint64 {
	return s.Struct.Uint64(112)
}

func (s MemStats) SetMSpanInUse(v uint64) {
	s.Struct.SetUint64(112, v)
}

func (s MemStats) MSpanSys() uint64 {
	return s.Struct.Uint64(120)
}

func (s MemStats) SetMSpanSys(v uint64) {
	s.Struct.SetUint64(120, v)
}

func (s MemStats) MCacheInUse() uint64 {
	return s.Struct.Uint64(128)
}

func (s MemStats) SetMCacheInUse(v uint64) {
	s.Struct.SetUint64(128, v)
}

func (s MemStats) MCacheSys() uint64 {
	return s.Struct.Uint64(136)
}

func (s MemStats) SetMCacheSys(v uint64) {
	s.Struct.SetUint64(136, v)
}

func (s MemStats) BuckHashSys() uint64 {
	return s.Struct.Uint64(144)
}

func (s MemStats) SetBuckHashSys(v uint64) {
	s.Struct.SetUint64(144, v)
}

func (s MemStats) GCSys() uint64 {
	return s.Struct.Uint64(152)
}

func (s MemStats) SetGCSys(v uint64) {
	s.Struct.SetUint64(152, v)
}

func (s MemStats) OtherSys() uint64 {
	return s.Struct.Uint64(160)
}

func (s MemStats) SetOtherSys(v uint64) {
	s.Struct.SetUint64(160, v)
}

func (s MemStats) NextGC() uint64 {
	return s.Struct.Uint64(168)
}

func (s MemStats) SetNextGC(v uint64) {
	s.Struct.SetUint64(168, v)
}

func (s MemStats) LastGC() uint64 {
	return s.Struct.Uint64(176)
}

func (s MemStats) SetLastGC(v uint64) {
	s.Struct.SetUint64(176, v)
}

func (s MemStats) PauseTotalNs() uint64 {
	return s.Struct.Uint64(184)
}

func (s MemStats) SetPauseTotalNs(v uint64) {
	s.Struct.SetUint64(184, v)
}

func (s MemStats) PauseNs() (capnp.UInt64List, error) {
	p, err := s.Struct.Ptr(0)
	return capnp.UInt64List{List: p.List()}, err
}

func (s MemStats) HasPauseNs() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s MemStats) SetPauseNs(v capnp.UInt64List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewPauseNs sets the pauseNs field to a newly
// allocated capnp.UInt64List, preferring placement in s's segment.
func (s MemStats) NewPauseNs(n int32) (capnp.UInt64List, error) {
	l, err := capnp.NewUInt64List(s.Struct.Segment(), n)
	if err != nil {
		return capnp.UInt64List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

func (s MemStats) PauseEnd() (capnp.UInt64List, error) {
	p, err := s.Struct.Ptr(1)
	return capnp.UInt64List{List: p.List()}, err
}

func (s MemStats) HasPauseEnd() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s MemStats) SetPauseEnd(v capnp.UInt64List) error {
	return s.Struct.SetPtr(1, v.List.ToPtr())
}

// NewPauseEnd sets the pauseEnd field to a newly
// allocated capnp.UInt64List, preferring placement in s's segment.
func (s MemStats) NewPauseEnd(n int32) (capnp.UInt64List, error) {
	l, err := capnp.NewUInt64List(s.Struct.Segment(), n)
	if err != nil {
		return capnp.UInt64List{}, err
	}
	err = s.Struct.SetPtr(1, l.List.ToPtr())
	return l, err
}

func (s MemStats) NumGC() uint32 {
	return s.Struct.Uint32(192)
}

func (s MemStats) SetNumGC(v uint32) {
	s.Struct.SetUint32(192, v)
}

func (s MemStats) NumForcedGC() uint32 {
	return s.Struct.Uint32(196)
}

func (s MemStats) SetNumForcedGC(v uint32) {
	s.Struct.SetUint32(196, v)
}

func (s MemStats) GCCPUFraction() float64 {
	return math.Float64frombits(s.Struct.Uint64(200))
}

func (s MemStats) SetGCCPUFraction(v float64) {
	s.Struct.SetUint64(200, math.Float64bits(v))
}

func (s MemStats) BySize() (MemStats_BySize_List, error) {
	p, err := s.Struct.Ptr(2)
	return MemStats_BySize_List{List: p.List()}, err
}

func (s MemStats) HasBySize() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s MemStats) SetBySize(v MemStats_BySize_List) error {
	return s.Struct.SetPtr(2, v.List.ToPtr())
}

// NewBySize sets the bySize field to a newly
// allocated MemStats_BySize_List, preferring placement in s's segment.
func (s MemStats) NewBySize(n int32) (MemStats_BySize_List, error) {
	l, err := NewMemStats_BySize_List(s.Struct.Segment(), n)
	if err != nil {
		return MemStats_BySize_List{}, err
	}
	err = s.Struct.SetPtr(2, l.List.ToPtr())
	return l, err
}

// MemStats_List is a list of MemStats.
type MemStats_List struct{ capnp.List }

// NewMemStats creates a new list of MemStats.
func NewMemStats_List(s *capnp.Segment, sz int32) (MemStats_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 208, PointerCount: 3}, sz)
	return MemStats_List{l}, err
}

func (s MemStats_List) At(i int) MemStats { return MemStats{s.List.Struct(i)} }

func (s MemStats_List) Set(i int, v MemStats) error { return s.List.SetStruct(i, v.Struct) }

func (s MemStats_List) String() string {
	str, _ := text.MarshalList(0xcdf011e3e3860026, s.List)
	return str
}

// MemStats_Promise is a wrapper for a MemStats promised by a client call.
type MemStats_Promise struct{ *capnp.Pipeline }

func (p MemStats_Promise) Struct() (MemStats, error) {
	s, err := p.Pipeline.Struct()
	return MemStats{s}, err
}

type MemStats_BySize struct{ capnp.Struct }

// MemStats_BySize_TypeID is the unique identifier for the type MemStats_BySize.
const MemStats_BySize_TypeID = 0xc3e472677f9be8ad

func NewMemStats_BySize(s *capnp.Segment) (MemStats_BySize, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 24, PointerCount: 0})
	return MemStats_BySize{st}, err
}

func NewRootMemStats_BySize(s *capnp.Segment) (MemStats_BySize, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 24, PointerCount: 0})
	return MemStats_BySize{st}, err
}

func ReadRootMemStats_BySize(msg *capnp.Message) (MemStats_BySize, error) {
	root, err := msg.RootPtr()
	return MemStats_BySize{root.Struct()}, err
}

func (s MemStats_BySize) String() string {
	str, _ := text.Marshal(0xc3e472677f9be8ad, s.Struct)
	return str
}

func (s MemStats_BySize) Size() uint32 {
	return s.Struct.Uint32(0)
}

func (s MemStats_BySize) SetSize(v uint32) {
	s.Struct.SetUint32(0, v)
}

func (s MemStats_BySize) Mallocs() uint64 {
	return s.Struct.Uint64(8)
}

func (s MemStats_BySize) SetMallocs(v uint64) {
	s.Struct.SetUint64(8, v)
}

func (s MemStats_BySize) Frees() uint64 {
	return s.Struct.Uint64(16)
}

func (s MemStats_BySize) SetFrees(v uint64) {
	s.Struct.SetUint64(16, v)
}

// MemStats_BySize_List is a list of MemStats_BySize.
type MemStats_BySize_List struct{ capnp.List }

// NewMemStats_BySize creates a new list of MemStats_BySize.
func NewMemStats_BySize_List(s *capnp.Segment, sz int32) (MemStats_BySize_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 24, PointerCount: 0}, sz)
	return MemStats_BySize_List{l}, err
}

func (s MemStats_BySize_List) At(i int) MemStats_BySize { return MemStats_BySize{s.List.Struct(i)} }

func (s MemStats_BySize_List) Set(i int, v MemStats_BySize) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s MemStats_BySize_List) String() string {
	str, _ := text.MarshalList(0xc3e472677f9be8ad, s.List)
	return str
}

// MemStats_BySize_Promise is a wrapper for a MemStats_BySize promised by a client call.
type MemStats_BySize_Promise struct{ *capnp.Pipeline }

func (p MemStats_BySize_Promise) Struct() (MemStats_BySize, error) {
	s, err := p.Pipeline.Struct()
	return MemStats_BySize{s}, err
}

const schema_db8274f9144abc7e = "x\xda\x9cY}\x94\x14\xd5\x95\xbf\xb7\xaa\xba{\xa6\xa7" +
	"{z\x8a\xaa\xc1\x19\x06\xd3\x0d\x0b\xf2\xb1@\x98!\x9e" +
	"\xc8l<\xf3\xe5\xc8\x0c\x07t\xba\x1b\xb2\x01\x85\xb35" +
	"\xdd\x05\xd3\xd0]\xddTU#cP\xd0\x85\xdd\xb8+" +
	"\xab\xa0\xc2Jb\x8c9\xa2\x98#\xae\xc7\x8d\xbb\xcb\xae" +
	"$\x06?\xd0(\xd9\x83\xabQ\x13=\xe2*\xbb\xc6h" +
	"V\x8dIV\x84\xd4\x9e\xfb\xba_w\xf5\x873\xba\x7f" +
	"\xcd\xf4}\xf7\xdd\x8fw\x7f\xef\xd5\xfdX\xbc\xbe\xb1W" +
	"\xe8\xf48*@\xf4c\x8f\xf7\xfc\x96??\xd4\xf1\xe8" +
	"\xdb\xbb\xe4f\x04\x90|\x00\x8a\xee\xff\x08$\xe7\xf4\xb7" +
	"\x9e\xde\xff\xca\xcf/\xda\x0drkqa\xc9\xb0\x7f>" +
	"\x82\xe4\xb4]\xbf\xfb\xea\x8d\x1b\xde\xfcVyE\xe9\xf4" +
	"\x9f\x05\xc9y\xf9=\xefI\xf5\x1b\x1f\xde\x02eY\xad" +
	"l\xe1\xbd\xe0\xb1\xa7<\xbb\xfe\xf7\x16\x886#\x17\xf6" +
	"I\xa3\x80\x80\xca\xf9\xc6\x1e@\xe7\xf1\xa9{\xf6\\\xf3" +
	"\xdc\x1b{A\x9e\xc2w\xce`;\xef\xce}\xba\xf2\xf6" +
	"'w\xef\x83\xe8\x94\xd2N\x8f\x7f\x1a\xed\x0c\xfai\xa7" +
	"\xf5O}{\xd2\xbf\xbdw\x9f[\xf4B?\x13\xdd\xc9" +
	"\x18f\x9a\xf7\x1f>}\xa0\xeb67\xc3\xea\x02\xc3\x1a" +
	"\xc6p\xdfe\xbd\x97~\xfa\xe4\xfe;\\V\x8f\xfb_" +
	"\x00\xc9\xb9=43\x7fL_\xb5\xdfe\xd4:\xff\x7f" +
	"\x82\xe4\xfc\xfa\xa5\xff\x12vw?t\x10d?:\xd7" +
	"?\xb6\\\xfd\xc4\xbe\xf1\x97\xe0\x11\x88\xa3\xcf\xffSe" +
	"\xa5\x9f\xfe\x1b\xf6_\x03\xe8\xfc\xa9\xb9b\xff\xb4\x15\x7f" +
	"\xf6}\x88\xb6\x96\xd4\xcfn\xea\"\xf5\x0b\x9bz\x00\xdf" +
	"\x98\xb2\"\xf2\xb4_:T\xb6NY\xd9\xf4.\xa0\x12" +
	"\xa5U\xe7\x95\xd7V\xbcv\xef\x87\xd9C.\xe3\xb64" +
	"\x1d\x07\xc9\xd9}\xe0\xc1\xf9\xd3\x7fr\xf4\xbe\xb2qK" +
	"\xa2MS(<\xdd\xbfY\xd7\xee\xdb\xba\xf9~\xb7\xc6" +
	"\xa5MkI\xe3 \x93i?\xb7\xfe\xefBO\xbeu" +
	"?\xc8~\xb1l>\xa0\x92j\xfa\x81\xb2\xa5\x89\xf83" +
	"M\xcbP\x19\x0c\xf8\x00\x9c\xf9\xbf\x14\x14\xb3\xf5\xdc\xe1" +
	"\x82\"\x0f\xb2\x03\x0e\xcc$q\x17\x07z\x00\xff\x90\xca" +
	"9C_\x9a\xf2@\xd9\xc05\x01\xc2\x8f\xe7\xc7'\x8f" +
	"\x9f\x0b\xc7\x1f,X^\xd8wia\xdf \xeds\xf6" +
	"g\xfa\xd2w~:t\xc4}\xee\x81wAr\x9a\xde" +
	"\xd9\xba\xee\xa0\x9e<\xe2rm]@ \xd7~|\xf1" +
	"s\x7f|b\xf6\xd8C\xaeX*}\x81\xb3%\x91_" +
	"\xb9M}oz\xdfU\x8f\xd4x\xa6\x07\xf6)\x19r" +
	"GI\x05N(g\x98c\xeb\x16~y\xed\x81\x0e\xf1" +
	"Q\x97\x81\xcaI&\xec\x14\x136;\xf0\xf0\x8d\x0f_" +
	"\xb4\xeah\xd9\xbe%\xbf+\x98\xb1\xfd\xc9\x97\xbfv\xaf" +
	"\xb9\xfeh\xe1\x02\x14\\{5\xb0\x89\\;\xc3\xb6\xf6" +
	"?\x94_\xfb\xc1\xfeg\x8f\xba<\xf0\x04\xa7\xd1\xd6\xf1" +
	"\xc7\xae]\xde\xf9\xb3\xfb~\xe4r\xfa\xfd\x00\x01\xfd\xbb" +
	"\xde7\x8e\x9e\xfc\xea\x97\x8e\xbb\xa3v*\xc0`\xfa\x12" +
	"\x93\xf9\xa3\xbf~\xb3\xe5\xf6M;\x9fp\xdf\x84O\x02" +
	"~b\xc0 1\x1cy\xe7\xdb;6\x9ao?\x01Q" +
	"\x05\xc5\xf3\x17\xfd\xd5[o\xc9\x1f\x9c,\\\xa5\xe0\x0b" +
	"\xca\xc2 \xfd7/\xf8\x0f\x80\xce\xc3W\xa5\xaf\xff\xb7" +
	"\x07\xcf\x9dp]\xed\x9f\x04cd\x9e\xfcq\xeb)O" +
	"\xd3\xd3\xcf\xb8\x83}$\xc8\xae\xdb\xa3L\x89\xf4\xab-" +
	"\xb7\x98o\xbe\xfe\xbc\xcb\x0a\xe5\xa5 \xe1\xf5UZ\xe7" +
	"j\xa3~\x9c\xe6\xba\x19\"\xb1\x9d\x0f\x1eT<\xcd\x17" +
	"\x00,\x096\x1f\xf0\x02:\xbf9x\xed\x81\xc3\xf3w" +
	"\xfe\x0cd\xbfP\x11\xad\xbe\xb6\x83\xcap\x1b\xed\x19l" +
	"\xdb\x08\xe8<\xfd\xcdUg\xe7\xce[\xf3\x82;\xec\xa9" +
	"\xb6\x9f\x02*\x9962\xaa\xe1\xeb'\xa4\x85r\xf4E" +
	"\xd7\xa1\xeei\xfb\x05H\xce\xf0\xd4/\x7f\xf7\x99\x1b," +
	"\xd7\xc2\x92-m,\x0e\xda\xa1\x7f~d_\xa7\xf75" +
	"\xd7\x11\xaci\x1b\xa5\x95\x86[\xfe\xd8;\xe3\xf4\xf7_" +
	"\xaf\xc1\xd0`\xdb>ee\x1b{\x07\xdb\x96\xa12\xa3" +
	"\x9d@4}\xc1\x9a\xb1\xab^\xed?\xe3\x8eJc;" +
	"\x0b[\xb0\x9dl[w\xee\xab\xb7\xb5t\xdd{\xa6\xe2" +
	"\xfa\xb4\x17\xae\x0fc8~\xc7\x95/o\x1f\x1f\xfb\xb5" +
	"\xfb\x9e\xacngq]\xc7\x18\x86$u\xdf}\x7f\xd9" +
	"\xfa\xbe\x0bL{\xdb\x99\x13\xc2s\x8f\\\xf8\xe07\xb7" +
	"\xbf\xefF\xf0x\xfbG\x80\xcaul\xe7\x9d\xf2?\xee" +
	":\xfd\xdf\xb1\x0fj\\\xb9\xab\xddT\xee!\xfb\x97\xdc" +
	"\xd5~BP\xb6t\x90+3?\x9e\xf1\xe2;o\x7f" +
	"\xfb\x03\xb7!k:\x98!Z\x07\x89{\xea\xa3\xa1[" +
	";\xfe$\xff\xa1\x1b\xa27t,'\x86=\x8c\xe1\xc4" +
	"o?\xf9\x9f?\x1c\x97~\xef:\xd4#\x1d\xfddi" +
	"p<\xf3\xb7-\xff\xdew\xd6m\xe9\x1d\x1dd\xe9\x9d" +
	"l\xe7\xde\x8f\xee>\xd7\xfc@\xfa\xac\xcb\xc7\xa3\x1d]" +
	"\xb4\xf3\xad\xd5\xeb\xf7\xbf\xbf\xf0:\xf7\xca=\x1d\xec\x9d" +
	"\xfb\x8fx\xeb\xf6\x8bN\xfd\xfe\x9c\xfb\xe8o\xea\xe8&" +
	"s\xf6v\xf4\xc0%\x8e\x96\xcb-Jh9C\xc8u" +
	"\xf7\xe5r\x8bR\x86ekFB\x9f5\x12\xd6L-" +
	"c\x95\xd6\xc5\\wld \xae\x9b[S\x09}Q" +
	"F\xdb6\x905\x0ck\xd6\x88\x16\xaa`\x13*\xd8R" +
	"\xc9Y=#Z5\x03\xe9\xb1l\xcd\xb4\xf5\xe4\x95F" +
	"\x0d\x83X\xcd\x10\xd3\xad|\xda\xb6 *\x89\x12\x80\x84" +
	"\x00r0\x06\x10\x0d\x88\x18m\x13\xd0\xe1\x9c\x80\x06z" +
	"@@\x0f\xa0[\x1b\xb7EK\xa7\xb6\xea\xf5\xb4q\x86" +
	"tv\xe3\x0a}\xab\x9e.(\x14m\xcb\xad\xb0\x0b " +
	"\xda bT\x150\x9c&.\x0c\x95\xaf& \x86\\" +
	"J\x8b\x1e\x98zZ\xd7,}89\xa9\x07\x9c\x130" +
	"\x89\x8d `c\x1da\xb9D\xd1\xceY\x05\x0f*\x84" +
	"M+['\xa6je\x14\xcf|s*\x9d.\xecF" +
	"\xab\xde\x09\xa5\x92\xb4\xea\xab\x8a\xd6\x15\xba}M\xd6\xdc" +
	"\xdc\x97L\x9a\xbae\x01\x8c F\x1bJ\xaa\xe7\xf5\xcb" +
	"\xf3\xc2\xd1\xabE\x8c\x8e\x09(#\xaa\x842Y\xef\x97" +
	"\xf5p\xf4\xb0\x88\xd1\x1f\x0a\xb8\xc3(H\x88J(8" +
	"\xebo\xbb;z\xec\xe7\x7f\xf3\x14D%\x01\xfbf!" +
	"\x06\x00:\xf1Ft\x0c-\xa3G\xb2\x1b\"\x1e{L" +
	"\x8f\x14wD\xe6n\xc8\x9a\x11}\x9b\x96\xc9\xa5\xf5\x05" +
	"\x919v\"7gAdN>\x99\x9b3\x0f\x000" +
	"\x00\x02\x06\x00wh\x05\xdb\xea(\xf8JQALp" +
	",\xdbL\x19\x1b#\x1b\x1a\xb2f\x86\x14\x157U\xeb" +
	"\xe8\\\xda\xb5h\xf1\xa2\xaeE\x9d\xdd]\x17\x93\xb29" +
	"Wu-^\xdc\xd9\x9d\x1c\xbd\xa4\xbb\xbbs]\xf7%" +
	"\x8b\xe7\xe0\xbc\xb2\xea\xc9\xaeGL\x0f\xb3\xd0\x7f\x16\x94" +
	"\x12\xd9\xbcac\x03\x08\xd8P\x1b/\xab\x14pv\xc7" +
	"\xbe@\xc0\xbd\xc5\xcb\x9c\xe4`\xe1\x0bu\xd0^\x0d\x08" +
	"\xa9\xc2\x93t\xca\xb2uC7\xfb\xd8\xed\xa9w3L" +
	"\x17\x9097\x84\x19?\"\x08\x88.\xbb\x90\xcb\x0e\x91" +
	"pB\x92*z\x00J\xc92\xf2\x0f\xbc\xbcw\x1a\x08" +
	"\xf2n\x1f\x96\xbf\xc3\xc8S6y\xdc\x04A\xde\xe2C" +
	"\xa1\xf4\x81B\x9el\xc8\xfa\x8d \xc8\xeb|(\x96\xde" +
	"Y\xe4/\xb2\x1c\x1d\x05A\x1e\xf6a9mG\x9ex" +
	"\xca\x97.\x07A\xbe\xd8'\xa6\x92\xbd5n\xb8(\xc8" +
	"\xafA/:Z\xc2Nm\xd5\x07\xb2\xe03\x0c\xab\x17" +
	"\x1d\x1et\x00\xe8\xc5\x11\xac\xc4F\xde\xb0S\x19\x9d^" +
	"\xb5\xc4\xe6\xcb\xf2\x99\x1c;J_\x152\xaa^5\xc6" +
	"\x09\x98\xc3 \x08\x18\xac\xc5G9\x84\xe1\xbaOh\xf9" +
	"\xcd\x18NZu\x15\xae-*\x9cK\x0a\x8b\xac &" +
	"-l\x06\x1c\x11\x91\xe1\xaa\xb9V\xb1Y\xf0\xa6\xe6\xf1" +
	"\xf7\x96\x1d5\xf2\x99\x81\x91\xd5\xb5\xf0\xab\xb0;\xd6\xa3" +
	"Ox;&{h\x91\xc3\x19\x19\x96\x02\x0cK\xbc " +
	"A\x9e\x85\xc9Q\xc2\xd2 a\x89\xd7\x03\xc8+&y" +
	")\xc5\xbd\x93\xb0\xc4\xab+\xe4\xd9\x8a<\xbb\x0b\x04\xb9" +
	"\x9dc\xa2h4\x8bnX+\xe0\xc2\x1d\xe5\xea\x0fh" +
	"=\xe7\xd6\xba\x02\xcc\x19A\x1cN\xd6<'\x0d\x15/" +
	"\x00\x85\xaf\xe6$\xeb]\xd2\x028)\xd4\xa1j\xd5\xfd" +
	"\xe5s\xe5\xef%\xb6\x94\x8b4@l\x81I K&" +
	"\x88\xb5\x9f\xf2\xf2w\xae\xce\xc7\xb52\x19\x98\xf4S\xce" +
	"1X\xffCX\x05..\x0d\xbe\xf0\xeb\xbaR\xcf\xc4" +
	"m\xcd\xb6\x16\xf5\x8f\xc7S\xd7r\xf4p\x19\x83\xf3\x01" +
	"\xa2\xbd\"FW\xb8>i\xc3t\x80\x97\x89\x18\x1d\x11" +
	"P\x16\x04\x15\x05\x00y%i\x1b\x121\xbaJ\xc0\x90" +
	"\x95\xbaV\xe7\xcavd\xb4t:\x9b\xb0\xb8\x17\xe1\x0d" +
	"\xa6\xae[5>M\xf4\xd6V\xbf\xcb.\xff3E\xf3" +
	"'\xcdT,\xe2\xc2\x16^pT\x05\xb9\xf2\xd3_\x0f" +
	"4\x9f76\xc8\x8f\x94\xd9\x82\xae2K\xc6\xee\x1ev" +
	"\xc8zt\x1b\x97\xab,\x15\xbb\x94\xa5b8\x9e\x16E" +
	"\x8co\x13\xcb\xa7\xac\xe4\xc5\xb5\xca\xb8\x18\x8e\xff\x90V" +
	"\x1e\x17\xcbG\xad\x1c\x13g*\xc7\xc4p\xfccQ\xc4" +
	"\x98$\xa0,\x8a*\x8aT1\x89\xfd\xcay1\x1c\xff" +
	"\x9a$b|\x88V$IE\x89\xea\"\xa9_\x19\x94" +
	"\xc2\xf1\x9d\xb4r3\xadx<*z\x00\x94\x9b\xa4." +
	"\xe5&)\x1c\x7f\x9cV\x9e\xa7\x15\xafWE/\x80\xf2" +
	"\xac\x14SNJ\xe1\x98G\xc4x\xc0#\xa0\xec\xf3\xa9" +
	",\x11o\xf4\xf4+\x8d\x9ep\xbc\x97VV\xd0JC" +
	"\x83\x8a\x0d\x00\xca\xb0g\xb9\xb2\xd2\x13\x8e\xef\xa4\x95\x9b" +
	"i\xa5\xb1Q\xc5FR\xe3\x89){<\xe1\xf8c\xb4" +
	"\xf2\x0c\xad\xf8\xfd*\xfa\x01\x94\xa7<\x9b\x94g=\xe1" +
	"\xb8\xe4\x151\xde\xe2\x15PnjR\xb1\x09@\x09z" +
	"G\x15\xd9\x1b\x8e\x0f\xd1\xca*Z\x09\x04TJb\x94" +
	"\xa8w-@|\x84\xe8W\x13=\x18T1\x08\xa0\xac" +
	"\xf1.\x07\x88\x7f\x83\xe8I\xa277\xab\xd8\x0c\xa0h" +
	"\x8c\xff/\x88\x9e&z(\xa4b\x88\x8aB\xc6?F" +
	"t\x9b\xe8--*\xb6\x00([\xbc\xa3\x00\xf1\x1c\xd1" +
	"\xb7\x13]\x96U\x94\xa9X\xf2\xc6\x00\xe2\xdb\x88\xbe\x8b" +
	"\xe8S\xa6\xa88\x05@\xb9\x81\xf1\xef$\xfa\xcdDW" +
	"\x14\x15\x15\xf2\xda\xdb\x05\x10\xdfE\xf4[\x89\xae\xaa*" +
	"\xaaTm2\xbd7\x13\xfd\xef\x89\xde\xda\xaab+\x95" +
	"8\xden\x80\xf8\xadD\xff\x0e\xd1\xa7NUq*\x80" +
	"r'\xa3\xdfN\xf4\xef\x11\xfd\x82\x0bT\xbc\x00@\xb9" +
	"\xcb\xbb\x09 \xfe\x1d\xa2\x1f\xf6\x0a\x88m*\xb6\x01(" +
	"\x87\xbc\xfd\x00\xf1\xef\x11\xf91boG\x15\xdb\x01\x94" +
	"\xa3L\xed\xbf\x10\xfdE\xa2O[\xac\xe24\x00\xe5\x14" +
	"3\xf3y\xa2\xbfB\xf4\x8eN\x15;\xa8Pgn\xbd" +
	"H\xf4\xd3D\x9f\xde\xae\xe2t\x00\xe5u\xaf\x09\x10\x7f" +
	"\x8d\xe8\xef\x10\xfdBA\xc5\x0b\x01\x943\xcc\xcc\xd3D" +
	"?\xe7\x15\xe8\xd3\x90\xce&&\xc8u\x97\xa3\xd3G," +
	"\x91\x94%EF\xc7m\xddb\xd9(\x914[OF" +
	"\xc6t-\x17\xc9\x8en\xd2\x13\xb6\x05X\xbajv\xd6" +
	"\xd6\xd2}\xe94\x88u\xa5/(J\xff\x05:\xab\x8a" +
	"\x9c^\xa6#\x92\xc8g\xf2i\x8dR\x95\xa2\xb6\xb2*" +
	"\xca|]\xeaDk\x11\x00W\xe8\xb3\xc6\xeb%\xd4s" +
	"\x8bz\xfe\x15\x9d\xf8\xb8E\xf2m\xcf\x98\x1ea\xd6\x95" +
	"\xbd\xc9\xe8\x99\xac9\x1e\xc9\x8e\xdaZ\xca Ef6" +
	"\x13\xb1{\xc6\xf4\xc8\x95q\x97\x8e\x1d\xe9lvs>" +
	"WO\xcf\xe2\xa2\x9e)\x82\xb3\xa2\xc0\x14\xf1\x912*" +
	"\x0e\xf2\x99Q\xdd$5\xb9l\xca\xb0u3R\x14\x13" +
	"\xc9\xe9\xe6\x86\xac\x99\xd1\x93\x91\xd1q\xc6ZHTP" +
	"w\xa9,>\xcc\x13\x1f\xe1\xca\x02S\xc4[T\xe9:" +
	"C\xf6M!\xe5\xee8\x95\xceTL\xba\xdc+<\xfa" +
	"\x13\x1c\xe2\x0f\xd0\xb9\x9cX\")\xcb\xf3\xf9\xf4l0" +
	"C\xba\xee\xd6\xe1\xd02\xe1\x09p\"\xd0mBg\xa8" +
	"\xc8(1TL\x00\xbc\x10C^\xf9\xc4\x88\x1e\x9f\x10" +
	"\x0c\x8f\x14\xa4\x13 <n\xd9Lb},\x8c\x85\xab" +
	"\xb0\xc0\x1c\x19N\xa6u\xa0\xef\xf9g:\x12+\xa8\"" +
	"F\xa9\xecG\xca\x88\xa4\x92i=27o\xe4-=" +
	"9/b\xe54\xc3\xc2\x1a\xf1\xc6j\x0bP\xaf#>" +
	"R\x14?\xb3(\xde\xc8[\xa2^)\xdfX\x98\xb7t" +
	"\x12\xec3\xacj\xc11=\xadCH\xb3\xf4\xe4\x04\xb8" +
	"z\xb7 \x9bx\xbd\xc4Z\x11\x86\xdc\xd8\xb8\x95Jh" +
	"i~\\\xa6n\xe7M:.;K\xc8\x08\xd59\xac" +
	"+G7\xe9\xe0K\xd8\x93 l\xa8\xc8\xea!\xfc\xd4" +
	"\\\xa1:\xefN(aW8\xc8\x12\xc0ac5\x88" +
	"\x96^I\x8c\x8fS\xb1S\xa2e\xe29\xcd\xa8fd" +
	"\xc4j\xc6\x01-1\xa6\x0f\x1b\xe0[\xed\xe6d\xd4\xf8" +
	"8`9Q\x1a\xcd'6\x0fi\xd6\x18\xf8\xe2\xe3\xe5" +
	"dj\xe3\x80\xeb\x97\x93\xb5\xc7t\xb3RC\x8f\xa1o" +
	"\xb3\x97\x0d\x94~\xa65\xcb\xf5\xd3\xc9iyK_\x95" +
	"\xb5!\xa4\xa5\xaf(\x09\xda\xc1\xc8W\xd4\x14?\x8c<" +
	"h$I~\xe5R\xd8\xc8g\x96\x0d\x94\x12L#\x9f" +
	"\xb9<k&t\xf0%]\xd4\x8d\x03\x03#\xab/7" +
	"5\x08'\xecT\xd6\xc0&\x10\xb0\x09\xb0g\x94eE" +
	"\\bK9e\x02\xac\xa8\xb90\xd7\xbd\x82\xd5\x1e\xa2" +
	"\x9e\xa6<\xb5\x85e\x9e\xf3\xba\x88O\x9e1\x1f\x00\x05" +
	"\xb9\x9d\xfe\x88\xb2\xdc\x05\x10N\xea\xa3\xf9\x8d\xa1\x94\xb1" +
	"!\x1b\xbaF3\x8d\xb0n\x9aY\xb3\xa6JIN\x9e" +
	"=k\xb9\xdc\xf0\xc4\xbd$\x9e~N\\xV\x97\x0d" +
	"\xd2\x84\xb5Ku\x07\x0ay\xda\x8b\xae~\x01\xef\xf6\"" +
	"o\x1c\xcb{c \xc87Q\x8d\xc7\x07#\xc8g\x01" +
	"\xf2u\xdd\xbc_\xc0;\xa8\xc8\xdb\xa2\xb2\xbe\x89\xf7\x0b" +
	"x\x0f\x15y{_\x8e.\xe7\xfd\x02>\xaa@>\xe7" +
	"\x91/\x8d\xb1~\x81\xb31\xfbu\xdd\xb4RY@\xa3" +
	"\x17{\x0a\x85I/\x83\xc2\xb2\xac\x99\xcdC\xc8N\x19" +
	"z/:<eg\xe5\xa3\xbb\xb8\xafi\x15T\xf6+" +
	"\xebUL\x15A\xaa\xdbgq\xd5\x0a\xdc@\xa3n\x03" +
	"\xc0]\x15n-\xf0\xd5kmU\xd5\xa2u\xa1\xf3E" +
	"{\x09um\xfc\xac\x12\xb3\xd8p\xa8\xd7Ns\xbbP" +
	"\xe4C\xb9<\xa0\xa0[\xe2\xd2\x0aa&\x91\xa0\xb4\x80" +
	"A\x89\xcf\x0e\x91\xcfO\x94(N\x03A\x19D\x02\x13" +
	"\x9fD!\x9f\xa0*K1\x06\x82\xd2\x89>\x14\xf8P" +
	"\xb8<$Sf\xe3r\x10\x94\x0b\x91\x00\xc5\x07\xbd\xc8" +
	"\x07\xbb\x8a\xcc\xf66\xa2\x0f%>\x10,O\xeb\xe4\xf3" +
	"\x04\xb7\xdf\xf9\xd0S\x1a\xaa!\x1f{\xc8\xbfZ\x0b\x82" +
	"\xfc\xa6\x0f\xbd|\x12\xea\x1a\x16\xbc\xd4\x0f\x82\xfc\xac\x0f" +
	"}\xa5I\x0e\xf2\xb1\xa2|\xcc\x04A~\xd4\x87\x0d\xa5" +
	"\x09/\xf2\x09\x86\xfc\x00\xc9\xbc\xc7\x87\x8d\xa5\xe1.\xf2" +
	"\x19\x91|\xc7\xfc\xc2u\xf2\x97\x06\x90\xc8\xe7(\xf2u" +
	"\xfd\xec:\x15\xda\"\xae\xd6u\xaf\xab\xa7\xc1Q\xce\x1b" +
	"\xf3\xd5\x0d\x94\x0a\x84\xf4\xe2\x8e\xe2O\x12X|; " +
	"\xcc\xb0\xe6\xa6\x88\xc4\x10\xa2\x97\xa7\xb7\x14\xea\x9a\xebS" +
	"\xd5,\xaf\x0bU7d\x8a\x9aQ.O|\xab S" +
	"\xf9^\xf1\xae_\xa1\xbb\xfb\xffj@\xf8>S`\xdd" +
	"v\x99Ureb\xf0\x97=)Mx\xab<\xa9l" +
	"\xa1\xb0\x07\x8a\x9e\xa7\xba\xb3\x9e\xeaV\xc3\x04\xed\x88\x0a" +
	"Y\x93\xf5\xf4*\x8e\xe4\xff\x02\x00\x00\xff\xff\xffs\"" +
	"N"

func init() {
	schemas.Register(schema_db8274f9144abc7e,
		0x84e4b51ba5570071,
		0x8526d6d896c688e0,
		0x88e166675c857e18,
		0x8ff15814cd06ecd7,
		0x8ff88405c5bd0dec,
		0x91dfcb778d8d16c0,
		0x9285c4944dfb709f,
		0x92a4f36c8d41b673,
		0x933297e0a8a77222,
		0x9596c4fb3d4044a6,
		0x965465bd75220f94,
		0x9aae3a8502e6d5eb,
		0xa23b4c1a964c722b,
		0xa504000ac6204c12,
		0xa56ff1a4dc4cdcd8,
		0xa6b9c11c2aac9785,
		0xa76b7607195dee3a,
		0xa7e3c40f8e5ecb74,
		0xa8fc15721302db2a,
		0xa9121e4800ff7069,
		0xac531ffcc2cdbf05,
		0xad48fb996c416d96,
		0xad64659a5d76e80b,
		0xae6825c3fecb35bf,
		0xb25b411cec149334,
		0xb5031b975a2f2d5d,
		0xb95426b082b00c25,
		0xb95e72a43cd7c47c,
		0xb9c996f05a75ae42,
		0xbea6ce314a7abc79,
		0xc21e37cdb9df069e,
		0xc3806a9410e187be,
		0xc3e472677f9be8ad,
		0xc7fcacbb7e6c5bb0,
		0xc8c60b05d115f411,
		0xccdde1728f71e904,
		0xcdf011e3e3860026,
		0xce802aa8977a9aee,
		0xd2592928fa547bc6,
		0xd451112d04c75608,
		0xd47381c89e2f1649,
		0xdc063192b2b7a561,
		0xdda2e02140fe8f08,
		0xe542d95b68592c1c,
		0xe5a432109337fc5d,
		0xeb68797cd74f95c2,
		0xed1583a692140448,
		0xed7c7bac1db2cb02,
		0xf052e7e084b31199,
		0xf09be4e8d421f422,
		0xf175231b9048f2c5,
		0xf604c2f7eff9f3c7,
		0xfa41cf108b6d790d,
		0xfa6ca90efc9ff291,
		0xfa7d2ded965e55e3,
		0xfcf6d1267c1553d3)
}
