// Code generated by capnpc-go. DO NOT EDIT.

package capnprpc

import (
	math "math"

	context "golang.org/x/net/context"
	capnp "zombiezen.com/go/capnproto2"
	text "zombiezen.com/go/capnproto2/encoding/text"
	schemas "zombiezen.com/go/capnproto2/schemas"
	server "zombiezen.com/go/capnproto2/server"
)

type App struct{ Client capnp.Client }

// App_TypeID is the unique identifier for the type App.
const App_TypeID = 0xf052e7e084b31199

func (c App) Id(ctx context.Context, params func(App_id_Params) error, opts ...capnp.CallOption) App_id_Results_Promise {
	if c.Client == nil {
		return App_id_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xf052e7e084b31199,
			MethodID:      0,
			InterfaceName: "app.capnp:App",
			MethodName:    "id",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(App_id_Params{Struct: s}) }
	}
	return App_id_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c App) ReleaseId(ctx context.Context, params func(App_releaseId_Params) error, opts ...capnp.CallOption) App_releaseId_Results_Promise {
	if c.Client == nil {
		return App_releaseId_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xf052e7e084b31199,
			MethodID:      1,
			InterfaceName: "app.capnp:App",
			MethodName:    "releaseId",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(App_releaseId_Params{Struct: s}) }
	}
	return App_releaseId_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c App) Instance(ctx context.Context, params func(App_instance_Params) error, opts ...capnp.CallOption) App_instance_Results_Promise {
	if c.Client == nil {
		return App_instance_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xf052e7e084b31199,
			MethodID:      2,
			InterfaceName: "app.capnp:App",
			MethodName:    "instance",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(App_instance_Params{Struct: s}) }
	}
	return App_instance_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c App) StartedOn(ctx context.Context, params func(App_startedOn_Params) error, opts ...capnp.CallOption) App_startedOn_Results_Promise {
	if c.Client == nil {
		return App_startedOn_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xf052e7e084b31199,
			MethodID:      3,
			InterfaceName: "app.capnp:App",
			MethodName:    "startedOn",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(App_startedOn_Params{Struct: s}) }
	}
	return App_startedOn_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c App) LogLevel(ctx context.Context, params func(App_logLevel_Params) error, opts ...capnp.CallOption) App_logLevel_Results_Promise {
	if c.Client == nil {
		return App_logLevel_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xf052e7e084b31199,
			MethodID:      4,
			InterfaceName: "app.capnp:App",
			MethodName:    "logLevel",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(App_logLevel_Params{Struct: s}) }
	}
	return App_logLevel_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c App) ServiceIds(ctx context.Context, params func(App_serviceIds_Params) error, opts ...capnp.CallOption) App_serviceIds_Results_Promise {
	if c.Client == nil {
		return App_serviceIds_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xf052e7e084b31199,
			MethodID:      5,
			InterfaceName: "app.capnp:App",
			MethodName:    "serviceIds",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(App_serviceIds_Params{Struct: s}) }
	}
	return App_serviceIds_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c App) Service(ctx context.Context, params func(App_service_Params) error, opts ...capnp.CallOption) App_service_Results_Promise {
	if c.Client == nil {
		return App_service_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xf052e7e084b31199,
			MethodID:      6,
			InterfaceName: "app.capnp:App",
			MethodName:    "service",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(App_service_Params{Struct: s}) }
	}
	return App_service_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c App) RpcServiceIds(ctx context.Context, params func(App_rpcServiceIds_Params) error, opts ...capnp.CallOption) App_rpcServiceIds_Results_Promise {
	if c.Client == nil {
		return App_rpcServiceIds_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xf052e7e084b31199,
			MethodID:      7,
			InterfaceName: "app.capnp:App",
			MethodName:    "rpcServiceIds",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(App_rpcServiceIds_Params{Struct: s}) }
	}
	return App_rpcServiceIds_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c App) RpcService(ctx context.Context, params func(App_rpcService_Params) error, opts ...capnp.CallOption) App_rpcService_Results_Promise {
	if c.Client == nil {
		return App_rpcService_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xf052e7e084b31199,
			MethodID:      8,
			InterfaceName: "app.capnp:App",
			MethodName:    "rpcService",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(App_rpcService_Params{Struct: s}) }
	}
	return App_rpcService_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c App) Kill(ctx context.Context, params func(App_kill_Params) error, opts ...capnp.CallOption) App_kill_Results_Promise {
	if c.Client == nil {
		return App_kill_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xf052e7e084b31199,
			MethodID:      9,
			InterfaceName: "app.capnp:App",
			MethodName:    "kill",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(App_kill_Params{Struct: s}) }
	}
	return App_kill_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c App) Runtime(ctx context.Context, params func(App_runtime_Params) error, opts ...capnp.CallOption) App_runtime_Results_Promise {
	if c.Client == nil {
		return App_runtime_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xf052e7e084b31199,
			MethodID:      10,
			InterfaceName: "app.capnp:App",
			MethodName:    "runtime",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(App_runtime_Params{Struct: s}) }
	}
	return App_runtime_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c App) Configs(ctx context.Context, params func(App_configs_Params) error, opts ...capnp.CallOption) App_configs_Results_Promise {
	if c.Client == nil {
		return App_configs_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xf052e7e084b31199,
			MethodID:      11,
			InterfaceName: "app.capnp:App",
			MethodName:    "configs",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(App_configs_Params{Struct: s}) }
	}
	return App_configs_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}

type App_Server interface {
	Id(App_id) error

	ReleaseId(App_releaseId) error

	Instance(App_instance) error

	StartedOn(App_startedOn) error

	LogLevel(App_logLevel) error

	ServiceIds(App_serviceIds) error

	Service(App_service) error

	RpcServiceIds(App_rpcServiceIds) error

	RpcService(App_rpcService) error

	Kill(App_kill) error

	Runtime(App_runtime) error

	Configs(App_configs) error
}

func App_ServerToClient(s App_Server) App {
	c, _ := s.(server.Closer)
	return App{Client: server.New(App_Methods(nil, s), c)}
}

func App_Methods(methods []server.Method, s App_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 12)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xf052e7e084b31199,
			MethodID:      0,
			InterfaceName: "app.capnp:App",
			MethodName:    "id",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := App_id{c, opts, App_id_Params{Struct: p}, App_id_Results{Struct: r}}
			return s.Id(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xf052e7e084b31199,
			MethodID:      1,
			InterfaceName: "app.capnp:App",
			MethodName:    "releaseId",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := App_releaseId{c, opts, App_releaseId_Params{Struct: p}, App_releaseId_Results{Struct: r}}
			return s.ReleaseId(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xf052e7e084b31199,
			MethodID:      2,
			InterfaceName: "app.capnp:App",
			MethodName:    "instance",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := App_instance{c, opts, App_instance_Params{Struct: p}, App_instance_Results{Struct: r}}
			return s.Instance(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xf052e7e084b31199,
			MethodID:      3,
			InterfaceName: "app.capnp:App",
			MethodName:    "startedOn",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := App_startedOn{c, opts, App_startedOn_Params{Struct: p}, App_startedOn_Results{Struct: r}}
			return s.StartedOn(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xf052e7e084b31199,
			MethodID:      4,
			InterfaceName: "app.capnp:App",
			MethodName:    "logLevel",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := App_logLevel{c, opts, App_logLevel_Params{Struct: p}, App_logLevel_Results{Struct: r}}
			return s.LogLevel(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xf052e7e084b31199,
			MethodID:      5,
			InterfaceName: "app.capnp:App",
			MethodName:    "serviceIds",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := App_serviceIds{c, opts, App_serviceIds_Params{Struct: p}, App_serviceIds_Results{Struct: r}}
			return s.ServiceIds(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xf052e7e084b31199,
			MethodID:      6,
			InterfaceName: "app.capnp:App",
			MethodName:    "service",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := App_service{c, opts, App_service_Params{Struct: p}, App_service_Results{Struct: r}}
			return s.Service(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xf052e7e084b31199,
			MethodID:      7,
			InterfaceName: "app.capnp:App",
			MethodName:    "rpcServiceIds",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := App_rpcServiceIds{c, opts, App_rpcServiceIds_Params{Struct: p}, App_rpcServiceIds_Results{Struct: r}}
			return s.RpcServiceIds(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xf052e7e084b31199,
			MethodID:      8,
			InterfaceName: "app.capnp:App",
			MethodName:    "rpcService",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := App_rpcService{c, opts, App_rpcService_Params{Struct: p}, App_rpcService_Results{Struct: r}}
			return s.RpcService(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xf052e7e084b31199,
			MethodID:      9,
			InterfaceName: "app.capnp:App",
			MethodName:    "kill",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := App_kill{c, opts, App_kill_Params{Struct: p}, App_kill_Results{Struct: r}}
			return s.Kill(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xf052e7e084b31199,
			MethodID:      10,
			InterfaceName: "app.capnp:App",
			MethodName:    "runtime",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := App_runtime{c, opts, App_runtime_Params{Struct: p}, App_runtime_Results{Struct: r}}
			return s.Runtime(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xf052e7e084b31199,
			MethodID:      11,
			InterfaceName: "app.capnp:App",
			MethodName:    "configs",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := App_configs{c, opts, App_configs_Params{Struct: p}, App_configs_Results{Struct: r}}
			return s.Configs(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	return methods
}

// App_id holds the arguments for a server call to App.id.
type App_id struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  App_id_Params
	Results App_id_Results
}

// App_releaseId holds the arguments for a server call to App.releaseId.
type App_releaseId struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  App_releaseId_Params
	Results App_releaseId_Results
}

// App_instance holds the arguments for a server call to App.instance.
type App_instance struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  App_instance_Params
	Results App_instance_Results
}

// App_startedOn holds the arguments for a server call to App.startedOn.
type App_startedOn struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  App_startedOn_Params
	Results App_startedOn_Results
}

// App_logLevel holds the arguments for a server call to App.logLevel.
type App_logLevel struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  App_logLevel_Params
	Results App_logLevel_Results
}

// App_serviceIds holds the arguments for a server call to App.serviceIds.
type App_serviceIds struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  App_serviceIds_Params
	Results App_serviceIds_Results
}

// App_service holds the arguments for a server call to App.service.
type App_service struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  App_service_Params
	Results App_service_Results
}

// App_rpcServiceIds holds the arguments for a server call to App.rpcServiceIds.
type App_rpcServiceIds struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  App_rpcServiceIds_Params
	Results App_rpcServiceIds_Results
}

// App_rpcService holds the arguments for a server call to App.rpcService.
type App_rpcService struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  App_rpcService_Params
	Results App_rpcService_Results
}

// App_kill holds the arguments for a server call to App.kill.
type App_kill struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  App_kill_Params
	Results App_kill_Results
}

// App_runtime holds the arguments for a server call to App.runtime.
type App_runtime struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  App_runtime_Params
	Results App_runtime_Results
}

// App_configs holds the arguments for a server call to App.configs.
type App_configs struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  App_configs_Params
	Results App_configs_Results
}

type App_id_Params struct{ capnp.Struct }

// App_id_Params_TypeID is the unique identifier for the type App_id_Params.
const App_id_Params_TypeID = 0xa56ff1a4dc4cdcd8

func NewApp_id_Params(s *capnp.Segment) (App_id_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return App_id_Params{st}, err
}

func NewRootApp_id_Params(s *capnp.Segment) (App_id_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return App_id_Params{st}, err
}

func ReadRootApp_id_Params(msg *capnp.Message) (App_id_Params, error) {
	root, err := msg.RootPtr()
	return App_id_Params{root.Struct()}, err
}

func (s App_id_Params) String() string {
	str, _ := text.Marshal(0xa56ff1a4dc4cdcd8, s.Struct)
	return str
}

// App_id_Params_List is a list of App_id_Params.
type App_id_Params_List struct{ capnp.List }

// NewApp_id_Params creates a new list of App_id_Params.
func NewApp_id_Params_List(s *capnp.Segment, sz int32) (App_id_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return App_id_Params_List{l}, err
}

func (s App_id_Params_List) At(i int) App_id_Params { return App_id_Params{s.List.Struct(i)} }

func (s App_id_Params_List) Set(i int, v App_id_Params) error { return s.List.SetStruct(i, v.Struct) }

func (s App_id_Params_List) String() string {
	str, _ := text.MarshalList(0xa56ff1a4dc4cdcd8, s.List)
	return str
}

// App_id_Params_Promise is a wrapper for a App_id_Params promised by a client call.
type App_id_Params_Promise struct{ *capnp.Pipeline }

func (p App_id_Params_Promise) Struct() (App_id_Params, error) {
	s, err := p.Pipeline.Struct()
	return App_id_Params{s}, err
}

type App_id_Results struct{ capnp.Struct }

// App_id_Results_TypeID is the unique identifier for the type App_id_Results.
const App_id_Results_TypeID = 0xd2592928fa547bc6

func NewApp_id_Results(s *capnp.Segment) (App_id_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return App_id_Results{st}, err
}

func NewRootApp_id_Results(s *capnp.Segment) (App_id_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return App_id_Results{st}, err
}

func ReadRootApp_id_Results(msg *capnp.Message) (App_id_Results, error) {
	root, err := msg.RootPtr()
	return App_id_Results{root.Struct()}, err
}

func (s App_id_Results) String() string {
	str, _ := text.Marshal(0xd2592928fa547bc6, s.Struct)
	return str
}

func (s App_id_Results) AppId() uint64 {
	return s.Struct.Uint64(0)
}

func (s App_id_Results) SetAppId(v uint64) {
	s.Struct.SetUint64(0, v)
}

// App_id_Results_List is a list of App_id_Results.
type App_id_Results_List struct{ capnp.List }

// NewApp_id_Results creates a new list of App_id_Results.
func NewApp_id_Results_List(s *capnp.Segment, sz int32) (App_id_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return App_id_Results_List{l}, err
}

func (s App_id_Results_List) At(i int) App_id_Results { return App_id_Results{s.List.Struct(i)} }

func (s App_id_Results_List) Set(i int, v App_id_Results) error { return s.List.SetStruct(i, v.Struct) }

func (s App_id_Results_List) String() string {
	str, _ := text.MarshalList(0xd2592928fa547bc6, s.List)
	return str
}

// App_id_Results_Promise is a wrapper for a App_id_Results promised by a client call.
type App_id_Results_Promise struct{ *capnp.Pipeline }

func (p App_id_Results_Promise) Struct() (App_id_Results, error) {
	s, err := p.Pipeline.Struct()
	return App_id_Results{s}, err
}

type App_releaseId_Params struct{ capnp.Struct }

// App_releaseId_Params_TypeID is the unique identifier for the type App_releaseId_Params.
const App_releaseId_Params_TypeID = 0xbea6ce314a7abc79

func NewApp_releaseId_Params(s *capnp.Segment) (App_releaseId_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return App_releaseId_Params{st}, err
}

func NewRootApp_releaseId_Params(s *capnp.Segment) (App_releaseId_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return App_releaseId_Params{st}, err
}

func ReadRootApp_releaseId_Params(msg *capnp.Message) (App_releaseId_Params, error) {
	root, err := msg.RootPtr()
	return App_releaseId_Params{root.Struct()}, err
}

func (s App_releaseId_Params) String() string {
	str, _ := text.Marshal(0xbea6ce314a7abc79, s.Struct)
	return str
}

// App_releaseId_Params_List is a list of App_releaseId_Params.
type App_releaseId_Params_List struct{ capnp.List }

// NewApp_releaseId_Params creates a new list of App_releaseId_Params.
func NewApp_releaseId_Params_List(s *capnp.Segment, sz int32) (App_releaseId_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return App_releaseId_Params_List{l}, err
}

func (s App_releaseId_Params_List) At(i int) App_releaseId_Params {
	return App_releaseId_Params{s.List.Struct(i)}
}

func (s App_releaseId_Params_List) Set(i int, v App_releaseId_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s App_releaseId_Params_List) String() string {
	str, _ := text.MarshalList(0xbea6ce314a7abc79, s.List)
	return str
}

// App_releaseId_Params_Promise is a wrapper for a App_releaseId_Params promised by a client call.
type App_releaseId_Params_Promise struct{ *capnp.Pipeline }

func (p App_releaseId_Params_Promise) Struct() (App_releaseId_Params, error) {
	s, err := p.Pipeline.Struct()
	return App_releaseId_Params{s}, err
}

type App_releaseId_Results struct{ capnp.Struct }

// App_releaseId_Results_TypeID is the unique identifier for the type App_releaseId_Results.
const App_releaseId_Results_TypeID = 0x92a4f36c8d41b673

func NewApp_releaseId_Results(s *capnp.Segment) (App_releaseId_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return App_releaseId_Results{st}, err
}

func NewRootApp_releaseId_Results(s *capnp.Segment) (App_releaseId_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return App_releaseId_Results{st}, err
}

func ReadRootApp_releaseId_Results(msg *capnp.Message) (App_releaseId_Results, error) {
	root, err := msg.RootPtr()
	return App_releaseId_Results{root.Struct()}, err
}

func (s App_releaseId_Results) String() string {
	str, _ := text.Marshal(0x92a4f36c8d41b673, s.Struct)
	return str
}

func (s App_releaseId_Results) ReleaseId() uint64 {
	return s.Struct.Uint64(0)
}

func (s App_releaseId_Results) SetReleaseId(v uint64) {
	s.Struct.SetUint64(0, v)
}

// App_releaseId_Results_List is a list of App_releaseId_Results.
type App_releaseId_Results_List struct{ capnp.List }

// NewApp_releaseId_Results creates a new list of App_releaseId_Results.
func NewApp_releaseId_Results_List(s *capnp.Segment, sz int32) (App_releaseId_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return App_releaseId_Results_List{l}, err
}

func (s App_releaseId_Results_List) At(i int) App_releaseId_Results {
	return App_releaseId_Results{s.List.Struct(i)}
}

func (s App_releaseId_Results_List) Set(i int, v App_releaseId_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s App_releaseId_Results_List) String() string {
	str, _ := text.MarshalList(0x92a4f36c8d41b673, s.List)
	return str
}

// App_releaseId_Results_Promise is a wrapper for a App_releaseId_Results promised by a client call.
type App_releaseId_Results_Promise struct{ *capnp.Pipeline }

func (p App_releaseId_Results_Promise) Struct() (App_releaseId_Results, error) {
	s, err := p.Pipeline.Struct()
	return App_releaseId_Results{s}, err
}

type App_instance_Params struct{ capnp.Struct }

// App_instance_Params_TypeID is the unique identifier for the type App_instance_Params.
const App_instance_Params_TypeID = 0x84e4b51ba5570071

func NewApp_instance_Params(s *capnp.Segment) (App_instance_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return App_instance_Params{st}, err
}

func NewRootApp_instance_Params(s *capnp.Segment) (App_instance_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return App_instance_Params{st}, err
}

func ReadRootApp_instance_Params(msg *capnp.Message) (App_instance_Params, error) {
	root, err := msg.RootPtr()
	return App_instance_Params{root.Struct()}, err
}

func (s App_instance_Params) String() string {
	str, _ := text.Marshal(0x84e4b51ba5570071, s.Struct)
	return str
}

// App_instance_Params_List is a list of App_instance_Params.
type App_instance_Params_List struct{ capnp.List }

// NewApp_instance_Params creates a new list of App_instance_Params.
func NewApp_instance_Params_List(s *capnp.Segment, sz int32) (App_instance_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return App_instance_Params_List{l}, err
}

func (s App_instance_Params_List) At(i int) App_instance_Params {
	return App_instance_Params{s.List.Struct(i)}
}

func (s App_instance_Params_List) Set(i int, v App_instance_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s App_instance_Params_List) String() string {
	str, _ := text.MarshalList(0x84e4b51ba5570071, s.List)
	return str
}

// App_instance_Params_Promise is a wrapper for a App_instance_Params promised by a client call.
type App_instance_Params_Promise struct{ *capnp.Pipeline }

func (p App_instance_Params_Promise) Struct() (App_instance_Params, error) {
	s, err := p.Pipeline.Struct()
	return App_instance_Params{s}, err
}

type App_instance_Results struct{ capnp.Struct }

// App_instance_Results_TypeID is the unique identifier for the type App_instance_Results.
const App_instance_Results_TypeID = 0xb5031b975a2f2d5d

func NewApp_instance_Results(s *capnp.Segment) (App_instance_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return App_instance_Results{st}, err
}

func NewRootApp_instance_Results(s *capnp.Segment) (App_instance_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return App_instance_Results{st}, err
}

func ReadRootApp_instance_Results(msg *capnp.Message) (App_instance_Results, error) {
	root, err := msg.RootPtr()
	return App_instance_Results{root.Struct()}, err
}

func (s App_instance_Results) String() string {
	str, _ := text.Marshal(0xb5031b975a2f2d5d, s.Struct)
	return str
}

func (s App_instance_Results) InstanceId() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s App_instance_Results) HasInstanceId() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s App_instance_Results) InstanceIdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s App_instance_Results) SetInstanceId(v string) error {
	return s.Struct.SetText(0, v)
}

// App_instance_Results_List is a list of App_instance_Results.
type App_instance_Results_List struct{ capnp.List }

// NewApp_instance_Results creates a new list of App_instance_Results.
func NewApp_instance_Results_List(s *capnp.Segment, sz int32) (App_instance_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return App_instance_Results_List{l}, err
}

func (s App_instance_Results_List) At(i int) App_instance_Results {
	return App_instance_Results{s.List.Struct(i)}
}

func (s App_instance_Results_List) Set(i int, v App_instance_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s App_instance_Results_List) String() string {
	str, _ := text.MarshalList(0xb5031b975a2f2d5d, s.List)
	return str
}

// App_instance_Results_Promise is a wrapper for a App_instance_Results promised by a client call.
type App_instance_Results_Promise struct{ *capnp.Pipeline }

func (p App_instance_Results_Promise) Struct() (App_instance_Results, error) {
	s, err := p.Pipeline.Struct()
	return App_instance_Results{s}, err
}

type App_startedOn_Params struct{ capnp.Struct }

// App_startedOn_Params_TypeID is the unique identifier for the type App_startedOn_Params.
const App_startedOn_Params_TypeID = 0x8ff15814cd06ecd7

func NewApp_startedOn_Params(s *capnp.Segment) (App_startedOn_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return App_startedOn_Params{st}, err
}

func NewRootApp_startedOn_Params(s *capnp.Segment) (App_startedOn_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return App_startedOn_Params{st}, err
}

func ReadRootApp_startedOn_Params(msg *capnp.Message) (App_startedOn_Params, error) {
	root, err := msg.RootPtr()
	return App_startedOn_Params{root.Struct()}, err
}

func (s App_startedOn_Params) String() string {
	str, _ := text.Marshal(0x8ff15814cd06ecd7, s.Struct)
	return str
}

// App_startedOn_Params_List is a list of App_startedOn_Params.
type App_startedOn_Params_List struct{ capnp.List }

// NewApp_startedOn_Params creates a new list of App_startedOn_Params.
func NewApp_startedOn_Params_List(s *capnp.Segment, sz int32) (App_startedOn_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return App_startedOn_Params_List{l}, err
}

func (s App_startedOn_Params_List) At(i int) App_startedOn_Params {
	return App_startedOn_Params{s.List.Struct(i)}
}

func (s App_startedOn_Params_List) Set(i int, v App_startedOn_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s App_startedOn_Params_List) String() string {
	str, _ := text.MarshalList(0x8ff15814cd06ecd7, s.List)
	return str
}

// App_startedOn_Params_Promise is a wrapper for a App_startedOn_Params promised by a client call.
type App_startedOn_Params_Promise struct{ *capnp.Pipeline }

func (p App_startedOn_Params_Promise) Struct() (App_startedOn_Params, error) {
	s, err := p.Pipeline.Struct()
	return App_startedOn_Params{s}, err
}

type App_startedOn_Results struct{ capnp.Struct }

// App_startedOn_Results_TypeID is the unique identifier for the type App_startedOn_Results.
const App_startedOn_Results_TypeID = 0x8ff88405c5bd0dec

func NewApp_startedOn_Results(s *capnp.Segment) (App_startedOn_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return App_startedOn_Results{st}, err
}

func NewRootApp_startedOn_Results(s *capnp.Segment) (App_startedOn_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return App_startedOn_Results{st}, err
}

func ReadRootApp_startedOn_Results(msg *capnp.Message) (App_startedOn_Results, error) {
	root, err := msg.RootPtr()
	return App_startedOn_Results{root.Struct()}, err
}

func (s App_startedOn_Results) String() string {
	str, _ := text.Marshal(0x8ff88405c5bd0dec, s.Struct)
	return str
}

func (s App_startedOn_Results) StartedOn() int64 {
	return int64(s.Struct.Uint64(0))
}

func (s App_startedOn_Results) SetStartedOn(v int64) {
	s.Struct.SetUint64(0, uint64(v))
}

// App_startedOn_Results_List is a list of App_startedOn_Results.
type App_startedOn_Results_List struct{ capnp.List }

// NewApp_startedOn_Results creates a new list of App_startedOn_Results.
func NewApp_startedOn_Results_List(s *capnp.Segment, sz int32) (App_startedOn_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return App_startedOn_Results_List{l}, err
}

func (s App_startedOn_Results_List) At(i int) App_startedOn_Results {
	return App_startedOn_Results{s.List.Struct(i)}
}

func (s App_startedOn_Results_List) Set(i int, v App_startedOn_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s App_startedOn_Results_List) String() string {
	str, _ := text.MarshalList(0x8ff88405c5bd0dec, s.List)
	return str
}

// App_startedOn_Results_Promise is a wrapper for a App_startedOn_Results promised by a client call.
type App_startedOn_Results_Promise struct{ *capnp.Pipeline }

func (p App_startedOn_Results_Promise) Struct() (App_startedOn_Results, error) {
	s, err := p.Pipeline.Struct()
	return App_startedOn_Results{s}, err
}

type App_logLevel_Params struct{ capnp.Struct }

// App_logLevel_Params_TypeID is the unique identifier for the type App_logLevel_Params.
const App_logLevel_Params_TypeID = 0xa9121e4800ff7069

func NewApp_logLevel_Params(s *capnp.Segment) (App_logLevel_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return App_logLevel_Params{st}, err
}

func NewRootApp_logLevel_Params(s *capnp.Segment) (App_logLevel_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return App_logLevel_Params{st}, err
}

func ReadRootApp_logLevel_Params(msg *capnp.Message) (App_logLevel_Params, error) {
	root, err := msg.RootPtr()
	return App_logLevel_Params{root.Struct()}, err
}

func (s App_logLevel_Params) String() string {
	str, _ := text.Marshal(0xa9121e4800ff7069, s.Struct)
	return str
}

// App_logLevel_Params_List is a list of App_logLevel_Params.
type App_logLevel_Params_List struct{ capnp.List }

// NewApp_logLevel_Params creates a new list of App_logLevel_Params.
func NewApp_logLevel_Params_List(s *capnp.Segment, sz int32) (App_logLevel_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return App_logLevel_Params_List{l}, err
}

func (s App_logLevel_Params_List) At(i int) App_logLevel_Params {
	return App_logLevel_Params{s.List.Struct(i)}
}

func (s App_logLevel_Params_List) Set(i int, v App_logLevel_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s App_logLevel_Params_List) String() string {
	str, _ := text.MarshalList(0xa9121e4800ff7069, s.List)
	return str
}

// App_logLevel_Params_Promise is a wrapper for a App_logLevel_Params promised by a client call.
type App_logLevel_Params_Promise struct{ *capnp.Pipeline }

func (p App_logLevel_Params_Promise) Struct() (App_logLevel_Params, error) {
	s, err := p.Pipeline.Struct()
	return App_logLevel_Params{s}, err
}

type App_logLevel_Results struct{ capnp.Struct }

// App_logLevel_Results_TypeID is the unique identifier for the type App_logLevel_Results.
const App_logLevel_Results_TypeID = 0xae6825c3fecb35bf

func NewApp_logLevel_Results(s *capnp.Segment) (App_logLevel_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return App_logLevel_Results{st}, err
}

func NewRootApp_logLevel_Results(s *capnp.Segment) (App_logLevel_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return App_logLevel_Results{st}, err
}

func ReadRootApp_logLevel_Results(msg *capnp.Message) (App_logLevel_Results, error) {
	root, err := msg.RootPtr()
	return App_logLevel_Results{root.Struct()}, err
}

func (s App_logLevel_Results) String() string {
	str, _ := text.Marshal(0xae6825c3fecb35bf, s.Struct)
	return str
}

func (s App_logLevel_Results) Level() LogLevel {
	return LogLevel(s.Struct.Uint16(0))
}

func (s App_logLevel_Results) SetLevel(v LogLevel) {
	s.Struct.SetUint16(0, uint16(v))
}

// App_logLevel_Results_List is a list of App_logLevel_Results.
type App_logLevel_Results_List struct{ capnp.List }

// NewApp_logLevel_Results creates a new list of App_logLevel_Results.
func NewApp_logLevel_Results_List(s *capnp.Segment, sz int32) (App_logLevel_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return App_logLevel_Results_List{l}, err
}

func (s App_logLevel_Results_List) At(i int) App_logLevel_Results {
	return App_logLevel_Results{s.List.Struct(i)}
}

func (s App_logLevel_Results_List) Set(i int, v App_logLevel_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s App_logLevel_Results_List) String() string {
	str, _ := text.MarshalList(0xae6825c3fecb35bf, s.List)
	return str
}

// App_logLevel_Results_Promise is a wrapper for a App_logLevel_Results promised by a client call.
type App_logLevel_Results_Promise struct{ *capnp.Pipeline }

func (p App_logLevel_Results_Promise) Struct() (App_logLevel_Results, error) {
	s, err := p.Pipeline.Struct()
	return App_logLevel_Results{s}, err
}

type App_serviceIds_Params struct{ capnp.Struct }

// App_serviceIds_Params_TypeID is the unique identifier for the type App_serviceIds_Params.
const App_serviceIds_Params_TypeID = 0xb95426b082b00c25

func NewApp_serviceIds_Params(s *capnp.Segment) (App_serviceIds_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return App_serviceIds_Params{st}, err
}

func NewRootApp_serviceIds_Params(s *capnp.Segment) (App_serviceIds_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return App_serviceIds_Params{st}, err
}

func ReadRootApp_serviceIds_Params(msg *capnp.Message) (App_serviceIds_Params, error) {
	root, err := msg.RootPtr()
	return App_serviceIds_Params{root.Struct()}, err
}

func (s App_serviceIds_Params) String() string {
	str, _ := text.Marshal(0xb95426b082b00c25, s.Struct)
	return str
}

// App_serviceIds_Params_List is a list of App_serviceIds_Params.
type App_serviceIds_Params_List struct{ capnp.List }

// NewApp_serviceIds_Params creates a new list of App_serviceIds_Params.
func NewApp_serviceIds_Params_List(s *capnp.Segment, sz int32) (App_serviceIds_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return App_serviceIds_Params_List{l}, err
}

func (s App_serviceIds_Params_List) At(i int) App_serviceIds_Params {
	return App_serviceIds_Params{s.List.Struct(i)}
}

func (s App_serviceIds_Params_List) Set(i int, v App_serviceIds_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s App_serviceIds_Params_List) String() string {
	str, _ := text.MarshalList(0xb95426b082b00c25, s.List)
	return str
}

// App_serviceIds_Params_Promise is a wrapper for a App_serviceIds_Params promised by a client call.
type App_serviceIds_Params_Promise struct{ *capnp.Pipeline }

func (p App_serviceIds_Params_Promise) Struct() (App_serviceIds_Params, error) {
	s, err := p.Pipeline.Struct()
	return App_serviceIds_Params{s}, err
}

type App_serviceIds_Results struct{ capnp.Struct }

// App_serviceIds_Results_TypeID is the unique identifier for the type App_serviceIds_Results.
const App_serviceIds_Results_TypeID = 0xeb68797cd74f95c2

func NewApp_serviceIds_Results(s *capnp.Segment) (App_serviceIds_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return App_serviceIds_Results{st}, err
}

func NewRootApp_serviceIds_Results(s *capnp.Segment) (App_serviceIds_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return App_serviceIds_Results{st}, err
}

func ReadRootApp_serviceIds_Results(msg *capnp.Message) (App_serviceIds_Results, error) {
	root, err := msg.RootPtr()
	return App_serviceIds_Results{root.Struct()}, err
}

func (s App_serviceIds_Results) String() string {
	str, _ := text.Marshal(0xeb68797cd74f95c2, s.Struct)
	return str
}

func (s App_serviceIds_Results) ServiceIds() (capnp.UInt64List, error) {
	p, err := s.Struct.Ptr(0)
	return capnp.UInt64List{List: p.List()}, err
}

func (s App_serviceIds_Results) HasServiceIds() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s App_serviceIds_Results) SetServiceIds(v capnp.UInt64List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewServiceIds sets the serviceIds field to a newly
// allocated capnp.UInt64List, preferring placement in s's segment.
func (s App_serviceIds_Results) NewServiceIds(n int32) (capnp.UInt64List, error) {
	l, err := capnp.NewUInt64List(s.Struct.Segment(), n)
	if err != nil {
		return capnp.UInt64List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// App_serviceIds_Results_List is a list of App_serviceIds_Results.
type App_serviceIds_Results_List struct{ capnp.List }

// NewApp_serviceIds_Results creates a new list of App_serviceIds_Results.
func NewApp_serviceIds_Results_List(s *capnp.Segment, sz int32) (App_serviceIds_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return App_serviceIds_Results_List{l}, err
}

func (s App_serviceIds_Results_List) At(i int) App_serviceIds_Results {
	return App_serviceIds_Results{s.List.Struct(i)}
}

func (s App_serviceIds_Results_List) Set(i int, v App_serviceIds_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s App_serviceIds_Results_List) String() string {
	str, _ := text.MarshalList(0xeb68797cd74f95c2, s.List)
	return str
}

// App_serviceIds_Results_Promise is a wrapper for a App_serviceIds_Results promised by a client call.
type App_serviceIds_Results_Promise struct{ *capnp.Pipeline }

func (p App_serviceIds_Results_Promise) Struct() (App_serviceIds_Results, error) {
	s, err := p.Pipeline.Struct()
	return App_serviceIds_Results{s}, err
}

type App_service_Params struct{ capnp.Struct }

// App_service_Params_TypeID is the unique identifier for the type App_service_Params.
const App_service_Params_TypeID = 0xa504000ac6204c12

func NewApp_service_Params(s *capnp.Segment) (App_service_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return App_service_Params{st}, err
}

func NewRootApp_service_Params(s *capnp.Segment) (App_service_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return App_service_Params{st}, err
}

func ReadRootApp_service_Params(msg *capnp.Message) (App_service_Params, error) {
	root, err := msg.RootPtr()
	return App_service_Params{root.Struct()}, err
}

func (s App_service_Params) String() string {
	str, _ := text.Marshal(0xa504000ac6204c12, s.Struct)
	return str
}

func (s App_service_Params) Id() uint64 {
	return s.Struct.Uint64(0)
}

func (s App_service_Params) SetId(v uint64) {
	s.Struct.SetUint64(0, v)
}

// App_service_Params_List is a list of App_service_Params.
type App_service_Params_List struct{ capnp.List }

// NewApp_service_Params creates a new list of App_service_Params.
func NewApp_service_Params_List(s *capnp.Segment, sz int32) (App_service_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return App_service_Params_List{l}, err
}

func (s App_service_Params_List) At(i int) App_service_Params {
	return App_service_Params{s.List.Struct(i)}
}

func (s App_service_Params_List) Set(i int, v App_service_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s App_service_Params_List) String() string {
	str, _ := text.MarshalList(0xa504000ac6204c12, s.List)
	return str
}

// App_service_Params_Promise is a wrapper for a App_service_Params promised by a client call.
type App_service_Params_Promise struct{ *capnp.Pipeline }

func (p App_service_Params_Promise) Struct() (App_service_Params, error) {
	s, err := p.Pipeline.Struct()
	return App_service_Params{s}, err
}

type App_service_Results struct{ capnp.Struct }

// App_service_Results_TypeID is the unique identifier for the type App_service_Results.
const App_service_Results_TypeID = 0xfa41cf108b6d790d

func NewApp_service_Results(s *capnp.Segment) (App_service_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return App_service_Results{st}, err
}

func NewRootApp_service_Results(s *capnp.Segment) (App_service_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return App_service_Results{st}, err
}

func ReadRootApp_service_Results(msg *capnp.Message) (App_service_Results, error) {
	root, err := msg.RootPtr()
	return App_service_Results{root.Struct()}, err
}

func (s App_service_Results) String() string {
	str, _ := text.Marshal(0xfa41cf108b6d790d, s.Struct)
	return str
}

func (s App_service_Results) Service() Service {
	p, _ := s.Struct.Ptr(0)
	return Service{Client: p.Interface().Client()}
}

func (s App_service_Results) HasService() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s App_service_Results) SetService(v Service) error {
	if v.Client == nil {
		return s.Struct.SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(0, in.ToPtr())
}

// App_service_Results_List is a list of App_service_Results.
type App_service_Results_List struct{ capnp.List }

// NewApp_service_Results creates a new list of App_service_Results.
func NewApp_service_Results_List(s *capnp.Segment, sz int32) (App_service_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return App_service_Results_List{l}, err
}

func (s App_service_Results_List) At(i int) App_service_Results {
	return App_service_Results{s.List.Struct(i)}
}

func (s App_service_Results_List) Set(i int, v App_service_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s App_service_Results_List) String() string {
	str, _ := text.MarshalList(0xfa41cf108b6d790d, s.List)
	return str
}

// App_service_Results_Promise is a wrapper for a App_service_Results promised by a client call.
type App_service_Results_Promise struct{ *capnp.Pipeline }

func (p App_service_Results_Promise) Struct() (App_service_Results, error) {
	s, err := p.Pipeline.Struct()
	return App_service_Results{s}, err
}

func (p App_service_Results_Promise) Service() Service {
	return Service{Client: p.Pipeline.GetPipeline(0).Client()}
}

type App_rpcServiceIds_Params struct{ capnp.Struct }

// App_rpcServiceIds_Params_TypeID is the unique identifier for the type App_rpcServiceIds_Params.
const App_rpcServiceIds_Params_TypeID = 0xd47381c89e2f1649

func NewApp_rpcServiceIds_Params(s *capnp.Segment) (App_rpcServiceIds_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return App_rpcServiceIds_Params{st}, err
}

func NewRootApp_rpcServiceIds_Params(s *capnp.Segment) (App_rpcServiceIds_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return App_rpcServiceIds_Params{st}, err
}

func ReadRootApp_rpcServiceIds_Params(msg *capnp.Message) (App_rpcServiceIds_Params, error) {
	root, err := msg.RootPtr()
	return App_rpcServiceIds_Params{root.Struct()}, err
}

func (s App_rpcServiceIds_Params) String() string {
	str, _ := text.Marshal(0xd47381c89e2f1649, s.Struct)
	return str
}

// App_rpcServiceIds_Params_List is a list of App_rpcServiceIds_Params.
type App_rpcServiceIds_Params_List struct{ capnp.List }

// NewApp_rpcServiceIds_Params creates a new list of App_rpcServiceIds_Params.
func NewApp_rpcServiceIds_Params_List(s *capnp.Segment, sz int32) (App_rpcServiceIds_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return App_rpcServiceIds_Params_List{l}, err
}

func (s App_rpcServiceIds_Params_List) At(i int) App_rpcServiceIds_Params {
	return App_rpcServiceIds_Params{s.List.Struct(i)}
}

func (s App_rpcServiceIds_Params_List) Set(i int, v App_rpcServiceIds_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s App_rpcServiceIds_Params_List) String() string {
	str, _ := text.MarshalList(0xd47381c89e2f1649, s.List)
	return str
}

// App_rpcServiceIds_Params_Promise is a wrapper for a App_rpcServiceIds_Params promised by a client call.
type App_rpcServiceIds_Params_Promise struct{ *capnp.Pipeline }

func (p App_rpcServiceIds_Params_Promise) Struct() (App_rpcServiceIds_Params, error) {
	s, err := p.Pipeline.Struct()
	return App_rpcServiceIds_Params{s}, err
}

type App_rpcServiceIds_Results struct{ capnp.Struct }

// App_rpcServiceIds_Results_TypeID is the unique identifier for the type App_rpcServiceIds_Results.
const App_rpcServiceIds_Results_TypeID = 0xac531ffcc2cdbf05

func NewApp_rpcServiceIds_Results(s *capnp.Segment) (App_rpcServiceIds_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return App_rpcServiceIds_Results{st}, err
}

func NewRootApp_rpcServiceIds_Results(s *capnp.Segment) (App_rpcServiceIds_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return App_rpcServiceIds_Results{st}, err
}

func ReadRootApp_rpcServiceIds_Results(msg *capnp.Message) (App_rpcServiceIds_Results, error) {
	root, err := msg.RootPtr()
	return App_rpcServiceIds_Results{root.Struct()}, err
}

func (s App_rpcServiceIds_Results) String() string {
	str, _ := text.Marshal(0xac531ffcc2cdbf05, s.Struct)
	return str
}

func (s App_rpcServiceIds_Results) ServiceIds() (capnp.UInt64List, error) {
	p, err := s.Struct.Ptr(0)
	return capnp.UInt64List{List: p.List()}, err
}

func (s App_rpcServiceIds_Results) HasServiceIds() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s App_rpcServiceIds_Results) SetServiceIds(v capnp.UInt64List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewServiceIds sets the serviceIds field to a newly
// allocated capnp.UInt64List, preferring placement in s's segment.
func (s App_rpcServiceIds_Results) NewServiceIds(n int32) (capnp.UInt64List, error) {
	l, err := capnp.NewUInt64List(s.Struct.Segment(), n)
	if err != nil {
		return capnp.UInt64List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// App_rpcServiceIds_Results_List is a list of App_rpcServiceIds_Results.
type App_rpcServiceIds_Results_List struct{ capnp.List }

// NewApp_rpcServiceIds_Results creates a new list of App_rpcServiceIds_Results.
func NewApp_rpcServiceIds_Results_List(s *capnp.Segment, sz int32) (App_rpcServiceIds_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return App_rpcServiceIds_Results_List{l}, err
}

func (s App_rpcServiceIds_Results_List) At(i int) App_rpcServiceIds_Results {
	return App_rpcServiceIds_Results{s.List.Struct(i)}
}

func (s App_rpcServiceIds_Results_List) Set(i int, v App_rpcServiceIds_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s App_rpcServiceIds_Results_List) String() string {
	str, _ := text.MarshalList(0xac531ffcc2cdbf05, s.List)
	return str
}

// App_rpcServiceIds_Results_Promise is a wrapper for a App_rpcServiceIds_Results promised by a client call.
type App_rpcServiceIds_Results_Promise struct{ *capnp.Pipeline }

func (p App_rpcServiceIds_Results_Promise) Struct() (App_rpcServiceIds_Results, error) {
	s, err := p.Pipeline.Struct()
	return App_rpcServiceIds_Results{s}, err
}

type App_rpcService_Params struct{ capnp.Struct }

// App_rpcService_Params_TypeID is the unique identifier for the type App_rpcService_Params.
const App_rpcService_Params_TypeID = 0x933297e0a8a77222

func NewApp_rpcService_Params(s *capnp.Segment) (App_rpcService_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return App_rpcService_Params{st}, err
}

func NewRootApp_rpcService_Params(s *capnp.Segment) (App_rpcService_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return App_rpcService_Params{st}, err
}

func ReadRootApp_rpcService_Params(msg *capnp.Message) (App_rpcService_Params, error) {
	root, err := msg.RootPtr()
	return App_rpcService_Params{root.Struct()}, err
}

func (s App_rpcService_Params) String() string {
	str, _ := text.Marshal(0x933297e0a8a77222, s.Struct)
	return str
}

func (s App_rpcService_Params) Id() uint64 {
	return s.Struct.Uint64(0)
}

func (s App_rpcService_Params) SetId(v uint64) {
	s.Struct.SetUint64(0, v)
}

// App_rpcService_Params_List is a list of App_rpcService_Params.
type App_rpcService_Params_List struct{ capnp.List }

// NewApp_rpcService_Params creates a new list of App_rpcService_Params.
func NewApp_rpcService_Params_List(s *capnp.Segment, sz int32) (App_rpcService_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return App_rpcService_Params_List{l}, err
}

func (s App_rpcService_Params_List) At(i int) App_rpcService_Params {
	return App_rpcService_Params{s.List.Struct(i)}
}

func (s App_rpcService_Params_List) Set(i int, v App_rpcService_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s App_rpcService_Params_List) String() string {
	str, _ := text.MarshalList(0x933297e0a8a77222, s.List)
	return str
}

// App_rpcService_Params_Promise is a wrapper for a App_rpcService_Params promised by a client call.
type App_rpcService_Params_Promise struct{ *capnp.Pipeline }

func (p App_rpcService_Params_Promise) Struct() (App_rpcService_Params, error) {
	s, err := p.Pipeline.Struct()
	return App_rpcService_Params{s}, err
}

type App_rpcService_Results struct{ capnp.Struct }

// App_rpcService_Results_TypeID is the unique identifier for the type App_rpcService_Results.
const App_rpcService_Results_TypeID = 0xf09be4e8d421f422

func NewApp_rpcService_Results(s *capnp.Segment) (App_rpcService_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return App_rpcService_Results{st}, err
}

func NewRootApp_rpcService_Results(s *capnp.Segment) (App_rpcService_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return App_rpcService_Results{st}, err
}

func ReadRootApp_rpcService_Results(msg *capnp.Message) (App_rpcService_Results, error) {
	root, err := msg.RootPtr()
	return App_rpcService_Results{root.Struct()}, err
}

func (s App_rpcService_Results) String() string {
	str, _ := text.Marshal(0xf09be4e8d421f422, s.Struct)
	return str
}

func (s App_rpcService_Results) Service() RPCService {
	p, _ := s.Struct.Ptr(0)
	return RPCService{Client: p.Interface().Client()}
}

func (s App_rpcService_Results) HasService() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s App_rpcService_Results) SetService(v RPCService) error {
	if v.Client == nil {
		return s.Struct.SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(0, in.ToPtr())
}

// App_rpcService_Results_List is a list of App_rpcService_Results.
type App_rpcService_Results_List struct{ capnp.List }

// NewApp_rpcService_Results creates a new list of App_rpcService_Results.
func NewApp_rpcService_Results_List(s *capnp.Segment, sz int32) (App_rpcService_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return App_rpcService_Results_List{l}, err
}

func (s App_rpcService_Results_List) At(i int) App_rpcService_Results {
	return App_rpcService_Results{s.List.Struct(i)}
}

func (s App_rpcService_Results_List) Set(i int, v App_rpcService_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s App_rpcService_Results_List) String() string {
	str, _ := text.MarshalList(0xf09be4e8d421f422, s.List)
	return str
}

// App_rpcService_Results_Promise is a wrapper for a App_rpcService_Results promised by a client call.
type App_rpcService_Results_Promise struct{ *capnp.Pipeline }

func (p App_rpcService_Results_Promise) Struct() (App_rpcService_Results, error) {
	s, err := p.Pipeline.Struct()
	return App_rpcService_Results{s}, err
}

func (p App_rpcService_Results_Promise) Service() RPCService {
	return RPCService{Client: p.Pipeline.GetPipeline(0).Client()}
}

type App_kill_Params struct{ capnp.Struct }

// App_kill_Params_TypeID is the unique identifier for the type App_kill_Params.
const App_kill_Params_TypeID = 0x9596c4fb3d4044a6

func NewApp_kill_Params(s *capnp.Segment) (App_kill_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return App_kill_Params{st}, err
}

func NewRootApp_kill_Params(s *capnp.Segment) (App_kill_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return App_kill_Params{st}, err
}

func ReadRootApp_kill_Params(msg *capnp.Message) (App_kill_Params, error) {
	root, err := msg.RootPtr()
	return App_kill_Params{root.Struct()}, err
}

func (s App_kill_Params) String() string {
	str, _ := text.Marshal(0x9596c4fb3d4044a6, s.Struct)
	return str
}

// App_kill_Params_List is a list of App_kill_Params.
type App_kill_Params_List struct{ capnp.List }

// NewApp_kill_Params creates a new list of App_kill_Params.
func NewApp_kill_Params_List(s *capnp.Segment, sz int32) (App_kill_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return App_kill_Params_List{l}, err
}

func (s App_kill_Params_List) At(i int) App_kill_Params { return App_kill_Params{s.List.Struct(i)} }

func (s App_kill_Params_List) Set(i int, v App_kill_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s App_kill_Params_List) String() string {
	str, _ := text.MarshalList(0x9596c4fb3d4044a6, s.List)
	return str
}

// App_kill_Params_Promise is a wrapper for a App_kill_Params promised by a client call.
type App_kill_Params_Promise struct{ *capnp.Pipeline }

func (p App_kill_Params_Promise) Struct() (App_kill_Params, error) {
	s, err := p.Pipeline.Struct()
	return App_kill_Params{s}, err
}

type App_kill_Results struct{ capnp.Struct }

// App_kill_Results_TypeID is the unique identifier for the type App_kill_Results.
const App_kill_Results_TypeID = 0xd451112d04c75608

func NewApp_kill_Results(s *capnp.Segment) (App_kill_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return App_kill_Results{st}, err
}

func NewRootApp_kill_Results(s *capnp.Segment) (App_kill_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return App_kill_Results{st}, err
}

func ReadRootApp_kill_Results(msg *capnp.Message) (App_kill_Results, error) {
	root, err := msg.RootPtr()
	return App_kill_Results{root.Struct()}, err
}

func (s App_kill_Results) String() string {
	str, _ := text.Marshal(0xd451112d04c75608, s.Struct)
	return str
}

// App_kill_Results_List is a list of App_kill_Results.
type App_kill_Results_List struct{ capnp.List }

// NewApp_kill_Results creates a new list of App_kill_Results.
func NewApp_kill_Results_List(s *capnp.Segment, sz int32) (App_kill_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return App_kill_Results_List{l}, err
}

func (s App_kill_Results_List) At(i int) App_kill_Results { return App_kill_Results{s.List.Struct(i)} }

func (s App_kill_Results_List) Set(i int, v App_kill_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s App_kill_Results_List) String() string {
	str, _ := text.MarshalList(0xd451112d04c75608, s.List)
	return str
}

// App_kill_Results_Promise is a wrapper for a App_kill_Results promised by a client call.
type App_kill_Results_Promise struct{ *capnp.Pipeline }

func (p App_kill_Results_Promise) Struct() (App_kill_Results, error) {
	s, err := p.Pipeline.Struct()
	return App_kill_Results{s}, err
}

type App_runtime_Params struct{ capnp.Struct }

// App_runtime_Params_TypeID is the unique identifier for the type App_runtime_Params.
const App_runtime_Params_TypeID = 0xad48fb996c416d96

func NewApp_runtime_Params(s *capnp.Segment) (App_runtime_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return App_runtime_Params{st}, err
}

func NewRootApp_runtime_Params(s *capnp.Segment) (App_runtime_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return App_runtime_Params{st}, err
}

func ReadRootApp_runtime_Params(msg *capnp.Message) (App_runtime_Params, error) {
	root, err := msg.RootPtr()
	return App_runtime_Params{root.Struct()}, err
}

func (s App_runtime_Params) String() string {
	str, _ := text.Marshal(0xad48fb996c416d96, s.Struct)
	return str
}

// App_runtime_Params_List is a list of App_runtime_Params.
type App_runtime_Params_List struct{ capnp.List }

// NewApp_runtime_Params creates a new list of App_runtime_Params.
func NewApp_runtime_Params_List(s *capnp.Segment, sz int32) (App_runtime_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return App_runtime_Params_List{l}, err
}

func (s App_runtime_Params_List) At(i int) App_runtime_Params {
	return App_runtime_Params{s.List.Struct(i)}
}

func (s App_runtime_Params_List) Set(i int, v App_runtime_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s App_runtime_Params_List) String() string {
	str, _ := text.MarshalList(0xad48fb996c416d96, s.List)
	return str
}

// App_runtime_Params_Promise is a wrapper for a App_runtime_Params promised by a client call.
type App_runtime_Params_Promise struct{ *capnp.Pipeline }

func (p App_runtime_Params_Promise) Struct() (App_runtime_Params, error) {
	s, err := p.Pipeline.Struct()
	return App_runtime_Params{s}, err
}

type App_runtime_Results struct{ capnp.Struct }

// App_runtime_Results_TypeID is the unique identifier for the type App_runtime_Results.
const App_runtime_Results_TypeID = 0xed7c7bac1db2cb02

func NewApp_runtime_Results(s *capnp.Segment) (App_runtime_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return App_runtime_Results{st}, err
}

func NewRootApp_runtime_Results(s *capnp.Segment) (App_runtime_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return App_runtime_Results{st}, err
}

func ReadRootApp_runtime_Results(msg *capnp.Message) (App_runtime_Results, error) {
	root, err := msg.RootPtr()
	return App_runtime_Results{root.Struct()}, err
}

func (s App_runtime_Results) String() string {
	str, _ := text.Marshal(0xed7c7bac1db2cb02, s.Struct)
	return str
}

func (s App_runtime_Results) Runtime() Runtime {
	p, _ := s.Struct.Ptr(0)
	return Runtime{Client: p.Interface().Client()}
}

func (s App_runtime_Results) HasRuntime() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s App_runtime_Results) SetRuntime(v Runtime) error {
	if v.Client == nil {
		return s.Struct.SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(0, in.ToPtr())
}

// App_runtime_Results_List is a list of App_runtime_Results.
type App_runtime_Results_List struct{ capnp.List }

// NewApp_runtime_Results creates a new list of App_runtime_Results.
func NewApp_runtime_Results_List(s *capnp.Segment, sz int32) (App_runtime_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return App_runtime_Results_List{l}, err
}

func (s App_runtime_Results_List) At(i int) App_runtime_Results {
	return App_runtime_Results{s.List.Struct(i)}
}

func (s App_runtime_Results_List) Set(i int, v App_runtime_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s App_runtime_Results_List) String() string {
	str, _ := text.MarshalList(0xed7c7bac1db2cb02, s.List)
	return str
}

// App_runtime_Results_Promise is a wrapper for a App_runtime_Results promised by a client call.
type App_runtime_Results_Promise struct{ *capnp.Pipeline }

func (p App_runtime_Results_Promise) Struct() (App_runtime_Results, error) {
	s, err := p.Pipeline.Struct()
	return App_runtime_Results{s}, err
}

func (p App_runtime_Results_Promise) Runtime() Runtime {
	return Runtime{Client: p.Pipeline.GetPipeline(0).Client()}
}

type App_configs_Params struct{ capnp.Struct }

// App_configs_Params_TypeID is the unique identifier for the type App_configs_Params.
const App_configs_Params_TypeID = 0xe71357943f476e93

func NewApp_configs_Params(s *capnp.Segment) (App_configs_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return App_configs_Params{st}, err
}

func NewRootApp_configs_Params(s *capnp.Segment) (App_configs_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return App_configs_Params{st}, err
}

func ReadRootApp_configs_Params(msg *capnp.Message) (App_configs_Params, error) {
	root, err := msg.RootPtr()
	return App_configs_Params{root.Struct()}, err
}

func (s App_configs_Params) String() string {
	str, _ := text.Marshal(0xe71357943f476e93, s.Struct)
	return str
}

// App_configs_Params_List is a list of App_configs_Params.
type App_configs_Params_List struct{ capnp.List }

// NewApp_configs_Params creates a new list of App_configs_Params.
func NewApp_configs_Params_List(s *capnp.Segment, sz int32) (App_configs_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return App_configs_Params_List{l}, err
}

func (s App_configs_Params_List) At(i int) App_configs_Params {
	return App_configs_Params{s.List.Struct(i)}
}

func (s App_configs_Params_List) Set(i int, v App_configs_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s App_configs_Params_List) String() string {
	str, _ := text.MarshalList(0xe71357943f476e93, s.List)
	return str
}

// App_configs_Params_Promise is a wrapper for a App_configs_Params promised by a client call.
type App_configs_Params_Promise struct{ *capnp.Pipeline }

func (p App_configs_Params_Promise) Struct() (App_configs_Params, error) {
	s, err := p.Pipeline.Struct()
	return App_configs_Params{s}, err
}

type App_configs_Results struct{ capnp.Struct }

// App_configs_Results_TypeID is the unique identifier for the type App_configs_Results.
const App_configs_Results_TypeID = 0xbf7aa2f9f4573915

func NewApp_configs_Results(s *capnp.Segment) (App_configs_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return App_configs_Results{st}, err
}

func NewRootApp_configs_Results(s *capnp.Segment) (App_configs_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return App_configs_Results{st}, err
}

func ReadRootApp_configs_Results(msg *capnp.Message) (App_configs_Results, error) {
	root, err := msg.RootPtr()
	return App_configs_Results{root.Struct()}, err
}

func (s App_configs_Results) String() string {
	str, _ := text.Marshal(0xbf7aa2f9f4573915, s.Struct)
	return str
}

func (s App_configs_Results) Configs() Configs {
	p, _ := s.Struct.Ptr(0)
	return Configs{Client: p.Interface().Client()}
}

func (s App_configs_Results) HasConfigs() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s App_configs_Results) SetConfigs(v Configs) error {
	if v.Client == nil {
		return s.Struct.SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(0, in.ToPtr())
}

// App_configs_Results_List is a list of App_configs_Results.
type App_configs_Results_List struct{ capnp.List }

// NewApp_configs_Results creates a new list of App_configs_Results.
func NewApp_configs_Results_List(s *capnp.Segment, sz int32) (App_configs_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return App_configs_Results_List{l}, err
}

func (s App_configs_Results_List) At(i int) App_configs_Results {
	return App_configs_Results{s.List.Struct(i)}
}

func (s App_configs_Results_List) Set(i int, v App_configs_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s App_configs_Results_List) String() string {
	str, _ := text.MarshalList(0xbf7aa2f9f4573915, s.List)
	return str
}

// App_configs_Results_Promise is a wrapper for a App_configs_Results promised by a client call.
type App_configs_Results_Promise struct{ *capnp.Pipeline }

func (p App_configs_Results_Promise) Struct() (App_configs_Results, error) {
	s, err := p.Pipeline.Struct()
	return App_configs_Results{s}, err
}

func (p App_configs_Results_Promise) Configs() Configs {
	return Configs{Client: p.Pipeline.GetPipeline(0).Client()}
}

type Service struct{ Client capnp.Client }

// Service_TypeID is the unique identifier for the type Service.
const Service_TypeID = 0xb25b411cec149334

func (c Service) Id(ctx context.Context, params func(Service_id_Params) error, opts ...capnp.CallOption) Service_id_Results_Promise {
	if c.Client == nil {
		return Service_id_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xb25b411cec149334,
			MethodID:      0,
			InterfaceName: "app.capnp:Service",
			MethodName:    "id",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Service_id_Params{Struct: s}) }
	}
	return Service_id_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Service) LogLevel(ctx context.Context, params func(Service_logLevel_Params) error, opts ...capnp.CallOption) Service_logLevel_Results_Promise {
	if c.Client == nil {
		return Service_logLevel_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xb25b411cec149334,
			MethodID:      1,
			InterfaceName: "app.capnp:Service",
			MethodName:    "logLevel",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Service_logLevel_Params{Struct: s}) }
	}
	return Service_logLevel_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Service) Alive(ctx context.Context, params func(Service_alive_Params) error, opts ...capnp.CallOption) Service_alive_Results_Promise {
	if c.Client == nil {
		return Service_alive_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xb25b411cec149334,
			MethodID:      2,
			InterfaceName: "app.capnp:Service",
			MethodName:    "alive",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Service_alive_Params{Struct: s}) }
	}
	return Service_alive_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}

type Service_Server interface {
	Id(Service_id) error

	LogLevel(Service_logLevel) error

	Alive(Service_alive) error
}

func Service_ServerToClient(s Service_Server) Service {
	c, _ := s.(server.Closer)
	return Service{Client: server.New(Service_Methods(nil, s), c)}
}

func Service_Methods(methods []server.Method, s Service_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 3)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xb25b411cec149334,
			MethodID:      0,
			InterfaceName: "app.capnp:Service",
			MethodName:    "id",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Service_id{c, opts, Service_id_Params{Struct: p}, Service_id_Results{Struct: r}}
			return s.Id(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xb25b411cec149334,
			MethodID:      1,
			InterfaceName: "app.capnp:Service",
			MethodName:    "logLevel",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Service_logLevel{c, opts, Service_logLevel_Params{Struct: p}, Service_logLevel_Results{Struct: r}}
			return s.LogLevel(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xb25b411cec149334,
			MethodID:      2,
			InterfaceName: "app.capnp:Service",
			MethodName:    "alive",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Service_alive{c, opts, Service_alive_Params{Struct: p}, Service_alive_Results{Struct: r}}
			return s.Alive(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	return methods
}

// Service_id holds the arguments for a server call to Service.id.
type Service_id struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Service_id_Params
	Results Service_id_Results
}

// Service_logLevel holds the arguments for a server call to Service.logLevel.
type Service_logLevel struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Service_logLevel_Params
	Results Service_logLevel_Results
}

// Service_alive holds the arguments for a server call to Service.alive.
type Service_alive struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Service_alive_Params
	Results Service_alive_Results
}

type Service_id_Params struct{ capnp.Struct }

// Service_id_Params_TypeID is the unique identifier for the type Service_id_Params.
const Service_id_Params_TypeID = 0x965465bd75220f94

func NewService_id_Params(s *capnp.Segment) (Service_id_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Service_id_Params{st}, err
}

func NewRootService_id_Params(s *capnp.Segment) (Service_id_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Service_id_Params{st}, err
}

func ReadRootService_id_Params(msg *capnp.Message) (Service_id_Params, error) {
	root, err := msg.RootPtr()
	return Service_id_Params{root.Struct()}, err
}

func (s Service_id_Params) String() string {
	str, _ := text.Marshal(0x965465bd75220f94, s.Struct)
	return str
}

// Service_id_Params_List is a list of Service_id_Params.
type Service_id_Params_List struct{ capnp.List }

// NewService_id_Params creates a new list of Service_id_Params.
func NewService_id_Params_List(s *capnp.Segment, sz int32) (Service_id_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Service_id_Params_List{l}, err
}

func (s Service_id_Params_List) At(i int) Service_id_Params {
	return Service_id_Params{s.List.Struct(i)}
}

func (s Service_id_Params_List) Set(i int, v Service_id_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Service_id_Params_List) String() string {
	str, _ := text.MarshalList(0x965465bd75220f94, s.List)
	return str
}

// Service_id_Params_Promise is a wrapper for a Service_id_Params promised by a client call.
type Service_id_Params_Promise struct{ *capnp.Pipeline }

func (p Service_id_Params_Promise) Struct() (Service_id_Params, error) {
	s, err := p.Pipeline.Struct()
	return Service_id_Params{s}, err
}

type Service_id_Results struct{ capnp.Struct }

// Service_id_Results_TypeID is the unique identifier for the type Service_id_Results.
const Service_id_Results_TypeID = 0xccdde1728f71e904

func NewService_id_Results(s *capnp.Segment) (Service_id_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Service_id_Results{st}, err
}

func NewRootService_id_Results(s *capnp.Segment) (Service_id_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Service_id_Results{st}, err
}

func ReadRootService_id_Results(msg *capnp.Message) (Service_id_Results, error) {
	root, err := msg.RootPtr()
	return Service_id_Results{root.Struct()}, err
}

func (s Service_id_Results) String() string {
	str, _ := text.Marshal(0xccdde1728f71e904, s.Struct)
	return str
}

func (s Service_id_Results) ServiceId() uint64 {
	return s.Struct.Uint64(0)
}

func (s Service_id_Results) SetServiceId(v uint64) {
	s.Struct.SetUint64(0, v)
}

// Service_id_Results_List is a list of Service_id_Results.
type Service_id_Results_List struct{ capnp.List }

// NewService_id_Results creates a new list of Service_id_Results.
func NewService_id_Results_List(s *capnp.Segment, sz int32) (Service_id_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return Service_id_Results_List{l}, err
}

func (s Service_id_Results_List) At(i int) Service_id_Results {
	return Service_id_Results{s.List.Struct(i)}
}

func (s Service_id_Results_List) Set(i int, v Service_id_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Service_id_Results_List) String() string {
	str, _ := text.MarshalList(0xccdde1728f71e904, s.List)
	return str
}

// Service_id_Results_Promise is a wrapper for a Service_id_Results promised by a client call.
type Service_id_Results_Promise struct{ *capnp.Pipeline }

func (p Service_id_Results_Promise) Struct() (Service_id_Results, error) {
	s, err := p.Pipeline.Struct()
	return Service_id_Results{s}, err
}

type Service_logLevel_Params struct{ capnp.Struct }

// Service_logLevel_Params_TypeID is the unique identifier for the type Service_logLevel_Params.
const Service_logLevel_Params_TypeID = 0xa6b9c11c2aac9785

func NewService_logLevel_Params(s *capnp.Segment) (Service_logLevel_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Service_logLevel_Params{st}, err
}

func NewRootService_logLevel_Params(s *capnp.Segment) (Service_logLevel_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Service_logLevel_Params{st}, err
}

func ReadRootService_logLevel_Params(msg *capnp.Message) (Service_logLevel_Params, error) {
	root, err := msg.RootPtr()
	return Service_logLevel_Params{root.Struct()}, err
}

func (s Service_logLevel_Params) String() string {
	str, _ := text.Marshal(0xa6b9c11c2aac9785, s.Struct)
	return str
}

// Service_logLevel_Params_List is a list of Service_logLevel_Params.
type Service_logLevel_Params_List struct{ capnp.List }

// NewService_logLevel_Params creates a new list of Service_logLevel_Params.
func NewService_logLevel_Params_List(s *capnp.Segment, sz int32) (Service_logLevel_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Service_logLevel_Params_List{l}, err
}

func (s Service_logLevel_Params_List) At(i int) Service_logLevel_Params {
	return Service_logLevel_Params{s.List.Struct(i)}
}

func (s Service_logLevel_Params_List) Set(i int, v Service_logLevel_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Service_logLevel_Params_List) String() string {
	str, _ := text.MarshalList(0xa6b9c11c2aac9785, s.List)
	return str
}

// Service_logLevel_Params_Promise is a wrapper for a Service_logLevel_Params promised by a client call.
type Service_logLevel_Params_Promise struct{ *capnp.Pipeline }

func (p Service_logLevel_Params_Promise) Struct() (Service_logLevel_Params, error) {
	s, err := p.Pipeline.Struct()
	return Service_logLevel_Params{s}, err
}

type Service_logLevel_Results struct{ capnp.Struct }

// Service_logLevel_Results_TypeID is the unique identifier for the type Service_logLevel_Results.
const Service_logLevel_Results_TypeID = 0x9285c4944dfb709f

func NewService_logLevel_Results(s *capnp.Segment) (Service_logLevel_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Service_logLevel_Results{st}, err
}

func NewRootService_logLevel_Results(s *capnp.Segment) (Service_logLevel_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Service_logLevel_Results{st}, err
}

func ReadRootService_logLevel_Results(msg *capnp.Message) (Service_logLevel_Results, error) {
	root, err := msg.RootPtr()
	return Service_logLevel_Results{root.Struct()}, err
}

func (s Service_logLevel_Results) String() string {
	str, _ := text.Marshal(0x9285c4944dfb709f, s.Struct)
	return str
}

func (s Service_logLevel_Results) Level() LogLevel {
	return LogLevel(s.Struct.Uint16(0))
}

func (s Service_logLevel_Results) SetLevel(v LogLevel) {
	s.Struct.SetUint16(0, uint16(v))
}

// Service_logLevel_Results_List is a list of Service_logLevel_Results.
type Service_logLevel_Results_List struct{ capnp.List }

// NewService_logLevel_Results creates a new list of Service_logLevel_Results.
func NewService_logLevel_Results_List(s *capnp.Segment, sz int32) (Service_logLevel_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return Service_logLevel_Results_List{l}, err
}

func (s Service_logLevel_Results_List) At(i int) Service_logLevel_Results {
	return Service_logLevel_Results{s.List.Struct(i)}
}

func (s Service_logLevel_Results_List) Set(i int, v Service_logLevel_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Service_logLevel_Results_List) String() string {
	str, _ := text.MarshalList(0x9285c4944dfb709f, s.List)
	return str
}

// Service_logLevel_Results_Promise is a wrapper for a Service_logLevel_Results promised by a client call.
type Service_logLevel_Results_Promise struct{ *capnp.Pipeline }

func (p Service_logLevel_Results_Promise) Struct() (Service_logLevel_Results, error) {
	s, err := p.Pipeline.Struct()
	return Service_logLevel_Results{s}, err
}

type Service_alive_Params struct{ capnp.Struct }

// Service_alive_Params_TypeID is the unique identifier for the type Service_alive_Params.
const Service_alive_Params_TypeID = 0x91dfcb778d8d16c0

func NewService_alive_Params(s *capnp.Segment) (Service_alive_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Service_alive_Params{st}, err
}

func NewRootService_alive_Params(s *capnp.Segment) (Service_alive_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Service_alive_Params{st}, err
}

func ReadRootService_alive_Params(msg *capnp.Message) (Service_alive_Params, error) {
	root, err := msg.RootPtr()
	return Service_alive_Params{root.Struct()}, err
}

func (s Service_alive_Params) String() string {
	str, _ := text.Marshal(0x91dfcb778d8d16c0, s.Struct)
	return str
}

// Service_alive_Params_List is a list of Service_alive_Params.
type Service_alive_Params_List struct{ capnp.List }

// NewService_alive_Params creates a new list of Service_alive_Params.
func NewService_alive_Params_List(s *capnp.Segment, sz int32) (Service_alive_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Service_alive_Params_List{l}, err
}

func (s Service_alive_Params_List) At(i int) Service_alive_Params {
	return Service_alive_Params{s.List.Struct(i)}
}

func (s Service_alive_Params_List) Set(i int, v Service_alive_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Service_alive_Params_List) String() string {
	str, _ := text.MarshalList(0x91dfcb778d8d16c0, s.List)
	return str
}

// Service_alive_Params_Promise is a wrapper for a Service_alive_Params promised by a client call.
type Service_alive_Params_Promise struct{ *capnp.Pipeline }

func (p Service_alive_Params_Promise) Struct() (Service_alive_Params, error) {
	s, err := p.Pipeline.Struct()
	return Service_alive_Params{s}, err
}

type Service_alive_Results struct{ capnp.Struct }

// Service_alive_Results_TypeID is the unique identifier for the type Service_alive_Results.
const Service_alive_Results_TypeID = 0xe542d95b68592c1c

func NewService_alive_Results(s *capnp.Segment) (Service_alive_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Service_alive_Results{st}, err
}

func NewRootService_alive_Results(s *capnp.Segment) (Service_alive_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Service_alive_Results{st}, err
}

func ReadRootService_alive_Results(msg *capnp.Message) (Service_alive_Results, error) {
	root, err := msg.RootPtr()
	return Service_alive_Results{root.Struct()}, err
}

func (s Service_alive_Results) String() string {
	str, _ := text.Marshal(0xe542d95b68592c1c, s.Struct)
	return str
}

func (s Service_alive_Results) Alive() bool {
	return s.Struct.Bit(0)
}

func (s Service_alive_Results) SetAlive(v bool) {
	s.Struct.SetBit(0, v)
}

// Service_alive_Results_List is a list of Service_alive_Results.
type Service_alive_Results_List struct{ capnp.List }

// NewService_alive_Results creates a new list of Service_alive_Results.
func NewService_alive_Results_List(s *capnp.Segment, sz int32) (Service_alive_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return Service_alive_Results_List{l}, err
}

func (s Service_alive_Results_List) At(i int) Service_alive_Results {
	return Service_alive_Results{s.List.Struct(i)}
}

func (s Service_alive_Results_List) Set(i int, v Service_alive_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Service_alive_Results_List) String() string {
	str, _ := text.MarshalList(0xe542d95b68592c1c, s.List)
	return str
}

// Service_alive_Results_Promise is a wrapper for a Service_alive_Results promised by a client call.
type Service_alive_Results_Promise struct{ *capnp.Pipeline }

func (p Service_alive_Results_Promise) Struct() (Service_alive_Results, error) {
	s, err := p.Pipeline.Struct()
	return Service_alive_Results{s}, err
}

type RPCService struct{ Client capnp.Client }

// RPCService_TypeID is the unique identifier for the type RPCService.
const RPCService_TypeID = 0xa7e3c40f8e5ecb74

func (c RPCService) Id(ctx context.Context, params func(RPCService_id_Params) error, opts ...capnp.CallOption) RPCService_id_Results_Promise {
	if c.Client == nil {
		return RPCService_id_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa7e3c40f8e5ecb74,
			MethodID:      0,
			InterfaceName: "app.capnp:RPCService",
			MethodName:    "id",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(RPCService_id_Params{Struct: s}) }
	}
	return RPCService_id_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c RPCService) ListenerAlive(ctx context.Context, params func(RPCService_listenerAlive_Params) error, opts ...capnp.CallOption) RPCService_listenerAlive_Results_Promise {
	if c.Client == nil {
		return RPCService_listenerAlive_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa7e3c40f8e5ecb74,
			MethodID:      1,
			InterfaceName: "app.capnp:RPCService",
			MethodName:    "listenerAlive",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(RPCService_listenerAlive_Params{Struct: s}) }
	}
	return RPCService_listenerAlive_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c RPCService) ListenerAddress(ctx context.Context, params func(RPCService_listenerAddress_Params) error, opts ...capnp.CallOption) RPCService_listenerAddress_Results_Promise {
	if c.Client == nil {
		return RPCService_listenerAddress_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa7e3c40f8e5ecb74,
			MethodID:      2,
			InterfaceName: "app.capnp:RPCService",
			MethodName:    "listenerAddress",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(RPCService_listenerAddress_Params{Struct: s}) }
	}
	return RPCService_listenerAddress_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c RPCService) ActiveConns(ctx context.Context, params func(RPCService_activeConns_Params) error, opts ...capnp.CallOption) RPCService_activeConns_Results_Promise {
	if c.Client == nil {
		return RPCService_activeConns_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa7e3c40f8e5ecb74,
			MethodID:      3,
			InterfaceName: "app.capnp:RPCService",
			MethodName:    "activeConns",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(RPCService_activeConns_Params{Struct: s}) }
	}
	return RPCService_activeConns_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c RPCService) MaxConns(ctx context.Context, params func(RPCService_maxConns_Params) error, opts ...capnp.CallOption) RPCService_maxConns_Results_Promise {
	if c.Client == nil {
		return RPCService_maxConns_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa7e3c40f8e5ecb74,
			MethodID:      4,
			InterfaceName: "app.capnp:RPCService",
			MethodName:    "maxConns",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(RPCService_maxConns_Params{Struct: s}) }
	}
	return RPCService_maxConns_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}

type RPCService_Server interface {
	Id(RPCService_id) error

	ListenerAlive(RPCService_listenerAlive) error

	ListenerAddress(RPCService_listenerAddress) error

	ActiveConns(RPCService_activeConns) error

	MaxConns(RPCService_maxConns) error
}

func RPCService_ServerToClient(s RPCService_Server) RPCService {
	c, _ := s.(server.Closer)
	return RPCService{Client: server.New(RPCService_Methods(nil, s), c)}
}

func RPCService_Methods(methods []server.Method, s RPCService_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 5)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa7e3c40f8e5ecb74,
			MethodID:      0,
			InterfaceName: "app.capnp:RPCService",
			MethodName:    "id",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := RPCService_id{c, opts, RPCService_id_Params{Struct: p}, RPCService_id_Results{Struct: r}}
			return s.Id(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa7e3c40f8e5ecb74,
			MethodID:      1,
			InterfaceName: "app.capnp:RPCService",
			MethodName:    "listenerAlive",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := RPCService_listenerAlive{c, opts, RPCService_listenerAlive_Params{Struct: p}, RPCService_listenerAlive_Results{Struct: r}}
			return s.ListenerAlive(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa7e3c40f8e5ecb74,
			MethodID:      2,
			InterfaceName: "app.capnp:RPCService",
			MethodName:    "listenerAddress",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := RPCService_listenerAddress{c, opts, RPCService_listenerAddress_Params{Struct: p}, RPCService_listenerAddress_Results{Struct: r}}
			return s.ListenerAddress(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa7e3c40f8e5ecb74,
			MethodID:      3,
			InterfaceName: "app.capnp:RPCService",
			MethodName:    "activeConns",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := RPCService_activeConns{c, opts, RPCService_activeConns_Params{Struct: p}, RPCService_activeConns_Results{Struct: r}}
			return s.ActiveConns(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa7e3c40f8e5ecb74,
			MethodID:      4,
			InterfaceName: "app.capnp:RPCService",
			MethodName:    "maxConns",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := RPCService_maxConns{c, opts, RPCService_maxConns_Params{Struct: p}, RPCService_maxConns_Results{Struct: r}}
			return s.MaxConns(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	return methods
}

// RPCService_id holds the arguments for a server call to RPCService.id.
type RPCService_id struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  RPCService_id_Params
	Results RPCService_id_Results
}

// RPCService_listenerAlive holds the arguments for a server call to RPCService.listenerAlive.
type RPCService_listenerAlive struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  RPCService_listenerAlive_Params
	Results RPCService_listenerAlive_Results
}

// RPCService_listenerAddress holds the arguments for a server call to RPCService.listenerAddress.
type RPCService_listenerAddress struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  RPCService_listenerAddress_Params
	Results RPCService_listenerAddress_Results
}

// RPCService_activeConns holds the arguments for a server call to RPCService.activeConns.
type RPCService_activeConns struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  RPCService_activeConns_Params
	Results RPCService_activeConns_Results
}

// RPCService_maxConns holds the arguments for a server call to RPCService.maxConns.
type RPCService_maxConns struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  RPCService_maxConns_Params
	Results RPCService_maxConns_Results
}

type RPCService_id_Params struct{ capnp.Struct }

// RPCService_id_Params_TypeID is the unique identifier for the type RPCService_id_Params.
const RPCService_id_Params_TypeID = 0x88e166675c857e18

func NewRPCService_id_Params(s *capnp.Segment) (RPCService_id_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return RPCService_id_Params{st}, err
}

func NewRootRPCService_id_Params(s *capnp.Segment) (RPCService_id_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return RPCService_id_Params{st}, err
}

func ReadRootRPCService_id_Params(msg *capnp.Message) (RPCService_id_Params, error) {
	root, err := msg.RootPtr()
	return RPCService_id_Params{root.Struct()}, err
}

func (s RPCService_id_Params) String() string {
	str, _ := text.Marshal(0x88e166675c857e18, s.Struct)
	return str
}

// RPCService_id_Params_List is a list of RPCService_id_Params.
type RPCService_id_Params_List struct{ capnp.List }

// NewRPCService_id_Params creates a new list of RPCService_id_Params.
func NewRPCService_id_Params_List(s *capnp.Segment, sz int32) (RPCService_id_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return RPCService_id_Params_List{l}, err
}

func (s RPCService_id_Params_List) At(i int) RPCService_id_Params {
	return RPCService_id_Params{s.List.Struct(i)}
}

func (s RPCService_id_Params_List) Set(i int, v RPCService_id_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s RPCService_id_Params_List) String() string {
	str, _ := text.MarshalList(0x88e166675c857e18, s.List)
	return str
}

// RPCService_id_Params_Promise is a wrapper for a RPCService_id_Params promised by a client call.
type RPCService_id_Params_Promise struct{ *capnp.Pipeline }

func (p RPCService_id_Params_Promise) Struct() (RPCService_id_Params, error) {
	s, err := p.Pipeline.Struct()
	return RPCService_id_Params{s}, err
}

type RPCService_id_Results struct{ capnp.Struct }

// RPCService_id_Results_TypeID is the unique identifier for the type RPCService_id_Results.
const RPCService_id_Results_TypeID = 0xc21e37cdb9df069e

func NewRPCService_id_Results(s *capnp.Segment) (RPCService_id_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return RPCService_id_Results{st}, err
}

func NewRootRPCService_id_Results(s *capnp.Segment) (RPCService_id_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return RPCService_id_Results{st}, err
}

func ReadRootRPCService_id_Results(msg *capnp.Message) (RPCService_id_Results, error) {
	root, err := msg.RootPtr()
	return RPCService_id_Results{root.Struct()}, err
}

func (s RPCService_id_Results) String() string {
	str, _ := text.Marshal(0xc21e37cdb9df069e, s.Struct)
	return str
}

func (s RPCService_id_Results) ServiceId() uint64 {
	return s.Struct.Uint64(0)
}

func (s RPCService_id_Results) SetServiceId(v uint64) {
	s.Struct.SetUint64(0, v)
}

// RPCService_id_Results_List is a list of RPCService_id_Results.
type RPCService_id_Results_List struct{ capnp.List }

// NewRPCService_id_Results creates a new list of RPCService_id_Results.
func NewRPCService_id_Results_List(s *capnp.Segment, sz int32) (RPCService_id_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return RPCService_id_Results_List{l}, err
}

func (s RPCService_id_Results_List) At(i int) RPCService_id_Results {
	return RPCService_id_Results{s.List.Struct(i)}
}

func (s RPCService_id_Results_List) Set(i int, v RPCService_id_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s RPCService_id_Results_List) String() string {
	str, _ := text.MarshalList(0xc21e37cdb9df069e, s.List)
	return str
}

// RPCService_id_Results_Promise is a wrapper for a RPCService_id_Results promised by a client call.
type RPCService_id_Results_Promise struct{ *capnp.Pipeline }

func (p RPCService_id_Results_Promise) Struct() (RPCService_id_Results, error) {
	s, err := p.Pipeline.Struct()
	return RPCService_id_Results{s}, err
}

type RPCService_listenerAlive_Params struct{ capnp.Struct }

// RPCService_listenerAlive_Params_TypeID is the unique identifier for the type RPCService_listenerAlive_Params.
const RPCService_listenerAlive_Params_TypeID = 0xc7fcacbb7e6c5bb0

func NewRPCService_listenerAlive_Params(s *capnp.Segment) (RPCService_listenerAlive_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return RPCService_listenerAlive_Params{st}, err
}

func NewRootRPCService_listenerAlive_Params(s *capnp.Segment) (RPCService_listenerAlive_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return RPCService_listenerAlive_Params{st}, err
}

func ReadRootRPCService_listenerAlive_Params(msg *capnp.Message) (RPCService_listenerAlive_Params, error) {
	root, err := msg.RootPtr()
	return RPCService_listenerAlive_Params{root.Struct()}, err
}

func (s RPCService_listenerAlive_Params) String() string {
	str, _ := text.Marshal(0xc7fcacbb7e6c5bb0, s.Struct)
	return str
}

// RPCService_listenerAlive_Params_List is a list of RPCService_listenerAlive_Params.
type RPCService_listenerAlive_Params_List struct{ capnp.List }

// NewRPCService_listenerAlive_Params creates a new list of RPCService_listenerAlive_Params.
func NewRPCService_listenerAlive_Params_List(s *capnp.Segment, sz int32) (RPCService_listenerAlive_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return RPCService_listenerAlive_Params_List{l}, err
}

func (s RPCService_listenerAlive_Params_List) At(i int) RPCService_listenerAlive_Params {
	return RPCService_listenerAlive_Params{s.List.Struct(i)}
}

func (s RPCService_listenerAlive_Params_List) Set(i int, v RPCService_listenerAlive_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s RPCService_listenerAlive_Params_List) String() string {
	str, _ := text.MarshalList(0xc7fcacbb7e6c5bb0, s.List)
	return str
}

// RPCService_listenerAlive_Params_Promise is a wrapper for a RPCService_listenerAlive_Params promised by a client call.
type RPCService_listenerAlive_Params_Promise struct{ *capnp.Pipeline }

func (p RPCService_listenerAlive_Params_Promise) Struct() (RPCService_listenerAlive_Params, error) {
	s, err := p.Pipeline.Struct()
	return RPCService_listenerAlive_Params{s}, err
}

type RPCService_listenerAlive_Results struct{ capnp.Struct }

// RPCService_listenerAlive_Results_TypeID is the unique identifier for the type RPCService_listenerAlive_Results.
const RPCService_listenerAlive_Results_TypeID = 0xa76b7607195dee3a

func NewRPCService_listenerAlive_Results(s *capnp.Segment) (RPCService_listenerAlive_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return RPCService_listenerAlive_Results{st}, err
}

func NewRootRPCService_listenerAlive_Results(s *capnp.Segment) (RPCService_listenerAlive_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return RPCService_listenerAlive_Results{st}, err
}

func ReadRootRPCService_listenerAlive_Results(msg *capnp.Message) (RPCService_listenerAlive_Results, error) {
	root, err := msg.RootPtr()
	return RPCService_listenerAlive_Results{root.Struct()}, err
}

func (s RPCService_listenerAlive_Results) String() string {
	str, _ := text.Marshal(0xa76b7607195dee3a, s.Struct)
	return str
}

func (s RPCService_listenerAlive_Results) ListenerAlive() bool {
	return s.Struct.Bit(0)
}

func (s RPCService_listenerAlive_Results) SetListenerAlive(v bool) {
	s.Struct.SetBit(0, v)
}

// RPCService_listenerAlive_Results_List is a list of RPCService_listenerAlive_Results.
type RPCService_listenerAlive_Results_List struct{ capnp.List }

// NewRPCService_listenerAlive_Results creates a new list of RPCService_listenerAlive_Results.
func NewRPCService_listenerAlive_Results_List(s *capnp.Segment, sz int32) (RPCService_listenerAlive_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return RPCService_listenerAlive_Results_List{l}, err
}

func (s RPCService_listenerAlive_Results_List) At(i int) RPCService_listenerAlive_Results {
	return RPCService_listenerAlive_Results{s.List.Struct(i)}
}

func (s RPCService_listenerAlive_Results_List) Set(i int, v RPCService_listenerAlive_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s RPCService_listenerAlive_Results_List) String() string {
	str, _ := text.MarshalList(0xa76b7607195dee3a, s.List)
	return str
}

// RPCService_listenerAlive_Results_Promise is a wrapper for a RPCService_listenerAlive_Results promised by a client call.
type RPCService_listenerAlive_Results_Promise struct{ *capnp.Pipeline }

func (p RPCService_listenerAlive_Results_Promise) Struct() (RPCService_listenerAlive_Results, error) {
	s, err := p.Pipeline.Struct()
	return RPCService_listenerAlive_Results{s}, err
}

type RPCService_listenerAddress_Params struct{ capnp.Struct }

// RPCService_listenerAddress_Params_TypeID is the unique identifier for the type RPCService_listenerAddress_Params.
const RPCService_listenerAddress_Params_TypeID = 0xdc063192b2b7a561

func NewRPCService_listenerAddress_Params(s *capnp.Segment) (RPCService_listenerAddress_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return RPCService_listenerAddress_Params{st}, err
}

func NewRootRPCService_listenerAddress_Params(s *capnp.Segment) (RPCService_listenerAddress_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return RPCService_listenerAddress_Params{st}, err
}

func ReadRootRPCService_listenerAddress_Params(msg *capnp.Message) (RPCService_listenerAddress_Params, error) {
	root, err := msg.RootPtr()
	return RPCService_listenerAddress_Params{root.Struct()}, err
}

func (s RPCService_listenerAddress_Params) String() string {
	str, _ := text.Marshal(0xdc063192b2b7a561, s.Struct)
	return str
}

// RPCService_listenerAddress_Params_List is a list of RPCService_listenerAddress_Params.
type RPCService_listenerAddress_Params_List struct{ capnp.List }

// NewRPCService_listenerAddress_Params creates a new list of RPCService_listenerAddress_Params.
func NewRPCService_listenerAddress_Params_List(s *capnp.Segment, sz int32) (RPCService_listenerAddress_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return RPCService_listenerAddress_Params_List{l}, err
}

func (s RPCService_listenerAddress_Params_List) At(i int) RPCService_listenerAddress_Params {
	return RPCService_listenerAddress_Params{s.List.Struct(i)}
}

func (s RPCService_listenerAddress_Params_List) Set(i int, v RPCService_listenerAddress_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s RPCService_listenerAddress_Params_List) String() string {
	str, _ := text.MarshalList(0xdc063192b2b7a561, s.List)
	return str
}

// RPCService_listenerAddress_Params_Promise is a wrapper for a RPCService_listenerAddress_Params promised by a client call.
type RPCService_listenerAddress_Params_Promise struct{ *capnp.Pipeline }

func (p RPCService_listenerAddress_Params_Promise) Struct() (RPCService_listenerAddress_Params, error) {
	s, err := p.Pipeline.Struct()
	return RPCService_listenerAddress_Params{s}, err
}

type RPCService_listenerAddress_Results struct{ capnp.Struct }

// RPCService_listenerAddress_Results_TypeID is the unique identifier for the type RPCService_listenerAddress_Results.
const RPCService_listenerAddress_Results_TypeID = 0xb95e72a43cd7c47c

func NewRPCService_listenerAddress_Results(s *capnp.Segment) (RPCService_listenerAddress_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return RPCService_listenerAddress_Results{st}, err
}

func NewRootRPCService_listenerAddress_Results(s *capnp.Segment) (RPCService_listenerAddress_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return RPCService_listenerAddress_Results{st}, err
}

func ReadRootRPCService_listenerAddress_Results(msg *capnp.Message) (RPCService_listenerAddress_Results, error) {
	root, err := msg.RootPtr()
	return RPCService_listenerAddress_Results{root.Struct()}, err
}

func (s RPCService_listenerAddress_Results) String() string {
	str, _ := text.Marshal(0xb95e72a43cd7c47c, s.Struct)
	return str
}

func (s RPCService_listenerAddress_Results) Address() (NetworkAddress, error) {
	p, err := s.Struct.Ptr(0)
	return NetworkAddress{Struct: p.Struct()}, err
}

func (s RPCService_listenerAddress_Results) HasAddress() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s RPCService_listenerAddress_Results) SetAddress(v NetworkAddress) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewAddress sets the address field to a newly
// allocated NetworkAddress struct, preferring placement in s's segment.
func (s RPCService_listenerAddress_Results) NewAddress() (NetworkAddress, error) {
	ss, err := NewNetworkAddress(s.Struct.Segment())
	if err != nil {
		return NetworkAddress{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// RPCService_listenerAddress_Results_List is a list of RPCService_listenerAddress_Results.
type RPCService_listenerAddress_Results_List struct{ capnp.List }

// NewRPCService_listenerAddress_Results creates a new list of RPCService_listenerAddress_Results.
func NewRPCService_listenerAddress_Results_List(s *capnp.Segment, sz int32) (RPCService_listenerAddress_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return RPCService_listenerAddress_Results_List{l}, err
}

func (s RPCService_listenerAddress_Results_List) At(i int) RPCService_listenerAddress_Results {
	return RPCService_listenerAddress_Results{s.List.Struct(i)}
}

func (s RPCService_listenerAddress_Results_List) Set(i int, v RPCService_listenerAddress_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s RPCService_listenerAddress_Results_List) String() string {
	str, _ := text.MarshalList(0xb95e72a43cd7c47c, s.List)
	return str
}

// RPCService_listenerAddress_Results_Promise is a wrapper for a RPCService_listenerAddress_Results promised by a client call.
type RPCService_listenerAddress_Results_Promise struct{ *capnp.Pipeline }

func (p RPCService_listenerAddress_Results_Promise) Struct() (RPCService_listenerAddress_Results, error) {
	s, err := p.Pipeline.Struct()
	return RPCService_listenerAddress_Results{s}, err
}

func (p RPCService_listenerAddress_Results_Promise) Address() NetworkAddress_Promise {
	return NetworkAddress_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type RPCService_activeConns_Params struct{ capnp.Struct }

// RPCService_activeConns_Params_TypeID is the unique identifier for the type RPCService_activeConns_Params.
const RPCService_activeConns_Params_TypeID = 0xf604c2f7eff9f3c7

func NewRPCService_activeConns_Params(s *capnp.Segment) (RPCService_activeConns_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return RPCService_activeConns_Params{st}, err
}

func NewRootRPCService_activeConns_Params(s *capnp.Segment) (RPCService_activeConns_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return RPCService_activeConns_Params{st}, err
}

func ReadRootRPCService_activeConns_Params(msg *capnp.Message) (RPCService_activeConns_Params, error) {
	root, err := msg.RootPtr()
	return RPCService_activeConns_Params{root.Struct()}, err
}

func (s RPCService_activeConns_Params) String() string {
	str, _ := text.Marshal(0xf604c2f7eff9f3c7, s.Struct)
	return str
}

// RPCService_activeConns_Params_List is a list of RPCService_activeConns_Params.
type RPCService_activeConns_Params_List struct{ capnp.List }

// NewRPCService_activeConns_Params creates a new list of RPCService_activeConns_Params.
func NewRPCService_activeConns_Params_List(s *capnp.Segment, sz int32) (RPCService_activeConns_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return RPCService_activeConns_Params_List{l}, err
}

func (s RPCService_activeConns_Params_List) At(i int) RPCService_activeConns_Params {
	return RPCService_activeConns_Params{s.List.Struct(i)}
}

func (s RPCService_activeConns_Params_List) Set(i int, v RPCService_activeConns_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s RPCService_activeConns_Params_List) String() string {
	str, _ := text.MarshalList(0xf604c2f7eff9f3c7, s.List)
	return str
}

// RPCService_activeConns_Params_Promise is a wrapper for a RPCService_activeConns_Params promised by a client call.
type RPCService_activeConns_Params_Promise struct{ *capnp.Pipeline }

func (p RPCService_activeConns_Params_Promise) Struct() (RPCService_activeConns_Params, error) {
	s, err := p.Pipeline.Struct()
	return RPCService_activeConns_Params{s}, err
}

type RPCService_activeConns_Results struct{ capnp.Struct }

// RPCService_activeConns_Results_TypeID is the unique identifier for the type RPCService_activeConns_Results.
const RPCService_activeConns_Results_TypeID = 0xf175231b9048f2c5

func NewRPCService_activeConns_Results(s *capnp.Segment) (RPCService_activeConns_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return RPCService_activeConns_Results{st}, err
}

func NewRootRPCService_activeConns_Results(s *capnp.Segment) (RPCService_activeConns_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return RPCService_activeConns_Results{st}, err
}

func ReadRootRPCService_activeConns_Results(msg *capnp.Message) (RPCService_activeConns_Results, error) {
	root, err := msg.RootPtr()
	return RPCService_activeConns_Results{root.Struct()}, err
}

func (s RPCService_activeConns_Results) String() string {
	str, _ := text.Marshal(0xf175231b9048f2c5, s.Struct)
	return str
}

func (s RPCService_activeConns_Results) Count() uint32 {
	return s.Struct.Uint32(0)
}

func (s RPCService_activeConns_Results) SetCount(v uint32) {
	s.Struct.SetUint32(0, v)
}

// RPCService_activeConns_Results_List is a list of RPCService_activeConns_Results.
type RPCService_activeConns_Results_List struct{ capnp.List }

// NewRPCService_activeConns_Results creates a new list of RPCService_activeConns_Results.
func NewRPCService_activeConns_Results_List(s *capnp.Segment, sz int32) (RPCService_activeConns_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return RPCService_activeConns_Results_List{l}, err
}

func (s RPCService_activeConns_Results_List) At(i int) RPCService_activeConns_Results {
	return RPCService_activeConns_Results{s.List.Struct(i)}
}

func (s RPCService_activeConns_Results_List) Set(i int, v RPCService_activeConns_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s RPCService_activeConns_Results_List) String() string {
	str, _ := text.MarshalList(0xf175231b9048f2c5, s.List)
	return str
}

// RPCService_activeConns_Results_Promise is a wrapper for a RPCService_activeConns_Results promised by a client call.
type RPCService_activeConns_Results_Promise struct{ *capnp.Pipeline }

func (p RPCService_activeConns_Results_Promise) Struct() (RPCService_activeConns_Results, error) {
	s, err := p.Pipeline.Struct()
	return RPCService_activeConns_Results{s}, err
}

type RPCService_maxConns_Params struct{ capnp.Struct }

// RPCService_maxConns_Params_TypeID is the unique identifier for the type RPCService_maxConns_Params.
const RPCService_maxConns_Params_TypeID = 0x8526d6d896c688e0

func NewRPCService_maxConns_Params(s *capnp.Segment) (RPCService_maxConns_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return RPCService_maxConns_Params{st}, err
}

func NewRootRPCService_maxConns_Params(s *capnp.Segment) (RPCService_maxConns_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return RPCService_maxConns_Params{st}, err
}

func ReadRootRPCService_maxConns_Params(msg *capnp.Message) (RPCService_maxConns_Params, error) {
	root, err := msg.RootPtr()
	return RPCService_maxConns_Params{root.Struct()}, err
}

func (s RPCService_maxConns_Params) String() string {
	str, _ := text.Marshal(0x8526d6d896c688e0, s.Struct)
	return str
}

// RPCService_maxConns_Params_List is a list of RPCService_maxConns_Params.
type RPCService_maxConns_Params_List struct{ capnp.List }

// NewRPCService_maxConns_Params creates a new list of RPCService_maxConns_Params.
func NewRPCService_maxConns_Params_List(s *capnp.Segment, sz int32) (RPCService_maxConns_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return RPCService_maxConns_Params_List{l}, err
}

func (s RPCService_maxConns_Params_List) At(i int) RPCService_maxConns_Params {
	return RPCService_maxConns_Params{s.List.Struct(i)}
}

func (s RPCService_maxConns_Params_List) Set(i int, v RPCService_maxConns_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s RPCService_maxConns_Params_List) String() string {
	str, _ := text.MarshalList(0x8526d6d896c688e0, s.List)
	return str
}

// RPCService_maxConns_Params_Promise is a wrapper for a RPCService_maxConns_Params promised by a client call.
type RPCService_maxConns_Params_Promise struct{ *capnp.Pipeline }

func (p RPCService_maxConns_Params_Promise) Struct() (RPCService_maxConns_Params, error) {
	s, err := p.Pipeline.Struct()
	return RPCService_maxConns_Params{s}, err
}

type RPCService_maxConns_Results struct{ capnp.Struct }

// RPCService_maxConns_Results_TypeID is the unique identifier for the type RPCService_maxConns_Results.
const RPCService_maxConns_Results_TypeID = 0xa23b4c1a964c722b

func NewRPCService_maxConns_Results(s *capnp.Segment) (RPCService_maxConns_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return RPCService_maxConns_Results{st}, err
}

func NewRootRPCService_maxConns_Results(s *capnp.Segment) (RPCService_maxConns_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return RPCService_maxConns_Results{st}, err
}

func ReadRootRPCService_maxConns_Results(msg *capnp.Message) (RPCService_maxConns_Results, error) {
	root, err := msg.RootPtr()
	return RPCService_maxConns_Results{root.Struct()}, err
}

func (s RPCService_maxConns_Results) String() string {
	str, _ := text.Marshal(0xa23b4c1a964c722b, s.Struct)
	return str
}

func (s RPCService_maxConns_Results) Count() uint32 {
	return s.Struct.Uint32(0)
}

func (s RPCService_maxConns_Results) SetCount(v uint32) {
	s.Struct.SetUint32(0, v)
}

// RPCService_maxConns_Results_List is a list of RPCService_maxConns_Results.
type RPCService_maxConns_Results_List struct{ capnp.List }

// NewRPCService_maxConns_Results creates a new list of RPCService_maxConns_Results.
func NewRPCService_maxConns_Results_List(s *capnp.Segment, sz int32) (RPCService_maxConns_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return RPCService_maxConns_Results_List{l}, err
}

func (s RPCService_maxConns_Results_List) At(i int) RPCService_maxConns_Results {
	return RPCService_maxConns_Results{s.List.Struct(i)}
}

func (s RPCService_maxConns_Results_List) Set(i int, v RPCService_maxConns_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s RPCService_maxConns_Results_List) String() string {
	str, _ := text.MarshalList(0xa23b4c1a964c722b, s.List)
	return str
}

// RPCService_maxConns_Results_Promise is a wrapper for a RPCService_maxConns_Results promised by a client call.
type RPCService_maxConns_Results_Promise struct{ *capnp.Pipeline }

func (p RPCService_maxConns_Results_Promise) Struct() (RPCService_maxConns_Results, error) {
	s, err := p.Pipeline.Struct()
	return RPCService_maxConns_Results{s}, err
}

type NetworkAddress struct{ capnp.Struct }

// NetworkAddress_TypeID is the unique identifier for the type NetworkAddress.
const NetworkAddress_TypeID = 0x9aae3a8502e6d5eb

func NewNetworkAddress(s *capnp.Segment) (NetworkAddress, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return NetworkAddress{st}, err
}

func NewRootNetworkAddress(s *capnp.Segment) (NetworkAddress, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return NetworkAddress{st}, err
}

func ReadRootNetworkAddress(msg *capnp.Message) (NetworkAddress, error) {
	root, err := msg.RootPtr()
	return NetworkAddress{root.Struct()}, err
}

func (s NetworkAddress) String() string {
	str, _ := text.Marshal(0x9aae3a8502e6d5eb, s.Struct)
	return str
}

func (s NetworkAddress) Network() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s NetworkAddress) HasNetwork() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s NetworkAddress) NetworkBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s NetworkAddress) SetNetwork(v string) error {
	return s.Struct.SetText(0, v)
}

func (s NetworkAddress) Address() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s NetworkAddress) HasAddress() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s NetworkAddress) AddressBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s NetworkAddress) SetAddress(v string) error {
	return s.Struct.SetText(1, v)
}

// NetworkAddress_List is a list of NetworkAddress.
type NetworkAddress_List struct{ capnp.List }

// NewNetworkAddress creates a new list of NetworkAddress.
func NewNetworkAddress_List(s *capnp.Segment, sz int32) (NetworkAddress_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return NetworkAddress_List{l}, err
}

func (s NetworkAddress_List) At(i int) NetworkAddress { return NetworkAddress{s.List.Struct(i)} }

func (s NetworkAddress_List) Set(i int, v NetworkAddress) error { return s.List.SetStruct(i, v.Struct) }

func (s NetworkAddress_List) String() string {
	str, _ := text.MarshalList(0x9aae3a8502e6d5eb, s.List)
	return str
}

// NetworkAddress_Promise is a wrapper for a NetworkAddress promised by a client call.
type NetworkAddress_Promise struct{ *capnp.Pipeline }

func (p NetworkAddress_Promise) Struct() (NetworkAddress, error) {
	s, err := p.Pipeline.Struct()
	return NetworkAddress{s}, err
}

type LogLevel uint16

// LogLevel_TypeID is the unique identifier for the type LogLevel.
const LogLevel_TypeID = 0xce802aa8977a9aee

// Values of LogLevel.
const (
	LogLevel_debug LogLevel = 0
	LogLevel_info  LogLevel = 1
	LogLevel_warn  LogLevel = 2
	LogLevel_error LogLevel = 3
)

// String returns the enum's constant name.
func (c LogLevel) String() string {
	switch c {
	case LogLevel_debug:
		return "debug"
	case LogLevel_info:
		return "info"
	case LogLevel_warn:
		return "warn"
	case LogLevel_error:
		return "error"

	default:
		return ""
	}
}

// LogLevelFromString returns the enum value with a name,
// or the zero value if there's no such value.
func LogLevelFromString(c string) LogLevel {
	switch c {
	case "debug":
		return LogLevel_debug
	case "info":
		return LogLevel_info
	case "warn":
		return LogLevel_warn
	case "error":
		return LogLevel_error

	default:
		return 0
	}
}

type LogLevel_List struct{ capnp.List }

func NewLogLevel_List(s *capnp.Segment, sz int32) (LogLevel_List, error) {
	l, err := capnp.NewUInt16List(s, sz)
	return LogLevel_List{l.List}, err
}

func (l LogLevel_List) At(i int) LogLevel {
	ul := capnp.UInt16List{List: l.List}
	return LogLevel(ul.At(i))
}

func (l LogLevel_List) Set(i int, v LogLevel) {
	ul := capnp.UInt16List{List: l.List}
	ul.Set(i, uint16(v))
}

type Runtime struct{ Client capnp.Client }

// Runtime_TypeID is the unique identifier for the type Runtime.
const Runtime_TypeID = 0xdda2e02140fe8f08

func (c Runtime) GoVersion(ctx context.Context, params func(Runtime_goVersion_Params) error, opts ...capnp.CallOption) Runtime_goVersion_Results_Promise {
	if c.Client == nil {
		return Runtime_goVersion_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xdda2e02140fe8f08,
			MethodID:      0,
			InterfaceName: "app.capnp:Runtime",
			MethodName:    "goVersion",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Runtime_goVersion_Params{Struct: s}) }
	}
	return Runtime_goVersion_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Runtime) NumCPU(ctx context.Context, params func(Runtime_numCPU_Params) error, opts ...capnp.CallOption) Runtime_numCPU_Results_Promise {
	if c.Client == nil {
		return Runtime_numCPU_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xdda2e02140fe8f08,
			MethodID:      1,
			InterfaceName: "app.capnp:Runtime",
			MethodName:    "numCPU",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Runtime_numCPU_Params{Struct: s}) }
	}
	return Runtime_numCPU_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Runtime) NumGoroutine(ctx context.Context, params func(Runtime_numGoroutine_Params) error, opts ...capnp.CallOption) Runtime_numGoroutine_Results_Promise {
	if c.Client == nil {
		return Runtime_numGoroutine_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xdda2e02140fe8f08,
			MethodID:      2,
			InterfaceName: "app.capnp:Runtime",
			MethodName:    "numGoroutine",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Runtime_numGoroutine_Params{Struct: s}) }
	}
	return Runtime_numGoroutine_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Runtime) MemStats(ctx context.Context, params func(Runtime_memStats_Params) error, opts ...capnp.CallOption) Runtime_memStats_Results_Promise {
	if c.Client == nil {
		return Runtime_memStats_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xdda2e02140fe8f08,
			MethodID:      3,
			InterfaceName: "app.capnp:Runtime",
			MethodName:    "memStats",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Runtime_memStats_Params{Struct: s}) }
	}
	return Runtime_memStats_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Runtime) StackDump(ctx context.Context, params func(Runtime_stackDump_Params) error, opts ...capnp.CallOption) Runtime_stackDump_Results_Promise {
	if c.Client == nil {
		return Runtime_stackDump_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xdda2e02140fe8f08,
			MethodID:      4,
			InterfaceName: "app.capnp:Runtime",
			MethodName:    "stackDump",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Runtime_stackDump_Params{Struct: s}) }
	}
	return Runtime_stackDump_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}

type Runtime_Server interface {
	GoVersion(Runtime_goVersion) error

	NumCPU(Runtime_numCPU) error

	NumGoroutine(Runtime_numGoroutine) error

	MemStats(Runtime_memStats) error

	StackDump(Runtime_stackDump) error
}

func Runtime_ServerToClient(s Runtime_Server) Runtime {
	c, _ := s.(server.Closer)
	return Runtime{Client: server.New(Runtime_Methods(nil, s), c)}
}

func Runtime_Methods(methods []server.Method, s Runtime_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 5)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xdda2e02140fe8f08,
			MethodID:      0,
			InterfaceName: "app.capnp:Runtime",
			MethodName:    "goVersion",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Runtime_goVersion{c, opts, Runtime_goVersion_Params{Struct: p}, Runtime_goVersion_Results{Struct: r}}
			return s.GoVersion(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xdda2e02140fe8f08,
			MethodID:      1,
			InterfaceName: "app.capnp:Runtime",
			MethodName:    "numCPU",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Runtime_numCPU{c, opts, Runtime_numCPU_Params{Struct: p}, Runtime_numCPU_Results{Struct: r}}
			return s.NumCPU(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xdda2e02140fe8f08,
			MethodID:      2,
			InterfaceName: "app.capnp:Runtime",
			MethodName:    "numGoroutine",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Runtime_numGoroutine{c, opts, Runtime_numGoroutine_Params{Struct: p}, Runtime_numGoroutine_Results{Struct: r}}
			return s.NumGoroutine(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xdda2e02140fe8f08,
			MethodID:      3,
			InterfaceName: "app.capnp:Runtime",
			MethodName:    "memStats",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Runtime_memStats{c, opts, Runtime_memStats_Params{Struct: p}, Runtime_memStats_Results{Struct: r}}
			return s.MemStats(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xdda2e02140fe8f08,
			MethodID:      4,
			InterfaceName: "app.capnp:Runtime",
			MethodName:    "stackDump",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Runtime_stackDump{c, opts, Runtime_stackDump_Params{Struct: p}, Runtime_stackDump_Results{Struct: r}}
			return s.StackDump(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	return methods
}

// Runtime_goVersion holds the arguments for a server call to Runtime.goVersion.
type Runtime_goVersion struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Runtime_goVersion_Params
	Results Runtime_goVersion_Results
}

// Runtime_numCPU holds the arguments for a server call to Runtime.numCPU.
type Runtime_numCPU struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Runtime_numCPU_Params
	Results Runtime_numCPU_Results
}

// Runtime_numGoroutine holds the arguments for a server call to Runtime.numGoroutine.
type Runtime_numGoroutine struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Runtime_numGoroutine_Params
	Results Runtime_numGoroutine_Results
}

// Runtime_memStats holds the arguments for a server call to Runtime.memStats.
type Runtime_memStats struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Runtime_memStats_Params
	Results Runtime_memStats_Results
}

// Runtime_stackDump holds the arguments for a server call to Runtime.stackDump.
type Runtime_stackDump struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Runtime_stackDump_Params
	Results Runtime_stackDump_Results
}

type Runtime_goVersion_Params struct{ capnp.Struct }

// Runtime_goVersion_Params_TypeID is the unique identifier for the type Runtime_goVersion_Params.
const Runtime_goVersion_Params_TypeID = 0xed1583a692140448

func NewRuntime_goVersion_Params(s *capnp.Segment) (Runtime_goVersion_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Runtime_goVersion_Params{st}, err
}

func NewRootRuntime_goVersion_Params(s *capnp.Segment) (Runtime_goVersion_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Runtime_goVersion_Params{st}, err
}

func ReadRootRuntime_goVersion_Params(msg *capnp.Message) (Runtime_goVersion_Params, error) {
	root, err := msg.RootPtr()
	return Runtime_goVersion_Params{root.Struct()}, err
}

func (s Runtime_goVersion_Params) String() string {
	str, _ := text.Marshal(0xed1583a692140448, s.Struct)
	return str
}

// Runtime_goVersion_Params_List is a list of Runtime_goVersion_Params.
type Runtime_goVersion_Params_List struct{ capnp.List }

// NewRuntime_goVersion_Params creates a new list of Runtime_goVersion_Params.
func NewRuntime_goVersion_Params_List(s *capnp.Segment, sz int32) (Runtime_goVersion_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Runtime_goVersion_Params_List{l}, err
}

func (s Runtime_goVersion_Params_List) At(i int) Runtime_goVersion_Params {
	return Runtime_goVersion_Params{s.List.Struct(i)}
}

func (s Runtime_goVersion_Params_List) Set(i int, v Runtime_goVersion_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Runtime_goVersion_Params_List) String() string {
	str, _ := text.MarshalList(0xed1583a692140448, s.List)
	return str
}

// Runtime_goVersion_Params_Promise is a wrapper for a Runtime_goVersion_Params promised by a client call.
type Runtime_goVersion_Params_Promise struct{ *capnp.Pipeline }

func (p Runtime_goVersion_Params_Promise) Struct() (Runtime_goVersion_Params, error) {
	s, err := p.Pipeline.Struct()
	return Runtime_goVersion_Params{s}, err
}

type Runtime_goVersion_Results struct{ capnp.Struct }

// Runtime_goVersion_Results_TypeID is the unique identifier for the type Runtime_goVersion_Results.
const Runtime_goVersion_Results_TypeID = 0xe5a432109337fc5d

func NewRuntime_goVersion_Results(s *capnp.Segment) (Runtime_goVersion_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Runtime_goVersion_Results{st}, err
}

func NewRootRuntime_goVersion_Results(s *capnp.Segment) (Runtime_goVersion_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Runtime_goVersion_Results{st}, err
}

func ReadRootRuntime_goVersion_Results(msg *capnp.Message) (Runtime_goVersion_Results, error) {
	root, err := msg.RootPtr()
	return Runtime_goVersion_Results{root.Struct()}, err
}

func (s Runtime_goVersion_Results) String() string {
	str, _ := text.Marshal(0xe5a432109337fc5d, s.Struct)
	return str
}

func (s Runtime_goVersion_Results) Version() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Runtime_goVersion_Results) HasVersion() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Runtime_goVersion_Results) VersionBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Runtime_goVersion_Results) SetVersion(v string) error {
	return s.Struct.SetText(0, v)
}

// Runtime_goVersion_Results_List is a list of Runtime_goVersion_Results.
type Runtime_goVersion_Results_List struct{ capnp.List }

// NewRuntime_goVersion_Results creates a new list of Runtime_goVersion_Results.
func NewRuntime_goVersion_Results_List(s *capnp.Segment, sz int32) (Runtime_goVersion_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Runtime_goVersion_Results_List{l}, err
}

func (s Runtime_goVersion_Results_List) At(i int) Runtime_goVersion_Results {
	return Runtime_goVersion_Results{s.List.Struct(i)}
}

func (s Runtime_goVersion_Results_List) Set(i int, v Runtime_goVersion_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Runtime_goVersion_Results_List) String() string {
	str, _ := text.MarshalList(0xe5a432109337fc5d, s.List)
	return str
}

// Runtime_goVersion_Results_Promise is a wrapper for a Runtime_goVersion_Results promised by a client call.
type Runtime_goVersion_Results_Promise struct{ *capnp.Pipeline }

func (p Runtime_goVersion_Results_Promise) Struct() (Runtime_goVersion_Results, error) {
	s, err := p.Pipeline.Struct()
	return Runtime_goVersion_Results{s}, err
}

type Runtime_numCPU_Params struct{ capnp.Struct }

// Runtime_numCPU_Params_TypeID is the unique identifier for the type Runtime_numCPU_Params.
const Runtime_numCPU_Params_TypeID = 0xad64659a5d76e80b

func NewRuntime_numCPU_Params(s *capnp.Segment) (Runtime_numCPU_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Runtime_numCPU_Params{st}, err
}

func NewRootRuntime_numCPU_Params(s *capnp.Segment) (Runtime_numCPU_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Runtime_numCPU_Params{st}, err
}

func ReadRootRuntime_numCPU_Params(msg *capnp.Message) (Runtime_numCPU_Params, error) {
	root, err := msg.RootPtr()
	return Runtime_numCPU_Params{root.Struct()}, err
}

func (s Runtime_numCPU_Params) String() string {
	str, _ := text.Marshal(0xad64659a5d76e80b, s.Struct)
	return str
}

// Runtime_numCPU_Params_List is a list of Runtime_numCPU_Params.
type Runtime_numCPU_Params_List struct{ capnp.List }

// NewRuntime_numCPU_Params creates a new list of Runtime_numCPU_Params.
func NewRuntime_numCPU_Params_List(s *capnp.Segment, sz int32) (Runtime_numCPU_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Runtime_numCPU_Params_List{l}, err
}

func (s Runtime_numCPU_Params_List) At(i int) Runtime_numCPU_Params {
	return Runtime_numCPU_Params{s.List.Struct(i)}
}

func (s Runtime_numCPU_Params_List) Set(i int, v Runtime_numCPU_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Runtime_numCPU_Params_List) String() string {
	str, _ := text.MarshalList(0xad64659a5d76e80b, s.List)
	return str
}

// Runtime_numCPU_Params_Promise is a wrapper for a Runtime_numCPU_Params promised by a client call.
type Runtime_numCPU_Params_Promise struct{ *capnp.Pipeline }

func (p Runtime_numCPU_Params_Promise) Struct() (Runtime_numCPU_Params, error) {
	s, err := p.Pipeline.Struct()
	return Runtime_numCPU_Params{s}, err
}

type Runtime_numCPU_Results struct{ capnp.Struct }

// Runtime_numCPU_Results_TypeID is the unique identifier for the type Runtime_numCPU_Results.
const Runtime_numCPU_Results_TypeID = 0xc3806a9410e187be

func NewRuntime_numCPU_Results(s *capnp.Segment) (Runtime_numCPU_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Runtime_numCPU_Results{st}, err
}

func NewRootRuntime_numCPU_Results(s *capnp.Segment) (Runtime_numCPU_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Runtime_numCPU_Results{st}, err
}

func ReadRootRuntime_numCPU_Results(msg *capnp.Message) (Runtime_numCPU_Results, error) {
	root, err := msg.RootPtr()
	return Runtime_numCPU_Results{root.Struct()}, err
}

func (s Runtime_numCPU_Results) String() string {
	str, _ := text.Marshal(0xc3806a9410e187be, s.Struct)
	return str
}

func (s Runtime_numCPU_Results) Count() uint32 {
	return s.Struct.Uint32(0)
}

func (s Runtime_numCPU_Results) SetCount(v uint32) {
	s.Struct.SetUint32(0, v)
}

// Runtime_numCPU_Results_List is a list of Runtime_numCPU_Results.
type Runtime_numCPU_Results_List struct{ capnp.List }

// NewRuntime_numCPU_Results creates a new list of Runtime_numCPU_Results.
func NewRuntime_numCPU_Results_List(s *capnp.Segment, sz int32) (Runtime_numCPU_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return Runtime_numCPU_Results_List{l}, err
}

func (s Runtime_numCPU_Results_List) At(i int) Runtime_numCPU_Results {
	return Runtime_numCPU_Results{s.List.Struct(i)}
}

func (s Runtime_numCPU_Results_List) Set(i int, v Runtime_numCPU_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Runtime_numCPU_Results_List) String() string {
	str, _ := text.MarshalList(0xc3806a9410e187be, s.List)
	return str
}

// Runtime_numCPU_Results_Promise is a wrapper for a Runtime_numCPU_Results promised by a client call.
type Runtime_numCPU_Results_Promise struct{ *capnp.Pipeline }

func (p Runtime_numCPU_Results_Promise) Struct() (Runtime_numCPU_Results, error) {
	s, err := p.Pipeline.Struct()
	return Runtime_numCPU_Results{s}, err
}

type Runtime_numGoroutine_Params struct{ capnp.Struct }

// Runtime_numGoroutine_Params_TypeID is the unique identifier for the type Runtime_numGoroutine_Params.
const Runtime_numGoroutine_Params_TypeID = 0xfa6ca90efc9ff291

func NewRuntime_numGoroutine_Params(s *capnp.Segment) (Runtime_numGoroutine_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Runtime_numGoroutine_Params{st}, err
}

func NewRootRuntime_numGoroutine_Params(s *capnp.Segment) (Runtime_numGoroutine_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Runtime_numGoroutine_Params{st}, err
}

func ReadRootRuntime_numGoroutine_Params(msg *capnp.Message) (Runtime_numGoroutine_Params, error) {
	root, err := msg.RootPtr()
	return Runtime_numGoroutine_Params{root.Struct()}, err
}

func (s Runtime_numGoroutine_Params) String() string {
	str, _ := text.Marshal(0xfa6ca90efc9ff291, s.Struct)
	return str
}

// Runtime_numGoroutine_Params_List is a list of Runtime_numGoroutine_Params.
type Runtime_numGoroutine_Params_List struct{ capnp.List }

// NewRuntime_numGoroutine_Params creates a new list of Runtime_numGoroutine_Params.
func NewRuntime_numGoroutine_Params_List(s *capnp.Segment, sz int32) (Runtime_numGoroutine_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Runtime_numGoroutine_Params_List{l}, err
}

func (s Runtime_numGoroutine_Params_List) At(i int) Runtime_numGoroutine_Params {
	return Runtime_numGoroutine_Params{s.List.Struct(i)}
}

func (s Runtime_numGoroutine_Params_List) Set(i int, v Runtime_numGoroutine_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Runtime_numGoroutine_Params_List) String() string {
	str, _ := text.MarshalList(0xfa6ca90efc9ff291, s.List)
	return str
}

// Runtime_numGoroutine_Params_Promise is a wrapper for a Runtime_numGoroutine_Params promised by a client call.
type Runtime_numGoroutine_Params_Promise struct{ *capnp.Pipeline }

func (p Runtime_numGoroutine_Params_Promise) Struct() (Runtime_numGoroutine_Params, error) {
	s, err := p.Pipeline.Struct()
	return Runtime_numGoroutine_Params{s}, err
}

type Runtime_numGoroutine_Results struct{ capnp.Struct }

// Runtime_numGoroutine_Results_TypeID is the unique identifier for the type Runtime_numGoroutine_Results.
const Runtime_numGoroutine_Results_TypeID = 0xfcf6d1267c1553d3

func NewRuntime_numGoroutine_Results(s *capnp.Segment) (Runtime_numGoroutine_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Runtime_numGoroutine_Results{st}, err
}

func NewRootRuntime_numGoroutine_Results(s *capnp.Segment) (Runtime_numGoroutine_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Runtime_numGoroutine_Results{st}, err
}

func ReadRootRuntime_numGoroutine_Results(msg *capnp.Message) (Runtime_numGoroutine_Results, error) {
	root, err := msg.RootPtr()
	return Runtime_numGoroutine_Results{root.Struct()}, err
}

func (s Runtime_numGoroutine_Results) String() string {
	str, _ := text.Marshal(0xfcf6d1267c1553d3, s.Struct)
	return str
}

func (s Runtime_numGoroutine_Results) Count() uint32 {
	return s.Struct.Uint32(0)
}

func (s Runtime_numGoroutine_Results) SetCount(v uint32) {
	s.Struct.SetUint32(0, v)
}

// Runtime_numGoroutine_Results_List is a list of Runtime_numGoroutine_Results.
type Runtime_numGoroutine_Results_List struct{ capnp.List }

// NewRuntime_numGoroutine_Results creates a new list of Runtime_numGoroutine_Results.
func NewRuntime_numGoroutine_Results_List(s *capnp.Segment, sz int32) (Runtime_numGoroutine_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return Runtime_numGoroutine_Results_List{l}, err
}

func (s Runtime_numGoroutine_Results_List) At(i int) Runtime_numGoroutine_Results {
	return Runtime_numGoroutine_Results{s.List.Struct(i)}
}

func (s Runtime_numGoroutine_Results_List) Set(i int, v Runtime_numGoroutine_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Runtime_numGoroutine_Results_List) String() string {
	str, _ := text.MarshalList(0xfcf6d1267c1553d3, s.List)
	return str
}

// Runtime_numGoroutine_Results_Promise is a wrapper for a Runtime_numGoroutine_Results promised by a client call.
type Runtime_numGoroutine_Results_Promise struct{ *capnp.Pipeline }

func (p Runtime_numGoroutine_Results_Promise) Struct() (Runtime_numGoroutine_Results, error) {
	s, err := p.Pipeline.Struct()
	return Runtime_numGoroutine_Results{s}, err
}

type Runtime_memStats_Params struct{ capnp.Struct }

// Runtime_memStats_Params_TypeID is the unique identifier for the type Runtime_memStats_Params.
const Runtime_memStats_Params_TypeID = 0xfa7d2ded965e55e3

func NewRuntime_memStats_Params(s *capnp.Segment) (Runtime_memStats_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Runtime_memStats_Params{st}, err
}

func NewRootRuntime_memStats_Params(s *capnp.Segment) (Runtime_memStats_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Runtime_memStats_Params{st}, err
}

func ReadRootRuntime_memStats_Params(msg *capnp.Message) (Runtime_memStats_Params, error) {
	root, err := msg.RootPtr()
	return Runtime_memStats_Params{root.Struct()}, err
}

func (s Runtime_memStats_Params) String() string {
	str, _ := text.Marshal(0xfa7d2ded965e55e3, s.Struct)
	return str
}

// Runtime_memStats_Params_List is a list of Runtime_memStats_Params.
type Runtime_memStats_Params_List struct{ capnp.List }

// NewRuntime_memStats_Params creates a new list of Runtime_memStats_Params.
func NewRuntime_memStats_Params_List(s *capnp.Segment, sz int32) (Runtime_memStats_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Runtime_memStats_Params_List{l}, err
}

func (s Runtime_memStats_Params_List) At(i int) Runtime_memStats_Params {
	return Runtime_memStats_Params{s.List.Struct(i)}
}

func (s Runtime_memStats_Params_List) Set(i int, v Runtime_memStats_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Runtime_memStats_Params_List) String() string {
	str, _ := text.MarshalList(0xfa7d2ded965e55e3, s.List)
	return str
}

// Runtime_memStats_Params_Promise is a wrapper for a Runtime_memStats_Params promised by a client call.
type Runtime_memStats_Params_Promise struct{ *capnp.Pipeline }

func (p Runtime_memStats_Params_Promise) Struct() (Runtime_memStats_Params, error) {
	s, err := p.Pipeline.Struct()
	return Runtime_memStats_Params{s}, err
}

type Runtime_memStats_Results struct{ capnp.Struct }

// Runtime_memStats_Results_TypeID is the unique identifier for the type Runtime_memStats_Results.
const Runtime_memStats_Results_TypeID = 0xc8c60b05d115f411

func NewRuntime_memStats_Results(s *capnp.Segment) (Runtime_memStats_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Runtime_memStats_Results{st}, err
}

func NewRootRuntime_memStats_Results(s *capnp.Segment) (Runtime_memStats_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Runtime_memStats_Results{st}, err
}

func ReadRootRuntime_memStats_Results(msg *capnp.Message) (Runtime_memStats_Results, error) {
	root, err := msg.RootPtr()
	return Runtime_memStats_Results{root.Struct()}, err
}

func (s Runtime_memStats_Results) String() string {
	str, _ := text.Marshal(0xc8c60b05d115f411, s.Struct)
	return str
}

func (s Runtime_memStats_Results) Stats() (MemStats, error) {
	p, err := s.Struct.Ptr(0)
	return MemStats{Struct: p.Struct()}, err
}

func (s Runtime_memStats_Results) HasStats() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Runtime_memStats_Results) SetStats(v MemStats) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewStats sets the stats field to a newly
// allocated MemStats struct, preferring placement in s's segment.
func (s Runtime_memStats_Results) NewStats() (MemStats, error) {
	ss, err := NewMemStats(s.Struct.Segment())
	if err != nil {
		return MemStats{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Runtime_memStats_Results_List is a list of Runtime_memStats_Results.
type Runtime_memStats_Results_List struct{ capnp.List }

// NewRuntime_memStats_Results creates a new list of Runtime_memStats_Results.
func NewRuntime_memStats_Results_List(s *capnp.Segment, sz int32) (Runtime_memStats_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Runtime_memStats_Results_List{l}, err
}

func (s Runtime_memStats_Results_List) At(i int) Runtime_memStats_Results {
	return Runtime_memStats_Results{s.List.Struct(i)}
}

func (s Runtime_memStats_Results_List) Set(i int, v Runtime_memStats_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Runtime_memStats_Results_List) String() string {
	str, _ := text.MarshalList(0xc8c60b05d115f411, s.List)
	return str
}

// Runtime_memStats_Results_Promise is a wrapper for a Runtime_memStats_Results promised by a client call.
type Runtime_memStats_Results_Promise struct{ *capnp.Pipeline }

func (p Runtime_memStats_Results_Promise) Struct() (Runtime_memStats_Results, error) {
	s, err := p.Pipeline.Struct()
	return Runtime_memStats_Results{s}, err
}

func (p Runtime_memStats_Results_Promise) Stats() MemStats_Promise {
	return MemStats_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type Runtime_stackDump_Params struct{ capnp.Struct }

// Runtime_stackDump_Params_TypeID is the unique identifier for the type Runtime_stackDump_Params.
const Runtime_stackDump_Params_TypeID = 0xb9c996f05a75ae42

func NewRuntime_stackDump_Params(s *capnp.Segment) (Runtime_stackDump_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Runtime_stackDump_Params{st}, err
}

func NewRootRuntime_stackDump_Params(s *capnp.Segment) (Runtime_stackDump_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Runtime_stackDump_Params{st}, err
}

func ReadRootRuntime_stackDump_Params(msg *capnp.Message) (Runtime_stackDump_Params, error) {
	root, err := msg.RootPtr()
	return Runtime_stackDump_Params{root.Struct()}, err
}

func (s Runtime_stackDump_Params) String() string {
	str, _ := text.Marshal(0xb9c996f05a75ae42, s.Struct)
	return str
}

// Runtime_stackDump_Params_List is a list of Runtime_stackDump_Params.
type Runtime_stackDump_Params_List struct{ capnp.List }

// NewRuntime_stackDump_Params creates a new list of Runtime_stackDump_Params.
func NewRuntime_stackDump_Params_List(s *capnp.Segment, sz int32) (Runtime_stackDump_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Runtime_stackDump_Params_List{l}, err
}

func (s Runtime_stackDump_Params_List) At(i int) Runtime_stackDump_Params {
	return Runtime_stackDump_Params{s.List.Struct(i)}
}

func (s Runtime_stackDump_Params_List) Set(i int, v Runtime_stackDump_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Runtime_stackDump_Params_List) String() string {
	str, _ := text.MarshalList(0xb9c996f05a75ae42, s.List)
	return str
}

// Runtime_stackDump_Params_Promise is a wrapper for a Runtime_stackDump_Params promised by a client call.
type Runtime_stackDump_Params_Promise struct{ *capnp.Pipeline }

func (p Runtime_stackDump_Params_Promise) Struct() (Runtime_stackDump_Params, error) {
	s, err := p.Pipeline.Struct()
	return Runtime_stackDump_Params{s}, err
}

type Runtime_stackDump_Results struct{ capnp.Struct }

// Runtime_stackDump_Results_TypeID is the unique identifier for the type Runtime_stackDump_Results.
const Runtime_stackDump_Results_TypeID = 0xa8fc15721302db2a

func NewRuntime_stackDump_Results(s *capnp.Segment) (Runtime_stackDump_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Runtime_stackDump_Results{st}, err
}

func NewRootRuntime_stackDump_Results(s *capnp.Segment) (Runtime_stackDump_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Runtime_stackDump_Results{st}, err
}

func ReadRootRuntime_stackDump_Results(msg *capnp.Message) (Runtime_stackDump_Results, error) {
	root, err := msg.RootPtr()
	return Runtime_stackDump_Results{root.Struct()}, err
}

func (s Runtime_stackDump_Results) String() string {
	str, _ := text.Marshal(0xa8fc15721302db2a, s.Struct)
	return str
}

func (s Runtime_stackDump_Results) StackDump() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return []byte(p.Data()), err
}

func (s Runtime_stackDump_Results) HasStackDump() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Runtime_stackDump_Results) SetStackDump(v []byte) error {
	return s.Struct.SetData(0, v)
}

// Runtime_stackDump_Results_List is a list of Runtime_stackDump_Results.
type Runtime_stackDump_Results_List struct{ capnp.List }

// NewRuntime_stackDump_Results creates a new list of Runtime_stackDump_Results.
func NewRuntime_stackDump_Results_List(s *capnp.Segment, sz int32) (Runtime_stackDump_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Runtime_stackDump_Results_List{l}, err
}

func (s Runtime_stackDump_Results_List) At(i int) Runtime_stackDump_Results {
	return Runtime_stackDump_Results{s.List.Struct(i)}
}

func (s Runtime_stackDump_Results_List) Set(i int, v Runtime_stackDump_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Runtime_stackDump_Results_List) String() string {
	str, _ := text.MarshalList(0xa8fc15721302db2a, s.List)
	return str
}

// Runtime_stackDump_Results_Promise is a wrapper for a Runtime_stackDump_Results promised by a client call.
type Runtime_stackDump_Results_Promise struct{ *capnp.Pipeline }

func (p Runtime_stackDump_Results_Promise) Struct() (Runtime_stackDump_Results, error) {
	s, err := p.Pipeline.Struct()
	return Runtime_stackDump_Results{s}, err
}

type MemStats struct{ capnp.Struct }

// MemStats_TypeID is the unique identifier for the type MemStats.
const MemStats_TypeID = 0xcdf011e3e3860026

func NewMemStats(s *capnp.Segment) (MemStats, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 208, PointerCount: 3})
	return MemStats{st}, err
}

func NewRootMemStats(s *capnp.Segment) (MemStats, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 208, PointerCount: 3})
	return MemStats{st}, err
}

func ReadRootMemStats(msg *capnp.Message) (MemStats, error) {
	root, err := msg.RootPtr()
	return MemStats{root.Struct()}, err
}

func (s MemStats) String() string {
	str, _ := text.Marshal(0xcdf011e3e3860026, s.Struct)
	return str
}

func (s MemStats) Alloc() uint64 {
	return s.Struct.Uint64(0)
}

func (s MemStats) SetAlloc(v uint64) {
	s.Struct.SetUint64(0, v)
}

func (s MemStats) TotalAlloc() uint64 {
	return s.Struct.Uint64(8)
}

func (s MemStats) SetTotalAlloc(v uint64) {
	s.Struct.SetUint64(8, v)
}

func (s MemStats) Sys() uint64 {
	return s.Struct.Uint64(16)
}

func (s MemStats) SetSys(v uint64) {
	s.Struct.SetUint64(16, v)
}

func (s MemStats) Lookups() uint64 {
	return s.Struct.Uint64(24)
}

func (s MemStats) SetLookups(v uint64) {
	s.Struct.SetUint64(24, v)
}

func (s MemStats) Mallocs() uint64 {
	return s.Struct.Uint64(32)
}

func (s MemStats) SetMallocs(v uint64) {
	s.Struct.SetUint64(32, v)
}

func (s MemStats) Frees() uint64 {
	return s.Struct.Uint64(40)
}

func (s MemStats) SetFrees(v uint64) {
	s.Struct.SetUint64(40, v)
}

func (s MemStats) HeapAlloc() uint64 {
	return s.Struct.Uint64(48)
}

func (s MemStats) SetHeapAlloc(v uint64) {
	s.Struct.SetUint64(48, v)
}

func (s MemStats) HeapSys() uint64 {
	return s.Struct.Uint64(56)
}

func (s MemStats) SetHeapSys(v uint64) {
	s.Struct.SetUint64(56, v)
}

func (s MemStats) HeapIdle() uint64 {
	return s.Struct.Uint64(64)
}

func (s MemStats) SetHeapIdle(v uint64) {
	s.Struct.SetUint64(64, v)
}

func (s MemStats) HeapInUse() uint64 {
	return s.Struct.Uint64(72)
}

func (s MemStats) SetHeapInUse(v uint64) {
	s.Struct.SetUint64(72, v)
}

func (s MemStats) HeapReleased() uint64 {
	return s.Struct.Uint64(80)
}

func (s MemStats) SetHeapReleased(v uint64) {
	s.Struct.SetUint64(80, v)
}

func (s MemStats) HeapObjects() uint64 {
	return s.Struct.Uint64(88)
}

func (s MemStats) SetHeapObjects(v uint64) {
	s.Struct.SetUint64(88, v)
}

func (s MemStats) StackInUse() uint64 {
	return s.Struct.Uint64(96)
}

func (s MemStats) SetStackInUse(v uint64) {
	s.Struct.SetUint64(96, v)
}

func (s MemStats) StackSys() uint64 {
	return s.Struct.Uint64(104)
}

func (s MemStats) SetStackSys(v uint64) {
	s.Struct.SetUint64(104, v)
}

func (s MemStats) MSpanInUse() uint64 {
	return s.Struct.Uint64(112)
}

func (s MemStats) SetMSpanInUse(v uint64) {
	s.Struct.SetUint64(112, v)
}

func (s MemStats) MSpanSys() uint64 {
	return s.Struct.Uint64(120)
}

func (s MemStats) SetMSpanSys(v uint64) {
	s.Struct.SetUint64(120, v)
}

func (s MemStats) MCacheInUse() uint64 {
	return s.Struct.Uint64(128)
}

func (s MemStats) SetMCacheInUse(v uint64) {
	s.Struct.SetUint64(128, v)
}

func (s MemStats) MCacheSys() uint64 {
	return s.Struct.Uint64(136)
}

func (s MemStats) SetMCacheSys(v uint64) {
	s.Struct.SetUint64(136, v)
}

func (s MemStats) BuckHashSys() uint64 {
	return s.Struct.Uint64(144)
}

func (s MemStats) SetBuckHashSys(v uint64) {
	s.Struct.SetUint64(144, v)
}

func (s MemStats) GCSys() uint64 {
	return s.Struct.Uint64(152)
}

func (s MemStats) SetGCSys(v uint64) {
	s.Struct.SetUint64(152, v)
}

func (s MemStats) OtherSys() uint64 {
	return s.Struct.Uint64(160)
}

func (s MemStats) SetOtherSys(v uint64) {
	s.Struct.SetUint64(160, v)
}

func (s MemStats) NextGC() uint64 {
	return s.Struct.Uint64(168)
}

func (s MemStats) SetNextGC(v uint64) {
	s.Struct.SetUint64(168, v)
}

func (s MemStats) LastGC() uint64 {
	return s.Struct.Uint64(176)
}

func (s MemStats) SetLastGC(v uint64) {
	s.Struct.SetUint64(176, v)
}

func (s MemStats) PauseTotalNs() uint64 {
	return s.Struct.Uint64(184)
}

func (s MemStats) SetPauseTotalNs(v uint64) {
	s.Struct.SetUint64(184, v)
}

func (s MemStats) PauseNs() (capnp.UInt64List, error) {
	p, err := s.Struct.Ptr(0)
	return capnp.UInt64List{List: p.List()}, err
}

func (s MemStats) HasPauseNs() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s MemStats) SetPauseNs(v capnp.UInt64List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewPauseNs sets the pauseNs field to a newly
// allocated capnp.UInt64List, preferring placement in s's segment.
func (s MemStats) NewPauseNs(n int32) (capnp.UInt64List, error) {
	l, err := capnp.NewUInt64List(s.Struct.Segment(), n)
	if err != nil {
		return capnp.UInt64List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

func (s MemStats) PauseEnd() (capnp.UInt64List, error) {
	p, err := s.Struct.Ptr(1)
	return capnp.UInt64List{List: p.List()}, err
}

func (s MemStats) HasPauseEnd() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s MemStats) SetPauseEnd(v capnp.UInt64List) error {
	return s.Struct.SetPtr(1, v.List.ToPtr())
}

// NewPauseEnd sets the pauseEnd field to a newly
// allocated capnp.UInt64List, preferring placement in s's segment.
func (s MemStats) NewPauseEnd(n int32) (capnp.UInt64List, error) {
	l, err := capnp.NewUInt64List(s.Struct.Segment(), n)
	if err != nil {
		return capnp.UInt64List{}, err
	}
	err = s.Struct.SetPtr(1, l.List.ToPtr())
	return l, err
}

func (s MemStats) NumGC() uint32 {
	return s.Struct.Uint32(192)
}

func (s MemStats) SetNumGC(v uint32) {
	s.Struct.SetUint32(192, v)
}

func (s MemStats) NumForcedGC() uint32 {
	return s.Struct.Uint32(196)
}

func (s MemStats) SetNumForcedGC(v uint32) {
	s.Struct.SetUint32(196, v)
}

func (s MemStats) GCCPUFraction() float64 {
	return math.Float64frombits(s.Struct.Uint64(200))
}

func (s MemStats) SetGCCPUFraction(v float64) {
	s.Struct.SetUint64(200, math.Float64bits(v))
}

func (s MemStats) BySize() (MemStats_BySize_List, error) {
	p, err := s.Struct.Ptr(2)
	return MemStats_BySize_List{List: p.List()}, err
}

func (s MemStats) HasBySize() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s MemStats) SetBySize(v MemStats_BySize_List) error {
	return s.Struct.SetPtr(2, v.List.ToPtr())
}

// NewBySize sets the bySize field to a newly
// allocated MemStats_BySize_List, preferring placement in s's segment.
func (s MemStats) NewBySize(n int32) (MemStats_BySize_List, error) {
	l, err := NewMemStats_BySize_List(s.Struct.Segment(), n)
	if err != nil {
		return MemStats_BySize_List{}, err
	}
	err = s.Struct.SetPtr(2, l.List.ToPtr())
	return l, err
}

// MemStats_List is a list of MemStats.
type MemStats_List struct{ capnp.List }

// NewMemStats creates a new list of MemStats.
func NewMemStats_List(s *capnp.Segment, sz int32) (MemStats_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 208, PointerCount: 3}, sz)
	return MemStats_List{l}, err
}

func (s MemStats_List) At(i int) MemStats { return MemStats{s.List.Struct(i)} }

func (s MemStats_List) Set(i int, v MemStats) error { return s.List.SetStruct(i, v.Struct) }

func (s MemStats_List) String() string {
	str, _ := text.MarshalList(0xcdf011e3e3860026, s.List)
	return str
}

// MemStats_Promise is a wrapper for a MemStats promised by a client call.
type MemStats_Promise struct{ *capnp.Pipeline }

func (p MemStats_Promise) Struct() (MemStats, error) {
	s, err := p.Pipeline.Struct()
	return MemStats{s}, err
}

type MemStats_BySize struct{ capnp.Struct }

// MemStats_BySize_TypeID is the unique identifier for the type MemStats_BySize.
const MemStats_BySize_TypeID = 0xc3e472677f9be8ad

func NewMemStats_BySize(s *capnp.Segment) (MemStats_BySize, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 24, PointerCount: 0})
	return MemStats_BySize{st}, err
}

func NewRootMemStats_BySize(s *capnp.Segment) (MemStats_BySize, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 24, PointerCount: 0})
	return MemStats_BySize{st}, err
}

func ReadRootMemStats_BySize(msg *capnp.Message) (MemStats_BySize, error) {
	root, err := msg.RootPtr()
	return MemStats_BySize{root.Struct()}, err
}

func (s MemStats_BySize) String() string {
	str, _ := text.Marshal(0xc3e472677f9be8ad, s.Struct)
	return str
}

func (s MemStats_BySize) Size() uint32 {
	return s.Struct.Uint32(0)
}

func (s MemStats_BySize) SetSize(v uint32) {
	s.Struct.SetUint32(0, v)
}

func (s MemStats_BySize) Mallocs() uint64 {
	return s.Struct.Uint64(8)
}

func (s MemStats_BySize) SetMallocs(v uint64) {
	s.Struct.SetUint64(8, v)
}

func (s MemStats_BySize) Frees() uint64 {
	return s.Struct.Uint64(16)
}

func (s MemStats_BySize) SetFrees(v uint64) {
	s.Struct.SetUint64(16, v)
}

// MemStats_BySize_List is a list of MemStats_BySize.
type MemStats_BySize_List struct{ capnp.List }

// NewMemStats_BySize creates a new list of MemStats_BySize.
func NewMemStats_BySize_List(s *capnp.Segment, sz int32) (MemStats_BySize_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 24, PointerCount: 0}, sz)
	return MemStats_BySize_List{l}, err
}

func (s MemStats_BySize_List) At(i int) MemStats_BySize { return MemStats_BySize{s.List.Struct(i)} }

func (s MemStats_BySize_List) Set(i int, v MemStats_BySize) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s MemStats_BySize_List) String() string {
	str, _ := text.MarshalList(0xc3e472677f9be8ad, s.List)
	return str
}

// MemStats_BySize_Promise is a wrapper for a MemStats_BySize promised by a client call.
type MemStats_BySize_Promise struct{ *capnp.Pipeline }

func (p MemStats_BySize_Promise) Struct() (MemStats_BySize, error) {
	s, err := p.Pipeline.Struct()
	return MemStats_BySize{s}, err
}

type Configs struct{ Client capnp.Client }

// Configs_TypeID is the unique identifier for the type Configs.
const Configs_TypeID = 0xa391f67e209a873d

func (c Configs) ConfigDir(ctx context.Context, params func(Configs_configDir_Params) error, opts ...capnp.CallOption) Configs_configDir_Results_Promise {
	if c.Client == nil {
		return Configs_configDir_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa391f67e209a873d,
			MethodID:      0,
			InterfaceName: "app.capnp:Configs",
			MethodName:    "configDir",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Configs_configDir_Params{Struct: s}) }
	}
	return Configs_configDir_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Configs) ConfigDirExists(ctx context.Context, params func(Configs_configDirExists_Params) error, opts ...capnp.CallOption) Configs_configDirExists_Results_Promise {
	if c.Client == nil {
		return Configs_configDirExists_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa391f67e209a873d,
			MethodID:      1,
			InterfaceName: "app.capnp:Configs",
			MethodName:    "configDirExists",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Configs_configDirExists_Params{Struct: s}) }
	}
	return Configs_configDirExists_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Configs) ServiceIds(ctx context.Context, params func(Configs_serviceIds_Params) error, opts ...capnp.CallOption) Configs_serviceIds_Results_Promise {
	if c.Client == nil {
		return Configs_serviceIds_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa391f67e209a873d,
			MethodID:      2,
			InterfaceName: "app.capnp:Configs",
			MethodName:    "serviceIds",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Configs_serviceIds_Params{Struct: s}) }
	}
	return Configs_serviceIds_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}

type Configs_Server interface {
	ConfigDir(Configs_configDir) error

	ConfigDirExists(Configs_configDirExists) error

	ServiceIds(Configs_serviceIds) error
}

func Configs_ServerToClient(s Configs_Server) Configs {
	c, _ := s.(server.Closer)
	return Configs{Client: server.New(Configs_Methods(nil, s), c)}
}

func Configs_Methods(methods []server.Method, s Configs_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 3)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa391f67e209a873d,
			MethodID:      0,
			InterfaceName: "app.capnp:Configs",
			MethodName:    "configDir",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Configs_configDir{c, opts, Configs_configDir_Params{Struct: p}, Configs_configDir_Results{Struct: r}}
			return s.ConfigDir(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa391f67e209a873d,
			MethodID:      1,
			InterfaceName: "app.capnp:Configs",
			MethodName:    "configDirExists",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Configs_configDirExists{c, opts, Configs_configDirExists_Params{Struct: p}, Configs_configDirExists_Results{Struct: r}}
			return s.ConfigDirExists(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa391f67e209a873d,
			MethodID:      2,
			InterfaceName: "app.capnp:Configs",
			MethodName:    "serviceIds",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Configs_serviceIds{c, opts, Configs_serviceIds_Params{Struct: p}, Configs_serviceIds_Results{Struct: r}}
			return s.ServiceIds(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	return methods
}

// Configs_configDir holds the arguments for a server call to Configs.configDir.
type Configs_configDir struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Configs_configDir_Params
	Results Configs_configDir_Results
}

// Configs_configDirExists holds the arguments for a server call to Configs.configDirExists.
type Configs_configDirExists struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Configs_configDirExists_Params
	Results Configs_configDirExists_Results
}

// Configs_serviceIds holds the arguments for a server call to Configs.serviceIds.
type Configs_serviceIds struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Configs_serviceIds_Params
	Results Configs_serviceIds_Results
}

type Configs_configDir_Params struct{ capnp.Struct }

// Configs_configDir_Params_TypeID is the unique identifier for the type Configs_configDir_Params.
const Configs_configDir_Params_TypeID = 0x98be837673e8652a

func NewConfigs_configDir_Params(s *capnp.Segment) (Configs_configDir_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Configs_configDir_Params{st}, err
}

func NewRootConfigs_configDir_Params(s *capnp.Segment) (Configs_configDir_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Configs_configDir_Params{st}, err
}

func ReadRootConfigs_configDir_Params(msg *capnp.Message) (Configs_configDir_Params, error) {
	root, err := msg.RootPtr()
	return Configs_configDir_Params{root.Struct()}, err
}

func (s Configs_configDir_Params) String() string {
	str, _ := text.Marshal(0x98be837673e8652a, s.Struct)
	return str
}

// Configs_configDir_Params_List is a list of Configs_configDir_Params.
type Configs_configDir_Params_List struct{ capnp.List }

// NewConfigs_configDir_Params creates a new list of Configs_configDir_Params.
func NewConfigs_configDir_Params_List(s *capnp.Segment, sz int32) (Configs_configDir_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Configs_configDir_Params_List{l}, err
}

func (s Configs_configDir_Params_List) At(i int) Configs_configDir_Params {
	return Configs_configDir_Params{s.List.Struct(i)}
}

func (s Configs_configDir_Params_List) Set(i int, v Configs_configDir_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Configs_configDir_Params_List) String() string {
	str, _ := text.MarshalList(0x98be837673e8652a, s.List)
	return str
}

// Configs_configDir_Params_Promise is a wrapper for a Configs_configDir_Params promised by a client call.
type Configs_configDir_Params_Promise struct{ *capnp.Pipeline }

func (p Configs_configDir_Params_Promise) Struct() (Configs_configDir_Params, error) {
	s, err := p.Pipeline.Struct()
	return Configs_configDir_Params{s}, err
}

type Configs_configDir_Results struct{ capnp.Struct }

// Configs_configDir_Results_TypeID is the unique identifier for the type Configs_configDir_Results.
const Configs_configDir_Results_TypeID = 0xf6b932063d110fed

func NewConfigs_configDir_Results(s *capnp.Segment) (Configs_configDir_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Configs_configDir_Results{st}, err
}

func NewRootConfigs_configDir_Results(s *capnp.Segment) (Configs_configDir_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Configs_configDir_Results{st}, err
}

func ReadRootConfigs_configDir_Results(msg *capnp.Message) (Configs_configDir_Results, error) {
	root, err := msg.RootPtr()
	return Configs_configDir_Results{root.Struct()}, err
}

func (s Configs_configDir_Results) String() string {
	str, _ := text.Marshal(0xf6b932063d110fed, s.Struct)
	return str
}

func (s Configs_configDir_Results) ConfigDir() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Configs_configDir_Results) HasConfigDir() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Configs_configDir_Results) ConfigDirBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Configs_configDir_Results) SetConfigDir(v string) error {
	return s.Struct.SetText(0, v)
}

// Configs_configDir_Results_List is a list of Configs_configDir_Results.
type Configs_configDir_Results_List struct{ capnp.List }

// NewConfigs_configDir_Results creates a new list of Configs_configDir_Results.
func NewConfigs_configDir_Results_List(s *capnp.Segment, sz int32) (Configs_configDir_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Configs_configDir_Results_List{l}, err
}

func (s Configs_configDir_Results_List) At(i int) Configs_configDir_Results {
	return Configs_configDir_Results{s.List.Struct(i)}
}

func (s Configs_configDir_Results_List) Set(i int, v Configs_configDir_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Configs_configDir_Results_List) String() string {
	str, _ := text.MarshalList(0xf6b932063d110fed, s.List)
	return str
}

// Configs_configDir_Results_Promise is a wrapper for a Configs_configDir_Results promised by a client call.
type Configs_configDir_Results_Promise struct{ *capnp.Pipeline }

func (p Configs_configDir_Results_Promise) Struct() (Configs_configDir_Results, error) {
	s, err := p.Pipeline.Struct()
	return Configs_configDir_Results{s}, err
}

type Configs_configDirExists_Params struct{ capnp.Struct }

// Configs_configDirExists_Params_TypeID is the unique identifier for the type Configs_configDirExists_Params.
const Configs_configDirExists_Params_TypeID = 0x99ad308062b9e970

func NewConfigs_configDirExists_Params(s *capnp.Segment) (Configs_configDirExists_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Configs_configDirExists_Params{st}, err
}

func NewRootConfigs_configDirExists_Params(s *capnp.Segment) (Configs_configDirExists_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Configs_configDirExists_Params{st}, err
}

func ReadRootConfigs_configDirExists_Params(msg *capnp.Message) (Configs_configDirExists_Params, error) {
	root, err := msg.RootPtr()
	return Configs_configDirExists_Params{root.Struct()}, err
}

func (s Configs_configDirExists_Params) String() string {
	str, _ := text.Marshal(0x99ad308062b9e970, s.Struct)
	return str
}

// Configs_configDirExists_Params_List is a list of Configs_configDirExists_Params.
type Configs_configDirExists_Params_List struct{ capnp.List }

// NewConfigs_configDirExists_Params creates a new list of Configs_configDirExists_Params.
func NewConfigs_configDirExists_Params_List(s *capnp.Segment, sz int32) (Configs_configDirExists_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Configs_configDirExists_Params_List{l}, err
}

func (s Configs_configDirExists_Params_List) At(i int) Configs_configDirExists_Params {
	return Configs_configDirExists_Params{s.List.Struct(i)}
}

func (s Configs_configDirExists_Params_List) Set(i int, v Configs_configDirExists_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Configs_configDirExists_Params_List) String() string {
	str, _ := text.MarshalList(0x99ad308062b9e970, s.List)
	return str
}

// Configs_configDirExists_Params_Promise is a wrapper for a Configs_configDirExists_Params promised by a client call.
type Configs_configDirExists_Params_Promise struct{ *capnp.Pipeline }

func (p Configs_configDirExists_Params_Promise) Struct() (Configs_configDirExists_Params, error) {
	s, err := p.Pipeline.Struct()
	return Configs_configDirExists_Params{s}, err
}

type Configs_configDirExists_Results struct{ capnp.Struct }

// Configs_configDirExists_Results_TypeID is the unique identifier for the type Configs_configDirExists_Results.
const Configs_configDirExists_Results_TypeID = 0x9f8ae589a9e0a609

func NewConfigs_configDirExists_Results(s *capnp.Segment) (Configs_configDirExists_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Configs_configDirExists_Results{st}, err
}

func NewRootConfigs_configDirExists_Results(s *capnp.Segment) (Configs_configDirExists_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Configs_configDirExists_Results{st}, err
}

func ReadRootConfigs_configDirExists_Results(msg *capnp.Message) (Configs_configDirExists_Results, error) {
	root, err := msg.RootPtr()
	return Configs_configDirExists_Results{root.Struct()}, err
}

func (s Configs_configDirExists_Results) String() string {
	str, _ := text.Marshal(0x9f8ae589a9e0a609, s.Struct)
	return str
}

func (s Configs_configDirExists_Results) Exists() bool {
	return s.Struct.Bit(0)
}

func (s Configs_configDirExists_Results) SetExists(v bool) {
	s.Struct.SetBit(0, v)
}

// Configs_configDirExists_Results_List is a list of Configs_configDirExists_Results.
type Configs_configDirExists_Results_List struct{ capnp.List }

// NewConfigs_configDirExists_Results creates a new list of Configs_configDirExists_Results.
func NewConfigs_configDirExists_Results_List(s *capnp.Segment, sz int32) (Configs_configDirExists_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return Configs_configDirExists_Results_List{l}, err
}

func (s Configs_configDirExists_Results_List) At(i int) Configs_configDirExists_Results {
	return Configs_configDirExists_Results{s.List.Struct(i)}
}

func (s Configs_configDirExists_Results_List) Set(i int, v Configs_configDirExists_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Configs_configDirExists_Results_List) String() string {
	str, _ := text.MarshalList(0x9f8ae589a9e0a609, s.List)
	return str
}

// Configs_configDirExists_Results_Promise is a wrapper for a Configs_configDirExists_Results promised by a client call.
type Configs_configDirExists_Results_Promise struct{ *capnp.Pipeline }

func (p Configs_configDirExists_Results_Promise) Struct() (Configs_configDirExists_Results, error) {
	s, err := p.Pipeline.Struct()
	return Configs_configDirExists_Results{s}, err
}

type Configs_serviceIds_Params struct{ capnp.Struct }

// Configs_serviceIds_Params_TypeID is the unique identifier for the type Configs_serviceIds_Params.
const Configs_serviceIds_Params_TypeID = 0xb281d4535d7c4c6e

func NewConfigs_serviceIds_Params(s *capnp.Segment) (Configs_serviceIds_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Configs_serviceIds_Params{st}, err
}

func NewRootConfigs_serviceIds_Params(s *capnp.Segment) (Configs_serviceIds_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Configs_serviceIds_Params{st}, err
}

func ReadRootConfigs_serviceIds_Params(msg *capnp.Message) (Configs_serviceIds_Params, error) {
	root, err := msg.RootPtr()
	return Configs_serviceIds_Params{root.Struct()}, err
}

func (s Configs_serviceIds_Params) String() string {
	str, _ := text.Marshal(0xb281d4535d7c4c6e, s.Struct)
	return str
}

// Configs_serviceIds_Params_List is a list of Configs_serviceIds_Params.
type Configs_serviceIds_Params_List struct{ capnp.List }

// NewConfigs_serviceIds_Params creates a new list of Configs_serviceIds_Params.
func NewConfigs_serviceIds_Params_List(s *capnp.Segment, sz int32) (Configs_serviceIds_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Configs_serviceIds_Params_List{l}, err
}

func (s Configs_serviceIds_Params_List) At(i int) Configs_serviceIds_Params {
	return Configs_serviceIds_Params{s.List.Struct(i)}
}

func (s Configs_serviceIds_Params_List) Set(i int, v Configs_serviceIds_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Configs_serviceIds_Params_List) String() string {
	str, _ := text.MarshalList(0xb281d4535d7c4c6e, s.List)
	return str
}

// Configs_serviceIds_Params_Promise is a wrapper for a Configs_serviceIds_Params promised by a client call.
type Configs_serviceIds_Params_Promise struct{ *capnp.Pipeline }

func (p Configs_serviceIds_Params_Promise) Struct() (Configs_serviceIds_Params, error) {
	s, err := p.Pipeline.Struct()
	return Configs_serviceIds_Params{s}, err
}

type Configs_serviceIds_Results struct{ capnp.Struct }

// Configs_serviceIds_Results_TypeID is the unique identifier for the type Configs_serviceIds_Results.
const Configs_serviceIds_Results_TypeID = 0xa28ac6cb306f77a0

func NewConfigs_serviceIds_Results(s *capnp.Segment) (Configs_serviceIds_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Configs_serviceIds_Results{st}, err
}

func NewRootConfigs_serviceIds_Results(s *capnp.Segment) (Configs_serviceIds_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Configs_serviceIds_Results{st}, err
}

func ReadRootConfigs_serviceIds_Results(msg *capnp.Message) (Configs_serviceIds_Results, error) {
	root, err := msg.RootPtr()
	return Configs_serviceIds_Results{root.Struct()}, err
}

func (s Configs_serviceIds_Results) String() string {
	str, _ := text.Marshal(0xa28ac6cb306f77a0, s.Struct)
	return str
}

func (s Configs_serviceIds_Results) ServiceIds() (capnp.UInt64List, error) {
	p, err := s.Struct.Ptr(0)
	return capnp.UInt64List{List: p.List()}, err
}

func (s Configs_serviceIds_Results) HasServiceIds() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Configs_serviceIds_Results) SetServiceIds(v capnp.UInt64List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewServiceIds sets the serviceIds field to a newly
// allocated capnp.UInt64List, preferring placement in s's segment.
func (s Configs_serviceIds_Results) NewServiceIds(n int32) (capnp.UInt64List, error) {
	l, err := capnp.NewUInt64List(s.Struct.Segment(), n)
	if err != nil {
		return capnp.UInt64List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// Configs_serviceIds_Results_List is a list of Configs_serviceIds_Results.
type Configs_serviceIds_Results_List struct{ capnp.List }

// NewConfigs_serviceIds_Results creates a new list of Configs_serviceIds_Results.
func NewConfigs_serviceIds_Results_List(s *capnp.Segment, sz int32) (Configs_serviceIds_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Configs_serviceIds_Results_List{l}, err
}

func (s Configs_serviceIds_Results_List) At(i int) Configs_serviceIds_Results {
	return Configs_serviceIds_Results{s.List.Struct(i)}
}

func (s Configs_serviceIds_Results_List) Set(i int, v Configs_serviceIds_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Configs_serviceIds_Results_List) String() string {
	str, _ := text.MarshalList(0xa28ac6cb306f77a0, s.List)
	return str
}

// Configs_serviceIds_Results_Promise is a wrapper for a Configs_serviceIds_Results promised by a client call.
type Configs_serviceIds_Results_Promise struct{ *capnp.Pipeline }

func (p Configs_serviceIds_Results_Promise) Struct() (Configs_serviceIds_Results, error) {
	s, err := p.Pipeline.Struct()
	return Configs_serviceIds_Results{s}, err
}

const schema_db8274f9144abc7e = "x\xda\x9cZ}xT\xd5\x99\x7f\xdf{\xe7#_3" +
	"\x93\xcb\x99($\x86\x19Y\x15a\x95&\xa1>\xad\xd9" +
	"\xf2\xe4K$\xc9\x1343\x03\xb5F\xf1\xe9d\xe6\x92" +
	"\x0c\xcc\xdc\x19\xee\x9dAbA\xd0\x9amqe5\xa8" +
	"Xh\xad\x1f+*}\xc4U\xb6\xecnv\xc5\x0f\x14" +
	"\x90\"\xdd\x07\x17\xabm\xe5\x11V\xd9\xa2\x95\xaeXk" +
	"\x17\x84\xce>\xef\x9993w>Ht\xffJ\xe6=" +
	"\xefy\xbf\xce\xef\x9c\xf3\xbe\xef\xb9M\xdf\xadj\x97\x9a" +
	"\xad\x17N\x05\x08LE\xab\xed\xdc\x8a\x1b\xb66\xec\xfc" +
	"\xe0.\xc5\x89\x00\x16;\x00;U\xfd)X\xd2G\x7f" +
	"\xb8w\xd3;\xbf\xbal\x14\x94\xba\xec\xc0\xdc\xb7\xaag" +
	"#X\xd2So\x1f\xbdyh\xe9\xb1\x1f\xe6G\xd8\xae" +
	"\xea3`I\xbf\xfd\xb1\xed\xa0\xfb;\xa7\xee\x85\xbc\xac" +
	"\xc7\xf8\xc0\xc7\x8e]{\xacw\xfd\xef\xbd\xe0s\xa2\x10" +
	"6Z-! [_\xdd\x06\x98~\xf9\x82\x0d\x1bn" +
	"=\xf0\xde\x18(S\xc4\xcc\xed|\xe6#\x89/\x16>" +
	"\xf0\xda\xe8F\xf0M\xc9\xcd\x1c\xab\xae\xa7\x99\x9b\xf9L" +
	"\xe3\x9f;6D\xff\xf8\xc4F\xb3\xe8\xf1\x8c\xe8]\x9c" +
	"a\x86\xfe\xd4\xd3G\x1fj\xb9\xdf\xccp,\xc3p\x9c" +
	"3<yM\xfb\xbc/^\xdb\xf4\xa0\xc9jk\xcd\x9b" +
	"`I?\xe0\x9a\x91\xda\xa5.\xdad2\xea\xc3\xea\xff" +
	"\x02Kz\xb6z\xc2X\xf9\xfd\x17\x7f\x94\x1f\x98{\x90" +
	"l\xb2\xa4\x13\x1f\x8e\x0f\xaek\xda\xbe\xd94\xb2\xb3\xba" +
	"\x97F~\xff\xd6\x7fK\xa3\xad\xcfn\x01\xa5\x0a\xd3\xb7" +
	"\xbf\xd0\xeb>\x9d\xbc\xf3\xb7`\x952A\xfa\x05\xdb^" +
	"M\xffm\xab\xbe\x150]\xf9\xe4\xd1m\xeb\x8f\xdf\xfd" +
	"\x88\xd9\xe9\xd1\x1a?\x99<VC&\xff\xb5\xde\xb7\xa9" +
	"\xbe\xefo\x1e\x07_]\x8e\xe1\xf9\x9a\x16b\x18\xe7\x0c" +
	"\x8f\xde\x1ao:\xb0\xf7\xee\xc73vX\x91\x18~]" +
	"3\x9b\x18\x8eq\x86y?\xd8\xe2\xbd\xfd\xf3\xb1\x7f\x00" +
	"\xa5J\xce\x9b\x03\xc8\xea\x1c\x1bY\xa3\x83l\x99\xe6\xd8" +
	"\xc7\x1e\xa6\xff\xde\x9b\xd2\xe7\xdd[e\xd9\x9a\x0f \x1b" +
	"u|Dk\xe7 Q\xef\xbc\xdb\xf7\xee\x13\xa7\xe2[" +
	"M\xf1\xdb\xe6\xd8\x0d\x96\xf4\xe8C\xcf\xcc\xbe\xe8\x95\xf1" +
	"'M\xc1X\xef\x98B\xc1h\xfd\xc3\x92i\xf6\x95\xcb" +
	"\x9f2\xdb\xbf\xc21@\xe6\xad\xe12\x93\x07n\xf9{" +
	"\xd7k\xef?Ub\xdec\x8e\x9f\xb1md\xd4\xdc\xad" +
	"\x8e\x05\xc8\xd68\xed\x00\xe9\xd9\xbf\x95\x98^w\xf6i" +
	"\xb3\xb7\xaas\x06\x89\x8b9\xdb\x00\xff\x1cI\xa4\xbb\xa7" +
	"O\xd9\x967p\xccI\x10\xb7\xbetp\xf7YO\xe0" +
	"\x99\x8c\xe5\x99y\xa9\xcc\xbc54/\xbd)\xd6\x11\xdd" +
	"\xfcE\xf7v\x93k\xcf;?\x02K\xba\xfa\xc4\xca%" +
	"[\xd4\xf0v\x93k\x0f:%r\xed\xa5\xab\x0e\xfc\xe5" +
	"\xd5K\x87\x9f5\xc1\x8d\x8d8\xcf\xe4D~\xfd~\xf7" +
	"\xc7\x17u\xdc\xb4\xa3\xc4\xb3\x87\x9d\x1b\xd9V'\x87\x83" +
	"s\x1fkt\x91cZ\xdf\xea%\x81\xc3w\xec0\xa9" +
	"\xb1\xbaf\x90\x9a%W~m\xe0\xa1\x06y\xa7\xc9t" +
	"v\x92\xab9\xc5\xd5\\Z\xf3\xdc\x9d\xcf]\xb6h<" +
	"o\xf9\xdc:\x177p\xf5ko\x7f\xeb\x09\xfd\x96\xf1" +
	"\xcc\xee\xcd8}\xda\xb9\x8c\x9c\xb6\xbahj\xe7\xb3\xa9" +
	"\x81O6\xed\x1f7)\xbd\xd4\xc5\xd1=\xf2\xc2m\xbd" +
	"\xcd\xbf|\xf2ES8\x1c.\xda\xa5uW\xdf\xf0\xd9" +
	"\xe9\xc7o{\xc9l\xcd)\xe7\xa7\x80\xecO\xdc\x9a\x9f" +
	"\xda\xde\x1b?\xf8\x8d\xe9\xbb\xcd\xeb\xcd\xcdA6\x8d\xeb" +
	"|\xf1\x07\xc7j\x1fX\xb6\xeeU3\xe2\xe7\xb9\xaa\x88" +
	"a>g\xd8~\xe2\xc7k\x87\xf4\x0f^\x05\x1fC\xf9" +
	"\xdce\x7f\xfb\xfe\xfb\xca'\x07\xb9\x05\xaa\xebM\xb6\x82" +
	"\xa2\xc5b\xae\x7f\x04L?wS\xf4\xf6\x7f\x7f\xe6\xec" +
	">\xd3\xb9e\xad\xf5\x93\xf9\xcagu\x87\xac\xd5{_" +
	"7\xc3\xe4\x94\x8b\x9f%\xa7\xb9\x12\xcb\x87+\xee\xd5\x8f" +
	"\x1dy\xc3d\x05\x9bVKHo\xacm\x03\x14j}" +
	"UXo\xda\xc22\xb1u\xd4na=\xb5\x17\x02\xcc" +
	"\xf5\xd5>d\x03L\xffa\xcbm\x0f=={\xdd/" +
	"A\xa9\x92\x0a\xd6y\xb4~\x0b\xdbPOs\xd6\xd7\x0f" +
	"\x01\xa6\xf7~o\xd1\x99\xcbg\xdd\xf8\xa6\x190\xdb\xeb" +
	"\x7f\x01\xc8\x9e\xaf'\xa3*\xbe\xbd\xcfr\xa5\xe2;l" +
	"\x0a\xfa\xa1\xfa\xdf\x80%\xdds\xc1\xd7~\xfa\xfa\x1d\x86" +
	"i`\xee\xcez\xbeN\xc1\xad\xff\xb2cc\xb3\xed]" +
	"S\x08\x1e\xae\x1f\xa4\x91\x8a{\xff\xd2~\xf1\xd1\xc7\x8f" +
	"\x94\xa0o}\xfdF6FV\xcd\xddP\xbf\x00\x99\xda" +
	"@\xf0\xbb\xe8\x8a\x1b\x87o\xfau\xe7q\xf3\xaa,l" +
	"\xe0\xcb\xe6k \xdb\x96\x9c\xfd\xc6\xfd\xb5-O\x1c7" +
	"GtE\x03\xdf@#\x9c\xe1~mA\xdb\x037\xb0" +
	"\xdf\x99\x8c\xdf\xdc@\x1bh\xf7\x83\xd7\xbf\xbdzd\xf8" +
	"\xf7\xe6\xad\xb7\xa6\x81/\xf8(\x9f\xd9mqo|\xf2" +
	"\xfbu'M(\x1co\xe0\xdeI\x07v4>\xf3\xbd" +
	"\xd5'\xcd`{\xac\x81\xc0\xb6\x95\xcf\xdc\xac\xfc\xd3]" +
	"G\x7f\xe7\xff\xa4\xc4\xc7=\x0d:\xdbO\x8e\xcd\xdd\xd3" +
	"`\x97\xd9+\x8d\xe4\xe3\x8c\xcf.>|\xe2\x83\x1f\x7f" +
	"b6d[#7\xe4\xf9F\x12\xb7\xe7\xd3\xee\xfb\x1a" +
	"\xfe*u\xca\x8c\xddC\x8d\xbd\xc4p\x843\xec\xfb\xe3" +
	"\xe9\xff\xf9\xf3n\xcb\xe7\xa6h\x9fk\xec$KO\xba" +
	"\x94y\xb6\x96\xf1\xcf\xcd\xe19\xde\xc8\xc3s\x92Ou" +
	"\x8c\xc4\xfe\xae\xf6?:\xce\x98]Q\xa6\x93+u\xd3" +
	"i|\xec\xd3G\xce:\xb7E\xcf\x98\x82p\xd5\xf4\x16" +
	"\x12\xfd\xfe\xe2[6\x9d\xbcr\x8dy\xa4q:?[" +
	"\xff3P\xb7\xfa\xb2C\x9f\x9f5/\x9auz+)" +
	"uLo\x83o\xa6\x83\x89\xc4\x9cP0\xa1I\x89\xd6" +
	"\x8eDbND3\x92A-\xa4^\xd2\xef\x09\xea\xc1" +
	"\x98\x91\x1b\x97\x13\xad\xfe\xfe\xae\x80\xaa\xaf\x8c\x84\xd49" +
	"\xb1\xe0\xaa\xae\xb8\xa6\x19\x97\xf4\x07]\x05lR\x01[" +
	"$|I[\x7f\xb0\x98\x81\xf4\x18\xc9\xa0\x9eT\xc3\xd7" +
	"k%\x0cr1\x83_5R\xd1\xa4\x01>\x8bl\x01" +
	"\xb0 \x80\xe2\xf0\x03\xf8jd\xf4M\x950-8\x01" +
	"5\xb4\x82\x84V@\xb36aK0\x1aY\xa9\x96\xd3" +
	"&\x18\xa2\xf1\xa1>u\xa5\x1a\xcd(\x94\x93\x86Ya" +
	"\x0b\x80\xafBF\x9f[BO\x94\xb8\xd0\x95\xdf\xd4\x80" +
	"\xe82)\xcdz\xa0\xabQ5h\xa8=\xe1I=\x10" +
	"\x9c\x80a\xac\x04\x09+\xcb\x08K\x84\xb2v^\x92\xf1" +
	"\xa0@X}\xde:9R*#\x1b\xf3\xe5\x91h4" +
	"3\x1b\x8dr\x11\x8a\x84i\xd4^\x14\x9e\xae\xb8\xb64" +
	"2d\xcc\x09\xf1\xbf\xd7Dt.B61Y\xca0" +
	"\xcd_\x151\x92\x86\xb0\x15\xcc\xea\xaeS\x93\xb7\xc6\xf5" +
	"\xe5\x1d\xe1\xb0\xae\x1a\x06@?\xa2\xaf\"\xe7\xcb\xacN" +
	"e\x96\xc7w\xb3\x8c\xbea\x09\x15D7\xc1VQ;" +
	"\x15\xd5\xe3{ZF\xdf\xcf%\\\xabe$\xf8,(" +
	"\xa5o\xb9\xff\x11\xdf\xae_\xdd\xbd\x07|\x16\x09;." +
	"A\xac\x01h\xc6;1\xad\x05c\xaa7\xbe\xd4kM" +
	"\x0e\xab\xde\xec\x0c\xef\xe5K\xe3\xbaW]\x15\x8c%\xa2" +
	"\xea\x15\xde\x99\xc9Pb\xe6\x15\xde\x99\xa9pb\xe6," +
	"\x00\xc0\x1a\x90\xb0\x06pm0c[\x19\x05_\xcf*" +
	"\xf0Ki#\xa9G\xb4!\xef\xd2\x8a\xb8\x1e#E\xd9" +
	"I\xc5:\x9a\xafn\x99\xd34\xa7eNsk\xcbU" +
	"\xa4l\xe6M-MM\xcd\xad\xe1\xc1o\xb6\xb66/" +
	"i\xfdf\xd3L\x9c\x95W\xfde\x82\x9a\x81\x13\x16\xe0" +
	"\xb35\x8f\x806\x95\xb3!\x82\x84X\x88\xa4r;\xd8" +
	"\xafz8:\xcf\x87\xf6P<\xa5%\xb1\x02$\xac(" +
	"\x14&\xcc32\x12{\xc2\xdc2W\xb1\xac\x81,\xd0" +
	"/\xa7\xad\x9ae\x059l\xa0\x13\xb0_F\x0eV\xa7" +
	"I2\x0a\xc9h\x102jd+\xe5t\xd9\x1c\x1b\xc5" +
	"!\xaa\xf8\xfc )=v\xc4\\\x96\x8d\"QV\xe6" +
	"\xdd\x09\x92r\x95\x1d\xa5\\\xca\x84\"\x05Vf\x0d\x80" +
	"\xa4\\lO\x8b\xa0\x02\xea\xed\x98\xfb\x85\xd9\x18C{" +
	"\xa1\xb1\xed\xd8\x8f%\xfb\xc9\xc8mH~\x06~\x85\x0d" +
	"i\xcb\x1e\xb6a\xb1A\xc4@\x99\xd3\xa8x\xc3Z\x0a" +
	"\x961\x1a1\x92\xaa\xa6\xea\x1d\xfct+wr\xe9\xa6" +
	"\x83Fp\x83\x87\xf3\x97@\x04\x85l\x17\x09\xa7\xf0\xbb" +
	"y\xf8E\x8d\x87\"uS\xc6\xeaARF)\xfc\"" +
	"\xc3B\x91\xc6+#:H\xca\x0a\x0a\xbfH=P\xa4" +
	"\x99\x8aJK\xb3\xc4\x8er\xee\xa2Dq\xa5*\xbe\xc1" +
	"\xcc\x92\xe6\xabM\x14\xa5\x8d2\xaf\x97/\xa9\x1c\x09\xb7" +
	"\x97\xb8a\xa2\xa08U\xda1\x1d\x0c%#+\xd5\xae" +
	"8\xd85\xcdh\xc7\xb4@<\x00\x14.'m\x8c\x94" +
	"\x96\x8c\xc4T\xbauB\xcb\xafI\xc5\x12<\x94\xf6\"" +
	"(\x17\xdd:\x9c\x130\x81\x0e\x90\xd0Qz\xde\xe6\x97" +
	"\xd0S\xf6\x8a\xcb\x9f\xe9\xd9\xbdS\xa2\xf0\xab\xee\x9d\xac" +
	"b=\xe3M\xc9\xe5l\xcb;\xaa\xa5b]\xfd\x8bK" +
	"\xe1W`\xb7\xbfM\x9d\xf0h\x98\xec\"D\x01gT" +
	"\xf3[Y\xd4\xd1(\xf2k\xc5GX\x9aOX\x125" +
	"\"\x8aB_\xb9\x9a\xd6\xbd\x99\xb0$\x9a\x02(\xf2P" +
	"\xe5\xd2\x16\x90\x94i\x02\x13Y\xa3\xf9\xeaz\x82\x19\\" +
	"\x14\xadr\x99\x13\xab\xf8\xc2+N\x83\xca\x85`\xc0\x04" +
	"\x03\xc1\x08rO\xb8\xe4\x0c\xaf(8'\xb2\xea\x0a\xe3" +
	"]n+g \\\xf60\xed\xccG_\\RX\x9b" +
	"\xef&\x00b-L\x02\xec\xe2\xdb[*\xceV\xce\x93" +
	"\xb1e\x8e\xc8\xf2\xf7\x85\xd9\xac,\x1f*\xf9\xae\x02 " +
	"*\xe7\xbd\x88\"\x93\xe7G9\xe8\x97\xcf\x8f\x8a0-" +
	"\xa4\xc1W\xbb\xd1\xa4D\xebB5\x16H\x06\x93\xc6\x9c" +
	"\xce\x91@\xe46\x01Z!c\xfel\x00_\xbb\x8c\xbe" +
	">Sb\xd2C\xae_#\xa3\xaf_BE\x92\xdc(" +
	"\x01(\x0bI[\xb7\x8c\xbeE\x12\xba\x8c\xc8m\xaaP" +
	"\xb66\x16\x8cF\xe3!Cx\xe1Y\xaa\xab\xaaQ\xe2" +
	"\xd3DG|\xf1u`\xf2?\x965\x7f\xd2\x04\xd6 " +
	".\xac\x15\x15l\x11j\x0a3\xc2r(\xfc\xb2k\x83" +
	"\"\xa4\xdc\x164\xd5\xed\x0a\xb6\xb6\xf1 \xab\xbeUB" +
	".\xbbZnaW\xcb\x9e@T\x961\xb0J\xceG" +
	"\x99\xa5\xe4\x016\"{\x02?\xa7\x91\x97\xe5|\xa8\xd9" +
	".y\x06\xdb%{\x02\x9f\xc92\xfa-\x12*\xb2\xec" +
	"F\x19\x80\x9d\x93;\xd99\xd9\x13\xf8\x96E\xc6@7" +
	"\x8dX,n\xb4\x00\xb0\xf9\x96N6\xdf\xe2\x09\xac\xa3" +
	"\x91{h\xc4ju\xa3\x95JpK\x0b[o\xf1\x04" +
	"^\xa6\x917h\xc4fs\xa3\x0d\x80\xed\xb7\xf8\xd9A" +
	"\x8b\xc7o\x951Pc\x95P\xb1\xdb\xdd\xbc>\xab\xb4" +
	"v\xb2J\xab'\xd0N#}4RQ\xe1\xc6\x0a\x00" +
	"\xd6c\xede\x0b\xad\x9e\xc0:\x1a\xb9\x87F*+\xdd" +
	"XIj\xac~\xb6\xc1\xea\x09\xbc@#\xaf\xd3HU" +
	"\x95\x1b\xab\x00\xd8\x1e\xeb2\xb6\xdf\xea\x09Xl2\x06" +
	"jm\x12*\xd5\xd5n\xac\x06`\x0e\xdb Sl\x9e" +
	"@7\x8d,\xa2\x91\x9a\x1a7\xa5\xa2\xccg\x1b\x00\x08" +
	"\xf4\x13\xfdf\xa2;\x1cnt\x00\xb0\x1bm\xbd\x00\x81" +
	"\xef\x10=Lt\xa7\xd3\x8dN\x00\x16\xe4\xfc\xdf%z" +
	"\x94\xe8.\x97\x1b]\x00,\xc2\xf9\x87\x89\x9e$zm" +
	"\xad\x1bk\x01\xd8\x0a\xdb @ A\xf4\xd5DW\x14" +
	"7*\x00l\xc4\xe6\x07\x08\xac\"\xfa]D\x9f2\xc5" +
	"\x8dS\x00\xd8\x1d\x9c\x7f\x1d\xd1\xef!:cnd\xe4" +
	"\xb5\xad\x05 p\x17\xd1\xef#\xba\xdb\xedF7\x00\xdb" +
	"\xc0\xf5\xdeC\xf4\x1f\x11\xbd\xae\xce\x8du\x00\xecA[" +
	"+@\xe0>\xa2\xff\x84\xe8\x17\\\xe0\xc6\x0b\x00\xd8f" +
	"N\x7f\x80\xe8\x8f\x12\xfd\xc2\x0b\xddx!\x00{\xd8\xb6" +
	"\x0c \xf0\x13\xa2?m\x93\x10\xa7\xbaq*\x00\xdbj" +
	"\xeb\x04\x08<J\xe4\x17\x88}\x1a\xbaq\x1a\x00\x1b\xe7" +
	"j\xff\x95\xe8\x87\x89^\xdf\xe4\xc6z\x00v\x88\x9b\xf9" +
	"\x06\xd1\xdf!zC\xb3\x1b\x1b\x00\xd8[\xdc\xad\xc3D" +
	"?J\xf4\x8b\xa6\xb9\xf1\"\x00v\xc4\xa6\x03\x04\xde%" +
	"\xfa\x09\xa27Jnl\x04`\xc7\xb9\x99G\x89~\xd6" +
	"&\xd1\x8d\x14\x8d\x87&\xa8Xz1\xddA,\xde\x88" +
	"a\xf1\x0e\x8e$U\x83\xd7\x14D\x0a&\xd5\xb0wX" +
	"\x0d&\xbc\xf1\xc1ej(i\x00\xe6\xb6Z2\x9e\x0c" +
	"F;\xa2Q\x90\xcbJ\xbf\"+\xfd7\x98^\x94\xe5" +
	"\xb4q\x1d\xdeP*\x96\x8a\x06)C\xcaj\xcb\xab\xa2" +
	"\xfa\xc5\xa4N6\xe6\x00\x08\x85vc\xa4\\Yty" +
	"V\xcf\xbfa:0b\x90\xfc\xa4uX\xf5r\xeb\xf2" +
	"\xde\xc4\xd4X\\\x1f\xf1\xc6\x07\x93\xc1\x88F\x8a\xf4x" +
	"\xcc\x9bl\x1bV\xbd\xd7\x07L:\xd6F\xe3\xf1\xe5\xa9" +
	"D9=MY=S\xa4t_\x86\xc9k'eT" +
	"\xe2\xa5b\x83\xaaNj\x12\xf1\x88\x96TuoV\x8c" +
	"7\xa1\xeaK\xe3zL\x0d{\x07G8k&?B" +
	"\xd5\xa42{0O\x1c\xc2\x85\x19&\xaf-\xab\xd2\x14" +
	"C~\xa7\x90r\xf3:\xe5b*\x87M\xeee\x0e\xfd" +
	"\x09\x82\xf83L_K,\xde\x88a\xfdrz\x96\xea" +
	".U5\xebH\xd30\xe1\x09p\"\xd0-\xc3tw" +
	"\x96\xd1\xc2Q1\x01\xf0\\\x1cy\xf9\x88\x11=0!" +
	"\x18vd\xa4\x13 \xacf\xd9\\by,\x0c{\x8a" +
	"\xb0\xc0\x1d\xe9\x09GU\xa0\xfb\xfc\xbc\x8e\xf83\xaa\x88" +
	"\xd1\x92\xf7#\xa2y#\xe1\xa8\xea\xbd<\xa5\xa5\x0c5" +
	"<\xcbk$\x82\x9a\x81%\xe2\xb5\xc5\x06\xa0ZF\xbc" +
	"7+~FV\xbc\x962d\xb5P\xbeve\xcaP" +
	"I\xb0]3\x8a\x05\xfb\xd5\xa8\x0a\xae\xa0\xa1\x86'\xc0" +
	"\xd5G\x19\xd9\xc4k#\xd6\x82eH\x0c\x8f\x18\x91P" +
	"0*\xc2\xa5\xab\xc9\x94N\xe1J\xc6\x09\x19\xae2\xc1" +
	"\xba~p\x99\x0a\xf6Pr\x12\x84ugY\xad\x84\x9f" +
	"\x92-T\xe6\xdcq\x85\x92\x05\x0e\xf2\x8c\xb2G[\x0c" +
	"\xb2\xa1\x16\x12\x03#Tc\xe5h\xb1@\"\xa8\x153" +
	"rb1cW04\xac\xf6h`_l\xe6\xe4\xd4" +
	"\xc0\x08`>Q\x1aL\x85\x96w\x07\x8da\xb0\x07F" +
	"\xf2\xc9\xd4P\x97\xe9W:\x9e\x1cV\xf5B\x0dm\x9a" +
	"\xba*\xb9\xa0+\xf73\x1a4L?\xd3\x89`\xcaP" +
	"\x17\xc5\x93\xe0\x0aF\xaf\xcb\x09Z\xcb\xc9\xd7\x95\xd4\\" +
	"\x9c<_\x0b\x93\xfc\xc2!\x8f\x96\x8a-\xe8\xca%\x98" +
	"Z*vm\\\x0f\xa9`\x0f\x9b\xa8C]]\xfd\x8b" +
	"\xaf\xd5\x83\xe0\x09%#q\x0d\xabA\xc2j\xc0\xb6A" +
	"\x9e\x15\x09\x89\xb5\xf9\x94\x09\xb0\xb8M\xd2\xc7K\x1eY" +
	"\x8dR\x9eZ\xcb3\xcfY-<\xd9\xbex6\x00J" +
	"\xca4\xfa#+J\x0b\x80'\xac\x0e\xa6\x86\\\x11m" +
	"i\xdcukP\xd7<\xaa\xae\xc7\xf5\x92\xb2'<y" +
	"\xf6\x1cL$z&n1\x8a\xf4s\xe2z\xb7L\x17" +
	"q\x82b\xa8\xb8NC\x91\xf6\xa2\xa9M!^\x09P" +
	"\xbcD(c~\x90\x94\xf5TZ\x8a7:\x14\x8fK" +
	"\xca\x9aV\xd1\xa6\x10\x8du\x14\xddrE]&\xda\x14" +
	"\xa2\xb5\x8e\xe2\xbdH\xf1\xf5\x8a6\x85x\x1bC\xf1\xe4" +
	"\xa8\xcc\xf3\xf36Ez(\xfemU7\"q@\xad" +
	"\x1d\xdb2\x85I;\x87\xc2\x82\xb8\x1eO\x81+\x19\xd1" +
	"\xd4vL\x8b\x94\x9dW\xad\xe6\x9eBI\xedZ\xd8\xc6" +
	".W1\x15,R\xd9\xf6\x8e\xa9V\x10\x06je\xfb" +
	"\x0e\xe6zne\x86\xaf\xa4\xb8-*\x0b\x8b{\x0dr" +
	"I\xed[\x16Y_\xb5\xc3Q\xd6\x85\xf3\x95\xb4\xd96" +
	"\xc8d\x15k\x96\x0f\x95\xfc\x83XQ\xc5\x0a\x1e.\x91" +
	"\x90\xd6\xc4\x91&^\xb9Q\xbc\xd7\xb1\x15X\x0f\x12S" +
	"\x91\xb0&^FQ|\x8e\xc0nD?H\xcc\x87v" +
	"\x94\xc4\x17\x16\xf9G[6\x1f{Ab\xf3\x90\xf0&" +
	"\xbe\x9a@\xf1\x95\x04k\xe6sg\xa1\x1d-\xe2\xe9:" +
	"\xff\xae\xcc\x1a\xf9\xdc:\xb4\xa35\xf7\xcc\x8b\xe2=\x8d" +
	"U\xe2\x00H\x0c\xd1\x8e6\xf1nozf\xfaS'" +
	"H\xca\x87v\xb4\xe7^\x0fQ<\x82+Gt\x90\x94" +
	"\xb7\xecX\x91\xfbd\x02\xc5\xe3\x98\xb2\x7f\x00$\xe5\x15" +
	";V\xe6\xbe\x96@\xf1.\xa9\xec\x9c\x0d\x92\xb2\xcd\x8e" +
	"U\xb9\xe7r\x14Ot\xca\xc3\xa4o\xcc\x8e\xd5\xb9\x97" +
	"@\x14o\xc5\xca(\x8d\x8dd\x9b9\xa6\x07\x91vS" +
	"\x8fEl\x12\xf1\xdcS\xdc\xf6)j\xd9\xae\xcd\xfe$" +
	"\x81\xd9\xa3\x07<\x1c\x8bf\x8aL\x0c.:\xb8\xdas" +
	"Ph\xcf\xb51J\xf6a\xd1cLYP\x9b\xc1\x95" +
	"\xb5\x01\x95\xfcW\x0cE\xe0*<\xf8D\xd72\xd3\x9a" +
	"\xff\x7fu2*\xce+\xb0\xa4\xfdT\xfa\xb83Y\xdf" +
	"\xd3\xd47?\xdf\x91`\xe4b3\xf1\xbe\xcb\x87&\xf7" +
	"\x19D\x99NQ\xbe\xb9\xc3\x8fN:8\xcb>N\x16" +
	"7A&h\x94\x14\xc8\x9a\xac\xc9Y\x10\xe3\xff\x0b\x00" +
	"\x00\xff\xff\x0c\xe6F\xea"

func init() {
	schemas.Register(schema_db8274f9144abc7e,
		0x84e4b51ba5570071,
		0x8526d6d896c688e0,
		0x88e166675c857e18,
		0x8ff15814cd06ecd7,
		0x8ff88405c5bd0dec,
		0x91dfcb778d8d16c0,
		0x9285c4944dfb709f,
		0x92a4f36c8d41b673,
		0x933297e0a8a77222,
		0x9596c4fb3d4044a6,
		0x965465bd75220f94,
		0x98be837673e8652a,
		0x99ad308062b9e970,
		0x9aae3a8502e6d5eb,
		0x9f8ae589a9e0a609,
		0xa23b4c1a964c722b,
		0xa28ac6cb306f77a0,
		0xa391f67e209a873d,
		0xa504000ac6204c12,
		0xa56ff1a4dc4cdcd8,
		0xa6b9c11c2aac9785,
		0xa76b7607195dee3a,
		0xa7e3c40f8e5ecb74,
		0xa8fc15721302db2a,
		0xa9121e4800ff7069,
		0xac531ffcc2cdbf05,
		0xad48fb996c416d96,
		0xad64659a5d76e80b,
		0xae6825c3fecb35bf,
		0xb25b411cec149334,
		0xb281d4535d7c4c6e,
		0xb5031b975a2f2d5d,
		0xb95426b082b00c25,
		0xb95e72a43cd7c47c,
		0xb9c996f05a75ae42,
		0xbea6ce314a7abc79,
		0xbf7aa2f9f4573915,
		0xc21e37cdb9df069e,
		0xc3806a9410e187be,
		0xc3e472677f9be8ad,
		0xc7fcacbb7e6c5bb0,
		0xc8c60b05d115f411,
		0xccdde1728f71e904,
		0xcdf011e3e3860026,
		0xce802aa8977a9aee,
		0xd2592928fa547bc6,
		0xd451112d04c75608,
		0xd47381c89e2f1649,
		0xdc063192b2b7a561,
		0xdda2e02140fe8f08,
		0xe542d95b68592c1c,
		0xe5a432109337fc5d,
		0xe71357943f476e93,
		0xeb68797cd74f95c2,
		0xed1583a692140448,
		0xed7c7bac1db2cb02,
		0xf052e7e084b31199,
		0xf09be4e8d421f422,
		0xf175231b9048f2c5,
		0xf604c2f7eff9f3c7,
		0xf6b932063d110fed,
		0xfa41cf108b6d790d,
		0xfa6ca90efc9ff291,
		0xfa7d2ded965e55e3,
		0xfcf6d1267c1553d3)
}
